// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type CheckApprovalInitParameters struct {

	// Specifies a list of approver IDs.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/security/v1alpha1.Group
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("origin_id",false)
	Approvers []*string `json:"approvers,omitempty" tf:"approvers,omitempty"`

	// References to Group in security to populate approvers.
	// +kubebuilder:validation:Optional
	ApproversRefs []v1.NamespacedReference `json:"approversRefs,omitempty" tf:"-"`

	// Selector for a list of Group in security to populate approvers.
	// +kubebuilder:validation:Optional
	ApproversSelector *v1.NamespacedSelector `json:"approversSelector,omitempty" tf:"-"`

	// The instructions for the approvers.
	Instructions *string `json:"instructions,omitempty" tf:"instructions,omitempty"`

	// The minimum number of approvers. This property is applicable when there is more than 1 approver.
	MinimumRequiredApprovers *float64 `json:"minimumRequiredApprovers,omitempty" tf:"minimum_required_approvers,omitempty"`

	// The project ID. Changing this forces a new Approval Check to be created.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`

	// Can the requestor approve? Defaults to false.
	RequesterCanApprove *bool `json:"requesterCanApprove,omitempty" tf:"requester_can_approve,omitempty"`

	// The ID of the resource being protected by the check. Changing this forces a new Approval Check to be created.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/serviceendpoint/v1alpha1.ServiceendpointGeneric
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	TargetResourceID *string `json:"targetResourceId,omitempty" tf:"target_resource_id,omitempty"`

	// Reference to a ServiceendpointGeneric in serviceendpoint to populate targetResourceId.
	// +kubebuilder:validation:Optional
	TargetResourceIDRef *v1.NamespacedReference `json:"targetResourceIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointGeneric in serviceendpoint to populate targetResourceId.
	// +kubebuilder:validation:Optional
	TargetResourceIDSelector *v1.NamespacedSelector `json:"targetResourceIdSelector,omitempty" tf:"-"`

	// The type of resource being protected by the check. Valid values: endpoint, environment, queue, repository, securefile, variablegroup. Changing this forces a new Approval Check to be created.
	TargetResourceType *string `json:"targetResourceType,omitempty" tf:"target_resource_type,omitempty"`

	// The timeout in minutes for the approval.  Defaults to 43200.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

type CheckApprovalObservation struct {

	// Specifies a list of approver IDs.
	Approvers []*string `json:"approvers,omitempty" tf:"approvers,omitempty"`

	// The ID of the check.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The instructions for the approvers.
	Instructions *string `json:"instructions,omitempty" tf:"instructions,omitempty"`

	// The minimum number of approvers. This property is applicable when there is more than 1 approver.
	MinimumRequiredApprovers *float64 `json:"minimumRequiredApprovers,omitempty" tf:"minimum_required_approvers,omitempty"`

	// The project ID. Changing this forces a new Approval Check to be created.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Can the requestor approve? Defaults to false.
	RequesterCanApprove *bool `json:"requesterCanApprove,omitempty" tf:"requester_can_approve,omitempty"`

	// The ID of the resource being protected by the check. Changing this forces a new Approval Check to be created.
	TargetResourceID *string `json:"targetResourceId,omitempty" tf:"target_resource_id,omitempty"`

	// The type of resource being protected by the check. Valid values: endpoint, environment, queue, repository, securefile, variablegroup. Changing this forces a new Approval Check to be created.
	TargetResourceType *string `json:"targetResourceType,omitempty" tf:"target_resource_type,omitempty"`

	// The timeout in minutes for the approval.  Defaults to 43200.
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`

	// The version of the check.
	Version *float64 `json:"version,omitempty" tf:"version,omitempty"`
}

type CheckApprovalParameters struct {

	// Specifies a list of approver IDs.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/security/v1alpha1.Group
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("origin_id",false)
	// +kubebuilder:validation:Optional
	Approvers []*string `json:"approvers,omitempty" tf:"approvers,omitempty"`

	// References to Group in security to populate approvers.
	// +kubebuilder:validation:Optional
	ApproversRefs []v1.NamespacedReference `json:"approversRefs,omitempty" tf:"-"`

	// Selector for a list of Group in security to populate approvers.
	// +kubebuilder:validation:Optional
	ApproversSelector *v1.NamespacedSelector `json:"approversSelector,omitempty" tf:"-"`

	// The instructions for the approvers.
	// +kubebuilder:validation:Optional
	Instructions *string `json:"instructions,omitempty" tf:"instructions,omitempty"`

	// The minimum number of approvers. This property is applicable when there is more than 1 approver.
	// +kubebuilder:validation:Optional
	MinimumRequiredApprovers *float64 `json:"minimumRequiredApprovers,omitempty" tf:"minimum_required_approvers,omitempty"`

	// The project ID. Changing this forces a new Approval Check to be created.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`

	// Can the requestor approve? Defaults to false.
	// +kubebuilder:validation:Optional
	RequesterCanApprove *bool `json:"requesterCanApprove,omitempty" tf:"requester_can_approve,omitempty"`

	// The ID of the resource being protected by the check. Changing this forces a new Approval Check to be created.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/serviceendpoint/v1alpha1.ServiceendpointGeneric
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	TargetResourceID *string `json:"targetResourceId,omitempty" tf:"target_resource_id,omitempty"`

	// Reference to a ServiceendpointGeneric in serviceendpoint to populate targetResourceId.
	// +kubebuilder:validation:Optional
	TargetResourceIDRef *v1.NamespacedReference `json:"targetResourceIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointGeneric in serviceendpoint to populate targetResourceId.
	// +kubebuilder:validation:Optional
	TargetResourceIDSelector *v1.NamespacedSelector `json:"targetResourceIdSelector,omitempty" tf:"-"`

	// The type of resource being protected by the check. Valid values: endpoint, environment, queue, repository, securefile, variablegroup. Changing this forces a new Approval Check to be created.
	// +kubebuilder:validation:Optional
	TargetResourceType *string `json:"targetResourceType,omitempty" tf:"target_resource_type,omitempty"`

	// The timeout in minutes for the approval.  Defaults to 43200.
	// +kubebuilder:validation:Optional
	Timeout *float64 `json:"timeout,omitempty" tf:"timeout,omitempty"`
}

// CheckApprovalSpec defines the desired state of CheckApproval
type CheckApprovalSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            CheckApprovalParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CheckApprovalInitParameters `json:"initProvider,omitempty"`
}

// CheckApprovalStatus defines the observed state of CheckApproval.
type CheckApprovalStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CheckApprovalObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CheckApproval is the Schema for the CheckApprovals API. Manages an Approval Check.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azuredevops}
type CheckApproval struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.targetResourceType) || (has(self.initProvider) && has(self.initProvider.targetResourceType))",message="spec.forProvider.targetResourceType is a required parameter"
	Spec   CheckApprovalSpec   `json:"spec"`
	Status CheckApprovalStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CheckApprovalList contains a list of CheckApprovals
type CheckApprovalList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CheckApproval `json:"items"`
}

// Repository type metadata.
var (
	CheckApproval_Kind             = "CheckApproval"
	CheckApproval_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CheckApproval_Kind}.String()
	CheckApproval_KindAPIVersion   = CheckApproval_Kind + "." + CRDGroupVersion.String()
	CheckApproval_GroupVersionKind = CRDGroupVersion.WithKind(CheckApproval_Kind)
)

func init() {
	SchemeBuilder.Register(&CheckApproval{}, &CheckApprovalList{})
}
