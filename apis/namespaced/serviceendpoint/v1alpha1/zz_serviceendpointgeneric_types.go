// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type ServiceendpointGenericInitParameters struct {

	// The Service Endpoint description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The password or token key used to authenticate to the server url using basic authentication.
	// The password or token key to use for the generic service connection.
	PasswordSecretRef *v1.LocalSecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// The ID of the project.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`

	// The URL of the server associated with the service endpoint.
	// The server URL of the generic service connection.
	ServerURL *string `json:"serverUrl,omitempty" tf:"server_url,omitempty"`

	// The service endpoint name.
	ServiceEndpointName *string `json:"serviceEndpointName,omitempty" tf:"service_endpoint_name,omitempty"`

	// The username used to authenticate to the server url using basic authentication.
	// The username to use for the generic service connection.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type ServiceendpointGenericObservation struct {

	// +mapType=granular
	Authorization map[string]*string `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// The Service Endpoint description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the service endpoint.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the project.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The URL of the server associated with the service endpoint.
	// The server URL of the generic service connection.
	ServerURL *string `json:"serverUrl,omitempty" tf:"server_url,omitempty"`

	// The service endpoint name.
	ServiceEndpointName *string `json:"serviceEndpointName,omitempty" tf:"service_endpoint_name,omitempty"`

	// The username used to authenticate to the server url using basic authentication.
	// The username to use for the generic service connection.
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

type ServiceendpointGenericParameters struct {

	// The Service Endpoint description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The password or token key used to authenticate to the server url using basic authentication.
	// The password or token key to use for the generic service connection.
	// +kubebuilder:validation:Optional
	PasswordSecretRef *v1.LocalSecretKeySelector `json:"passwordSecretRef,omitempty" tf:"-"`

	// The ID of the project.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`

	// The URL of the server associated with the service endpoint.
	// The server URL of the generic service connection.
	// +kubebuilder:validation:Optional
	ServerURL *string `json:"serverUrl,omitempty" tf:"server_url,omitempty"`

	// The service endpoint name.
	// +kubebuilder:validation:Optional
	ServiceEndpointName *string `json:"serviceEndpointName,omitempty" tf:"service_endpoint_name,omitempty"`

	// The username used to authenticate to the server url using basic authentication.
	// The username to use for the generic service connection.
	// +kubebuilder:validation:Optional
	Username *string `json:"username,omitempty" tf:"username,omitempty"`
}

// ServiceendpointGenericSpec defines the desired state of ServiceendpointGeneric
type ServiceendpointGenericSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ServiceendpointGenericParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceendpointGenericInitParameters `json:"initProvider,omitempty"`
}

// ServiceendpointGenericStatus defines the observed state of ServiceendpointGeneric.
type ServiceendpointGenericStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceendpointGenericObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceendpointGeneric is the Schema for the ServiceendpointGenerics API. Manages a generic service endpoint within Azure DevOps, which can be used to authenticate to any external server using basic authentication via a username and password.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azuredevops}
type ServiceendpointGeneric struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serverUrl) || (has(self.initProvider) && has(self.initProvider.serverUrl))",message="spec.forProvider.serverUrl is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceEndpointName) || (has(self.initProvider) && has(self.initProvider.serviceEndpointName))",message="spec.forProvider.serviceEndpointName is a required parameter"
	Spec   ServiceendpointGenericSpec   `json:"spec"`
	Status ServiceendpointGenericStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceendpointGenericList contains a list of ServiceendpointGenerics
type ServiceendpointGenericList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceendpointGeneric `json:"items"`
}

// Repository type metadata.
var (
	ServiceendpointGeneric_Kind             = "ServiceendpointGeneric"
	ServiceendpointGeneric_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceendpointGeneric_Kind}.String()
	ServiceendpointGeneric_KindAPIVersion   = ServiceendpointGeneric_Kind + "." + CRDGroupVersion.String()
	ServiceendpointGeneric_GroupVersionKind = CRDGroupVersion.WithKind(ServiceendpointGeneric_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceendpointGeneric{}, &ServiceendpointGenericList{})
}
