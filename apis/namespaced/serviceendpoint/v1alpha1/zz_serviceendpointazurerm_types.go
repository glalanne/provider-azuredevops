// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type FeaturesInitParameters struct {

	// Whether or not to validate connection with Azure after create or update operations. Defaults to false
	// Whether or not to validate connection with azure after create or update operations
	Validate *bool `json:"validate,omitempty" tf:"validate,omitempty"`
}

type FeaturesObservation struct {

	// Whether or not to validate connection with Azure after create or update operations. Defaults to false
	// Whether or not to validate connection with azure after create or update operations
	Validate *bool `json:"validate,omitempty" tf:"validate,omitempty"`
}

type FeaturesParameters struct {

	// Whether or not to validate connection with Azure after create or update operations. Defaults to false
	// Whether or not to validate connection with azure after create or update operations
	// +kubebuilder:validation:Optional
	Validate *bool `json:"validate,omitempty" tf:"validate,omitempty"`
}

type ServiceendpointAzurermCredentialsInitParameters struct {

	// The service principal certificate. This not required if service_endpoint_authentication_scheme is set to WorkloadIdentityFederation.
	ServiceprincipalcertificateSecretRef *v1.LocalSecretKeySelector `json:"serviceprincipalcertificateSecretRef,omitempty" tf:"-"`

	// The service principal application ID
	// The service principal id which should be used.
	Serviceprincipalid *string `json:"serviceprincipalid,omitempty" tf:"serviceprincipalid,omitempty"`

	// The service principal secret. This not required if service_endpoint_authentication_scheme is set to WorkloadIdentityFederation.
	ServiceprincipalkeySecretRef *v1.LocalSecretKeySelector `json:"serviceprincipalkeySecretRef,omitempty" tf:"-"`
}

type ServiceendpointAzurermCredentialsObservation struct {

	// The service principal application ID
	// The service principal id which should be used.
	Serviceprincipalid *string `json:"serviceprincipalid,omitempty" tf:"serviceprincipalid,omitempty"`
}

type ServiceendpointAzurermCredentialsParameters struct {

	// The service principal certificate. This not required if service_endpoint_authentication_scheme is set to WorkloadIdentityFederation.
	// +kubebuilder:validation:Optional
	ServiceprincipalcertificateSecretRef *v1.LocalSecretKeySelector `json:"serviceprincipalcertificateSecretRef,omitempty" tf:"-"`

	// The service principal application ID
	// The service principal id which should be used.
	// +kubebuilder:validation:Optional
	Serviceprincipalid *string `json:"serviceprincipalid" tf:"serviceprincipalid,omitempty"`

	// The service principal secret. This not required if service_endpoint_authentication_scheme is set to WorkloadIdentityFederation.
	// +kubebuilder:validation:Optional
	ServiceprincipalkeySecretRef *v1.LocalSecretKeySelector `json:"serviceprincipalkeySecretRef,omitempty" tf:"-"`
}

type ServiceendpointAzurermInitParameters struct {

	// The Management group ID of the Azure targets.
	// The Azure managementGroup Id which should be used.
	AzurermManagementGroupID *string `json:"azurermManagementGroupId,omitempty" tf:"azurerm_management_group_id,omitempty"`

	// The Management group Name of the targets.
	// The Azure managementGroup name which should be used.
	AzurermManagementGroupName *string `json:"azurermManagementGroupName,omitempty" tf:"azurerm_management_group_name,omitempty"`

	// The Tenant ID of the service principal.
	// The service principal tenant id which should be used.
	AzurermSpnTenantid *string `json:"azurermSpnTenantid,omitempty" tf:"azurerm_spn_tenantid,omitempty"`

	// The Subscription ID of the Azure targets.
	// The Azure subscription Id which should be used.
	AzurermSubscriptionID *string `json:"azurermSubscriptionId,omitempty" tf:"azurerm_subscription_id,omitempty"`

	// The Subscription Name of the targets.
	// The Azure subscription name which should be used.
	AzurermSubscriptionName *string `json:"azurermSubscriptionName,omitempty" tf:"azurerm_subscription_name,omitempty"`

	// A credentials block as defined below.
	Credentials *ServiceendpointAzurermCredentialsInitParameters `json:"credentials,omitempty" tf:"credentials,omitempty"`

	// Service connection description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The Cloud Environment to use. Defaults to AzureCloud. Possible values are AzureCloud, AzureChinaCloud, AzureUSGovernment, AzureGermanCloud and AzureStack. Changing this forces a new resource to be created.
	// Environment (Azure Cloud type)
	Environment *string `json:"environment,omitempty" tf:"environment,omitempty"`

	// A features block as defined below.
	Features *FeaturesInitParameters `json:"features,omitempty" tf:"features,omitempty"`

	// The ID of the project.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`

	// The resource group used for scope of automatic service endpoint.
	// Scope Resource Group
	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group,omitempty"`

	// The server URL of the service endpoint. Changing this forces a new resource to be created.
	ServerURL *string `json:"serverUrl,omitempty" tf:"server_url,omitempty"`

	// Specifies the type of Azure Resource Manager Service Endpoint. Possible values are WorkloadIdentityFederation, ManagedServiceIdentity or ServicePrincipal. Defaults to ServicePrincipal for backwards compatibility.
	// The AzureRM Service Endpoint Authentication Scheme, this can be 'WorkloadIdentityFederation', 'ManagedServiceIdentity' or 'ServicePrincipal'.
	ServiceEndpointAuthenticationScheme *string `json:"serviceEndpointAuthenticationScheme,omitempty" tf:"service_endpoint_authentication_scheme,omitempty"`

	// The Service Endpoint Name.
	ServiceEndpointName *string `json:"serviceEndpointName,omitempty" tf:"service_endpoint_name,omitempty"`
}

type ServiceendpointAzurermObservation struct {

	// +mapType=granular
	Authorization map[string]*string `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// The Management group ID of the Azure targets.
	// The Azure managementGroup Id which should be used.
	AzurermManagementGroupID *string `json:"azurermManagementGroupId,omitempty" tf:"azurerm_management_group_id,omitempty"`

	// The Management group Name of the targets.
	// The Azure managementGroup name which should be used.
	AzurermManagementGroupName *string `json:"azurermManagementGroupName,omitempty" tf:"azurerm_management_group_name,omitempty"`

	// The Tenant ID of the service principal.
	// The service principal tenant id which should be used.
	AzurermSpnTenantid *string `json:"azurermSpnTenantid,omitempty" tf:"azurerm_spn_tenantid,omitempty"`

	// The Subscription ID of the Azure targets.
	// The Azure subscription Id which should be used.
	AzurermSubscriptionID *string `json:"azurermSubscriptionId,omitempty" tf:"azurerm_subscription_id,omitempty"`

	// The Subscription Name of the targets.
	// The Azure subscription name which should be used.
	AzurermSubscriptionName *string `json:"azurermSubscriptionName,omitempty" tf:"azurerm_subscription_name,omitempty"`

	// A credentials block as defined below.
	Credentials *ServiceendpointAzurermCredentialsObservation `json:"credentials,omitempty" tf:"credentials,omitempty"`

	// Service connection description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The Cloud Environment to use. Defaults to AzureCloud. Possible values are AzureCloud, AzureChinaCloud, AzureUSGovernment, AzureGermanCloud and AzureStack. Changing this forces a new resource to be created.
	// Environment (Azure Cloud type)
	Environment *string `json:"environment,omitempty" tf:"environment,omitempty"`

	// A features block as defined below.
	Features *FeaturesObservation `json:"features,omitempty" tf:"features,omitempty"`

	// The ID of the service endpoint.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the project.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The resource group used for scope of automatic service endpoint.
	// Scope Resource Group
	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group,omitempty"`

	// The server URL of the service endpoint. Changing this forces a new resource to be created.
	ServerURL *string `json:"serverUrl,omitempty" tf:"server_url,omitempty"`

	// Specifies the type of Azure Resource Manager Service Endpoint. Possible values are WorkloadIdentityFederation, ManagedServiceIdentity or ServicePrincipal. Defaults to ServicePrincipal for backwards compatibility.
	// The AzureRM Service Endpoint Authentication Scheme, this can be 'WorkloadIdentityFederation', 'ManagedServiceIdentity' or 'ServicePrincipal'.
	ServiceEndpointAuthenticationScheme *string `json:"serviceEndpointAuthenticationScheme,omitempty" tf:"service_endpoint_authentication_scheme,omitempty"`

	// The Service Endpoint Name.
	ServiceEndpointName *string `json:"serviceEndpointName,omitempty" tf:"service_endpoint_name,omitempty"`

	// The Application(Client) ID of the Service Principal.
	ServicePrincipalID *string `json:"servicePrincipalId,omitempty" tf:"service_principal_id,omitempty"`

	// The issuer if service_endpoint_authentication_scheme is set to WorkloadIdentityFederation. This looks like https://vstoken.dev.azure.com/00000000-0000-0000-0000-000000000000, where the GUID is the Organization ID of your Azure DevOps Organisation.
	// The issuer of the workload identity federation service principal.
	WorkloadIdentityFederationIssuer *string `json:"workloadIdentityFederationIssuer,omitempty" tf:"workload_identity_federation_issuer,omitempty"`

	// The subject if service_endpoint_authentication_scheme is set to WorkloadIdentityFederation. This looks like sc://<organisation>/<project>/<service-connection-name>.
	// The subject of the workload identity federation service principal.
	WorkloadIdentityFederationSubject *string `json:"workloadIdentityFederationSubject,omitempty" tf:"workload_identity_federation_subject,omitempty"`
}

type ServiceendpointAzurermParameters struct {

	// The Management group ID of the Azure targets.
	// The Azure managementGroup Id which should be used.
	// +kubebuilder:validation:Optional
	AzurermManagementGroupID *string `json:"azurermManagementGroupId,omitempty" tf:"azurerm_management_group_id,omitempty"`

	// The Management group Name of the targets.
	// The Azure managementGroup name which should be used.
	// +kubebuilder:validation:Optional
	AzurermManagementGroupName *string `json:"azurermManagementGroupName,omitempty" tf:"azurerm_management_group_name,omitempty"`

	// The Tenant ID of the service principal.
	// The service principal tenant id which should be used.
	// +kubebuilder:validation:Optional
	AzurermSpnTenantid *string `json:"azurermSpnTenantid,omitempty" tf:"azurerm_spn_tenantid,omitempty"`

	// The Subscription ID of the Azure targets.
	// The Azure subscription Id which should be used.
	// +kubebuilder:validation:Optional
	AzurermSubscriptionID *string `json:"azurermSubscriptionId,omitempty" tf:"azurerm_subscription_id,omitempty"`

	// The Subscription Name of the targets.
	// The Azure subscription name which should be used.
	// +kubebuilder:validation:Optional
	AzurermSubscriptionName *string `json:"azurermSubscriptionName,omitempty" tf:"azurerm_subscription_name,omitempty"`

	// A credentials block as defined below.
	// +kubebuilder:validation:Optional
	Credentials *ServiceendpointAzurermCredentialsParameters `json:"credentials,omitempty" tf:"credentials,omitempty"`

	// Service connection description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The Cloud Environment to use. Defaults to AzureCloud. Possible values are AzureCloud, AzureChinaCloud, AzureUSGovernment, AzureGermanCloud and AzureStack. Changing this forces a new resource to be created.
	// Environment (Azure Cloud type)
	// +kubebuilder:validation:Optional
	Environment *string `json:"environment,omitempty" tf:"environment,omitempty"`

	// A features block as defined below.
	// +kubebuilder:validation:Optional
	Features *FeaturesParameters `json:"features,omitempty" tf:"features,omitempty"`

	// The ID of the project.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`

	// The resource group used for scope of automatic service endpoint.
	// Scope Resource Group
	// +kubebuilder:validation:Optional
	ResourceGroup *string `json:"resourceGroup,omitempty" tf:"resource_group,omitempty"`

	// The server URL of the service endpoint. Changing this forces a new resource to be created.
	// +kubebuilder:validation:Optional
	ServerURL *string `json:"serverUrl,omitempty" tf:"server_url,omitempty"`

	// Specifies the type of Azure Resource Manager Service Endpoint. Possible values are WorkloadIdentityFederation, ManagedServiceIdentity or ServicePrincipal. Defaults to ServicePrincipal for backwards compatibility.
	// The AzureRM Service Endpoint Authentication Scheme, this can be 'WorkloadIdentityFederation', 'ManagedServiceIdentity' or 'ServicePrincipal'.
	// +kubebuilder:validation:Optional
	ServiceEndpointAuthenticationScheme *string `json:"serviceEndpointAuthenticationScheme,omitempty" tf:"service_endpoint_authentication_scheme,omitempty"`

	// The Service Endpoint Name.
	// +kubebuilder:validation:Optional
	ServiceEndpointName *string `json:"serviceEndpointName,omitempty" tf:"service_endpoint_name,omitempty"`
}

// ServiceendpointAzurermSpec defines the desired state of ServiceendpointAzurerm
type ServiceendpointAzurermSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ServiceendpointAzurermParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceendpointAzurermInitParameters `json:"initProvider,omitempty"`
}

// ServiceendpointAzurermStatus defines the observed state of ServiceendpointAzurerm.
type ServiceendpointAzurermStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceendpointAzurermObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceendpointAzurerm is the Schema for the ServiceendpointAzurerms API. Manages a Azure Resource Manager service endpoint within Azure DevOps organization.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azuredevops}
type ServiceendpointAzurerm struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.azurermSpnTenantid) || (has(self.initProvider) && has(self.initProvider.azurermSpnTenantid))",message="spec.forProvider.azurermSpnTenantid is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceEndpointName) || (has(self.initProvider) && has(self.initProvider.serviceEndpointName))",message="spec.forProvider.serviceEndpointName is a required parameter"
	Spec   ServiceendpointAzurermSpec   `json:"spec"`
	Status ServiceendpointAzurermStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceendpointAzurermList contains a list of ServiceendpointAzurerms
type ServiceendpointAzurermList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceendpointAzurerm `json:"items"`
}

// Repository type metadata.
var (
	ServiceendpointAzurerm_Kind             = "ServiceendpointAzurerm"
	ServiceendpointAzurerm_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceendpointAzurerm_Kind}.String()
	ServiceendpointAzurerm_KindAPIVersion   = ServiceendpointAzurerm_Kind + "." + CRDGroupVersion.String()
	ServiceendpointAzurerm_GroupVersionKind = CRDGroupVersion.WithKind(ServiceendpointAzurerm_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceendpointAzurerm{}, &ServiceendpointAzurermList{})
}
