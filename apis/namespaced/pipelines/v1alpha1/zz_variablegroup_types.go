// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type KeyVaultInitParameters struct {

	// The name of the Azure key vault to link secrets from as variables.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Set the Azure Key Vault Secret search depth. Defaults to 20.
	SearchDepth *float64 `json:"searchDepth,omitempty" tf:"search_depth,omitempty"`

	// The id of the Azure subscription endpoint to access the key vault.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/serviceendpoint/v1alpha1.ServiceendpointAzurerm
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ServiceEndpointID *string `json:"serviceEndpointId,omitempty" tf:"service_endpoint_id,omitempty"`

	// Reference to a ServiceendpointAzurerm in serviceendpoint to populate serviceEndpointId.
	// +kubebuilder:validation:Optional
	ServiceEndpointIDRef *v1.NamespacedReference `json:"serviceEndpointIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointAzurerm in serviceendpoint to populate serviceEndpointId.
	// +kubebuilder:validation:Optional
	ServiceEndpointIDSelector *v1.NamespacedSelector `json:"serviceEndpointIdSelector,omitempty" tf:"-"`
}

type KeyVaultObservation struct {

	// The name of the Azure key vault to link secrets from as variables.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Set the Azure Key Vault Secret search depth. Defaults to 20.
	SearchDepth *float64 `json:"searchDepth,omitempty" tf:"search_depth,omitempty"`

	// The id of the Azure subscription endpoint to access the key vault.
	ServiceEndpointID *string `json:"serviceEndpointId,omitempty" tf:"service_endpoint_id,omitempty"`
}

type KeyVaultParameters struct {

	// The name of the Azure key vault to link secrets from as variables.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Set the Azure Key Vault Secret search depth. Defaults to 20.
	// +kubebuilder:validation:Optional
	SearchDepth *float64 `json:"searchDepth,omitempty" tf:"search_depth,omitempty"`

	// The id of the Azure subscription endpoint to access the key vault.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/serviceendpoint/v1alpha1.ServiceendpointAzurerm
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServiceEndpointID *string `json:"serviceEndpointId,omitempty" tf:"service_endpoint_id,omitempty"`

	// Reference to a ServiceendpointAzurerm in serviceendpoint to populate serviceEndpointId.
	// +kubebuilder:validation:Optional
	ServiceEndpointIDRef *v1.NamespacedReference `json:"serviceEndpointIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointAzurerm in serviceendpoint to populate serviceEndpointId.
	// +kubebuilder:validation:Optional
	ServiceEndpointIDSelector *v1.NamespacedSelector `json:"serviceEndpointIdSelector,omitempty" tf:"-"`
}

type VariableGroupInitParameters struct {

	// Boolean that indicate if this variable group is shared by all pipelines of this project.
	AllowAccess *bool `json:"allowAccess,omitempty" tf:"allow_access,omitempty"`

	// The description of the Variable Group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A list of key_vault blocks as documented below.
	KeyVault *KeyVaultInitParameters `json:"keyVault,omitempty" tf:"key_vault,omitempty"`

	// The name of the Variable Group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`

	// One or more variable blocks as documented below.
	Variable []VariableGroupVariableInitParameters `json:"variable,omitempty" tf:"variable,omitempty"`
}

type VariableGroupObservation struct {

	// Boolean that indicate if this variable group is shared by all pipelines of this project.
	AllowAccess *bool `json:"allowAccess,omitempty" tf:"allow_access,omitempty"`

	// The description of the Variable Group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The ID of the Variable Group returned after creation in Azure DevOps.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// A list of key_vault blocks as documented below.
	KeyVault *KeyVaultObservation `json:"keyVault,omitempty" tf:"key_vault,omitempty"`

	// The name of the Variable Group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// One or more variable blocks as documented below.
	Variable []VariableGroupVariableObservation `json:"variable,omitempty" tf:"variable,omitempty"`
}

type VariableGroupParameters struct {

	// Boolean that indicate if this variable group is shared by all pipelines of this project.
	// +kubebuilder:validation:Optional
	AllowAccess *bool `json:"allowAccess,omitempty" tf:"allow_access,omitempty"`

	// The description of the Variable Group.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// A list of key_vault blocks as documented below.
	// +kubebuilder:validation:Optional
	KeyVault *KeyVaultParameters `json:"keyVault,omitempty" tf:"key_vault,omitempty"`

	// The name of the Variable Group.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`

	// One or more variable blocks as documented below.
	// +kubebuilder:validation:Optional
	Variable []VariableGroupVariableParameters `json:"variable,omitempty" tf:"variable,omitempty"`
}

type VariableGroupVariableInitParameters struct {

	// A boolean flag describing if the variable value is sensitive. Defaults to false.
	IsSecret *bool `json:"isSecret,omitempty" tf:"is_secret,omitempty"`

	// The key value used for the variable. Must be unique within the Variable Group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The secret value of the variable. If omitted, it will default to empty string. Used when is_secret set to true.
	SecretValueSecretRef *v1.LocalSecretKeySelector `json:"secretValueSecretRef,omitempty" tf:"-"`

	// The value of the variable. If omitted, it will default to empty string.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VariableGroupVariableObservation struct {
	ContentType *string `json:"contentType,omitempty" tf:"content_type,omitempty"`

	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	Expires *string `json:"expires,omitempty" tf:"expires,omitempty"`

	// A boolean flag describing if the variable value is sensitive. Defaults to false.
	IsSecret *bool `json:"isSecret,omitempty" tf:"is_secret,omitempty"`

	// The key value used for the variable. Must be unique within the Variable Group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value of the variable. If omitted, it will default to empty string.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VariableGroupVariableParameters struct {

	// A boolean flag describing if the variable value is sensitive. Defaults to false.
	// +kubebuilder:validation:Optional
	IsSecret *bool `json:"isSecret,omitempty" tf:"is_secret,omitempty"`

	// The key value used for the variable. Must be unique within the Variable Group.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The secret value of the variable. If omitted, it will default to empty string. Used when is_secret set to true.
	// +kubebuilder:validation:Optional
	SecretValueSecretRef *v1.LocalSecretKeySelector `json:"secretValueSecretRef,omitempty" tf:"-"`

	// The value of the variable. If omitted, it will default to empty string.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// VariableGroupSpec defines the desired state of VariableGroup
type VariableGroupSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            VariableGroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VariableGroupInitParameters `json:"initProvider,omitempty"`
}

// VariableGroupStatus defines the observed state of VariableGroup.
type VariableGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VariableGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VariableGroup is the Schema for the VariableGroups API. Manages variable groups within Azure DevOps project.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azuredevops}
type VariableGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.variable) || (has(self.initProvider) && has(self.initProvider.variable))",message="spec.forProvider.variable is a required parameter"
	Spec   VariableGroupSpec   `json:"spec"`
	Status VariableGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VariableGroupList contains a list of VariableGroups
type VariableGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VariableGroup `json:"items"`
}

// Repository type metadata.
var (
	VariableGroup_Kind             = "VariableGroup"
	VariableGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VariableGroup_Kind}.String()
	VariableGroup_KindAPIVersion   = VariableGroup_Kind + "." + CRDGroupVersion.String()
	VariableGroup_GroupVersionKind = CRDGroupVersion.WithKind(VariableGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&VariableGroup{}, &VariableGroupList{})
}
