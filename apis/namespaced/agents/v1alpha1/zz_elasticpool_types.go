// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type ElasticPoolInitParameters struct {

	// Set whether agents should be configured to run with interactive UI. Defaults to false.
	AgentInteractiveUI *bool `json:"agentInteractiveUi,omitempty" tf:"agent_interactive_ui,omitempty"`

	// Specifies whether a queue should be automatically provisioned for each project collection. Defaults to false.
	AutoProvision *bool `json:"autoProvision,omitempty" tf:"auto_provision,omitempty"`

	// Specifies whether or not agents within the pool should be automatically updated. Defaults to true.
	AutoUpdate *bool `json:"autoUpdate,omitempty" tf:"auto_update,omitempty"`

	// The ID of the Azure resource.
	AzureResourceID *string `json:"azureResourceId,omitempty" tf:"azure_resource_id,omitempty"`

	// Number of agents to keep on standby.
	DesiredIdle *float64 `json:"desiredIdle,omitempty" tf:"desired_idle,omitempty"`

	// Maximum number of virtual machines in the scale set.
	MaxCapacity *float64 `json:"maxCapacity,omitempty" tf:"max_capacity,omitempty"`

	// The name of the Elastic pool.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project where a new Elastic Pool will be created.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Tear down virtual machines after every use. Defaults to false.
	RecycleAfterEachUse *bool `json:"recycleAfterEachUse,omitempty" tf:"recycle_after_each_use,omitempty"`

	// The ID of Service Endpoint used to connect to Azure.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/serviceendpoint/v1alpha1.ServiceendpointAzurerm
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ServiceEndpointID *string `json:"serviceEndpointId,omitempty" tf:"service_endpoint_id,omitempty"`

	// Reference to a ServiceendpointAzurerm in serviceendpoint to populate serviceEndpointId.
	// +kubebuilder:validation:Optional
	ServiceEndpointIDRef *v1.NamespacedReference `json:"serviceEndpointIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointAzurerm in serviceendpoint to populate serviceEndpointId.
	// +kubebuilder:validation:Optional
	ServiceEndpointIDSelector *v1.NamespacedSelector `json:"serviceEndpointIdSelector,omitempty" tf:"-"`

	// The Project ID of Service Endpoint belongs to.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ServiceEndpointScope *string `json:"serviceEndpointScope,omitempty" tf:"service_endpoint_scope,omitempty"`

	// Reference to a Project in project to populate serviceEndpointScope.
	// +kubebuilder:validation:Optional
	ServiceEndpointScopeRef *v1.NamespacedReference `json:"serviceEndpointScopeRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate serviceEndpointScope.
	// +kubebuilder:validation:Optional
	ServiceEndpointScopeSelector *v1.NamespacedSelector `json:"serviceEndpointScopeSelector,omitempty" tf:"-"`

	// Delay in minutes before deleting excess idle agents. Defaults to 30.
	TimeToLiveMinutes *float64 `json:"timeToLiveMinutes,omitempty" tf:"time_to_live_minutes,omitempty"`
}

type ElasticPoolObservation struct {

	// Set whether agents should be configured to run with interactive UI. Defaults to false.
	AgentInteractiveUI *bool `json:"agentInteractiveUi,omitempty" tf:"agent_interactive_ui,omitempty"`

	// Specifies whether a queue should be automatically provisioned for each project collection. Defaults to false.
	AutoProvision *bool `json:"autoProvision,omitempty" tf:"auto_provision,omitempty"`

	// Specifies whether or not agents within the pool should be automatically updated. Defaults to true.
	AutoUpdate *bool `json:"autoUpdate,omitempty" tf:"auto_update,omitempty"`

	// The ID of the Azure resource.
	AzureResourceID *string `json:"azureResourceId,omitempty" tf:"azure_resource_id,omitempty"`

	// Number of agents to keep on standby.
	DesiredIdle *float64 `json:"desiredIdle,omitempty" tf:"desired_idle,omitempty"`

	// The ID of the Elastic pool.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Maximum number of virtual machines in the scale set.
	MaxCapacity *float64 `json:"maxCapacity,omitempty" tf:"max_capacity,omitempty"`

	// The name of the Elastic pool.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project where a new Elastic Pool will be created.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Tear down virtual machines after every use. Defaults to false.
	RecycleAfterEachUse *bool `json:"recycleAfterEachUse,omitempty" tf:"recycle_after_each_use,omitempty"`

	// The ID of Service Endpoint used to connect to Azure.
	ServiceEndpointID *string `json:"serviceEndpointId,omitempty" tf:"service_endpoint_id,omitempty"`

	// The Project ID of Service Endpoint belongs to.
	ServiceEndpointScope *string `json:"serviceEndpointScope,omitempty" tf:"service_endpoint_scope,omitempty"`

	// Delay in minutes before deleting excess idle agents. Defaults to 30.
	TimeToLiveMinutes *float64 `json:"timeToLiveMinutes,omitempty" tf:"time_to_live_minutes,omitempty"`
}

type ElasticPoolParameters struct {

	// Set whether agents should be configured to run with interactive UI. Defaults to false.
	// +kubebuilder:validation:Optional
	AgentInteractiveUI *bool `json:"agentInteractiveUi,omitempty" tf:"agent_interactive_ui,omitempty"`

	// Specifies whether a queue should be automatically provisioned for each project collection. Defaults to false.
	// +kubebuilder:validation:Optional
	AutoProvision *bool `json:"autoProvision,omitempty" tf:"auto_provision,omitempty"`

	// Specifies whether or not agents within the pool should be automatically updated. Defaults to true.
	// +kubebuilder:validation:Optional
	AutoUpdate *bool `json:"autoUpdate,omitempty" tf:"auto_update,omitempty"`

	// The ID of the Azure resource.
	// +kubebuilder:validation:Optional
	AzureResourceID *string `json:"azureResourceId,omitempty" tf:"azure_resource_id,omitempty"`

	// Number of agents to keep on standby.
	// +kubebuilder:validation:Optional
	DesiredIdle *float64 `json:"desiredIdle,omitempty" tf:"desired_idle,omitempty"`

	// Maximum number of virtual machines in the scale set.
	// +kubebuilder:validation:Optional
	MaxCapacity *float64 `json:"maxCapacity,omitempty" tf:"max_capacity,omitempty"`

	// The name of the Elastic pool.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project where a new Elastic Pool will be created.
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Tear down virtual machines after every use. Defaults to false.
	// +kubebuilder:validation:Optional
	RecycleAfterEachUse *bool `json:"recycleAfterEachUse,omitempty" tf:"recycle_after_each_use,omitempty"`

	// The ID of Service Endpoint used to connect to Azure.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/serviceendpoint/v1alpha1.ServiceendpointAzurerm
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServiceEndpointID *string `json:"serviceEndpointId,omitempty" tf:"service_endpoint_id,omitempty"`

	// Reference to a ServiceendpointAzurerm in serviceendpoint to populate serviceEndpointId.
	// +kubebuilder:validation:Optional
	ServiceEndpointIDRef *v1.NamespacedReference `json:"serviceEndpointIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointAzurerm in serviceendpoint to populate serviceEndpointId.
	// +kubebuilder:validation:Optional
	ServiceEndpointIDSelector *v1.NamespacedSelector `json:"serviceEndpointIdSelector,omitempty" tf:"-"`

	// The Project ID of Service Endpoint belongs to.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServiceEndpointScope *string `json:"serviceEndpointScope,omitempty" tf:"service_endpoint_scope,omitempty"`

	// Reference to a Project in project to populate serviceEndpointScope.
	// +kubebuilder:validation:Optional
	ServiceEndpointScopeRef *v1.NamespacedReference `json:"serviceEndpointScopeRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate serviceEndpointScope.
	// +kubebuilder:validation:Optional
	ServiceEndpointScopeSelector *v1.NamespacedSelector `json:"serviceEndpointScopeSelector,omitempty" tf:"-"`

	// Delay in minutes before deleting excess idle agents. Defaults to 30.
	// +kubebuilder:validation:Optional
	TimeToLiveMinutes *float64 `json:"timeToLiveMinutes,omitempty" tf:"time_to_live_minutes,omitempty"`
}

// ElasticPoolSpec defines the desired state of ElasticPool
type ElasticPoolSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            ElasticPoolParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ElasticPoolInitParameters `json:"initProvider,omitempty"`
}

// ElasticPoolStatus defines the observed state of ElasticPool.
type ElasticPoolStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ElasticPoolObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ElasticPool is the Schema for the ElasticPools API. Manages Elastic pool within Azure DevOps organization.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azuredevops}
type ElasticPool struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.azureResourceId) || (has(self.initProvider) && has(self.initProvider.azureResourceId))",message="spec.forProvider.azureResourceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.desiredIdle) || (has(self.initProvider) && has(self.initProvider.desiredIdle))",message="spec.forProvider.desiredIdle is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.maxCapacity) || (has(self.initProvider) && has(self.initProvider.maxCapacity))",message="spec.forProvider.maxCapacity is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   ElasticPoolSpec   `json:"spec"`
	Status ElasticPoolStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ElasticPoolList contains a list of ElasticPools
type ElasticPoolList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ElasticPool `json:"items"`
}

// Repository type metadata.
var (
	ElasticPool_Kind             = "ElasticPool"
	ElasticPool_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ElasticPool_Kind}.String()
	ElasticPool_KindAPIVersion   = ElasticPool_Kind + "." + CRDGroupVersion.String()
	ElasticPool_GroupVersionKind = CRDGroupVersion.WithKind(ElasticPool_Kind)
)

func init() {
	SchemeBuilder.Register(&ElasticPool{}, &ElasticPoolList{})
}
