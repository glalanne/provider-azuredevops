// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	v2 "github.com/crossplane/crossplane-runtime/v2/apis/common/v2"
)

type AgentQueueInitParameters struct {

	// The ID of the organization agent pool. Conflicts with name.
	AgentPoolID *float64 `json:"agentPoolId,omitempty" tf:"agent_pool_id,omitempty"`

	// The name of the agent queue. Defaults to the ID of the agent pool. Conflicts with agent_pool_id.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project in which to create the resource.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`
}

type AgentQueueObservation struct {

	// The ID of the organization agent pool. Conflicts with name.
	AgentPoolID *float64 `json:"agentPoolId,omitempty" tf:"agent_pool_id,omitempty"`

	// The ID of the agent queue reference.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the agent queue. Defaults to the ID of the agent pool. Conflicts with agent_pool_id.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project in which to create the resource.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`
}

type AgentQueueParameters struct {

	// The ID of the organization agent pool. Conflicts with name.
	// +kubebuilder:validation:Optional
	AgentPoolID *float64 `json:"agentPoolId,omitempty" tf:"agent_pool_id,omitempty"`

	// The name of the agent queue. Defaults to the ID of the agent pool. Conflicts with agent_pool_id.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The ID of the project in which to create the resource.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/namespaced/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.NamespacedReference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.NamespacedSelector `json:"projectIdSelector,omitempty" tf:"-"`
}

// AgentQueueSpec defines the desired state of AgentQueue
type AgentQueueSpec struct {
	v2.ManagedResourceSpec `json:",inline"`
	ForProvider            AgentQueueParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AgentQueueInitParameters `json:"initProvider,omitempty"`
}

// AgentQueueStatus defines the observed state of AgentQueue.
type AgentQueueStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AgentQueueObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AgentQueue is the Schema for the AgentQueues API. Manages an agent queue within Azure DevOps project.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Namespaced,categories={crossplane,managed,azuredevops}
type AgentQueue struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              AgentQueueSpec   `json:"spec"`
	Status            AgentQueueStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AgentQueueList contains a list of AgentQueues
type AgentQueueList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AgentQueue `json:"items"`
}

// Repository type metadata.
var (
	AgentQueue_Kind             = "AgentQueue"
	AgentQueue_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AgentQueue_Kind}.String()
	AgentQueue_KindAPIVersion   = AgentQueue_Kind + "." + CRDGroupVersion.String()
	AgentQueue_GroupVersionKind = CRDGroupVersion.WithKind(AgentQueue_Kind)
)

func init() {
	SchemeBuilder.Register(&AgentQueue{}, &AgentQueueList{})
}
