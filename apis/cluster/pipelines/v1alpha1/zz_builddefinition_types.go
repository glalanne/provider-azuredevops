// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type BranchFilterInitParameters struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type BranchFilterObservation struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type BranchFilterParameters struct {

	// List of path patterns to exclude.
	// +kubebuilder:validation:Optional
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +kubebuilder:validation:Optional
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type BuildCompletionTriggerInitParameters struct {

	// The branches to include and exclude from the trigger. A branch_filter block as documented below.
	BranchFilter []BranchFilterInitParameters `json:"branchFilter,omitempty" tf:"branch_filter,omitempty"`

	// The ID of the build pipeline will be triggered.
	BuildDefinitionID *float64 `json:"buildDefinitionId,omitempty" tf:"build_definition_id,omitempty"`
}

type BuildCompletionTriggerObservation struct {

	// The branches to include and exclude from the trigger. A branch_filter block as documented below.
	BranchFilter []BranchFilterObservation `json:"branchFilter,omitempty" tf:"branch_filter,omitempty"`

	// The ID of the build pipeline will be triggered.
	BuildDefinitionID *float64 `json:"buildDefinitionId,omitempty" tf:"build_definition_id,omitempty"`
}

type BuildCompletionTriggerParameters struct {

	// The branches to include and exclude from the trigger. A branch_filter block as documented below.
	// +kubebuilder:validation:Optional
	BranchFilter []BranchFilterParameters `json:"branchFilter" tf:"branch_filter,omitempty"`

	// The ID of the build pipeline will be triggered.
	// +kubebuilder:validation:Optional
	BuildDefinitionID *float64 `json:"buildDefinitionId" tf:"build_definition_id,omitempty"`
}

type BuildDefinitionInitParameters struct {

	// The agent pool that should execute the build. Defaults to Azure Pipelines.
	AgentPoolName *string `json:"agentPoolName,omitempty" tf:"agent_pool_name,omitempty"`

	// The Agent Specification to run the pipelines. Required when repo_type is Git. Example: windows-2019, windows-latest, macos-13 etc.
	AgentSpecification *string `json:"agentSpecification,omitempty" tf:"agent_specification,omitempty"`

	// A build_completion_trigger block as documented below.
	BuildCompletionTrigger []BuildCompletionTriggerInitParameters `json:"buildCompletionTrigger,omitempty" tf:"build_completion_trigger,omitempty"`

	// A ci_trigger block as documented below.
	CiTrigger *CiTriggerInitParameters `json:"ciTrigger,omitempty" tf:"ci_trigger,omitempty"`

	// A features blocks as documented below.
	Features []FeaturesInitParameters `json:"features,omitempty" tf:"features,omitempty"`

	// The job authorization scope for builds queued against this definition. Possible values are: project, projectCollection. Defaults to projectCollection.
	JobAuthorizationScope *string `json:"jobAuthorizationScope,omitempty" tf:"job_authorization_scope,omitempty"`

	// A jobs blocks as documented below.
	Jobs []JobsInitParameters `json:"jobs,omitempty" tf:"jobs,omitempty"`

	// The name of the build definition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The folder path of the build definition.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The project ID or project name.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// A pull_request_trigger block as documented below.
	PullRequestTrigger *PullRequestTriggerInitParameters `json:"pullRequestTrigger,omitempty" tf:"pull_request_trigger,omitempty"`

	// The queue status of the build definition. Possible values are: enabled or paused or disabled. Defaults to enabled.
	QueueStatus *string `json:"queueStatus,omitempty" tf:"queue_status,omitempty"`

	// A repository block as documented below.
	Repository *RepositoryInitParameters `json:"repository,omitempty" tf:"repository,omitempty"`

	Schedules []SchedulesInitParameters `json:"schedules,omitempty" tf:"schedules,omitempty"`

	// A list of variable blocks, as documented below.
	Variable []VariableInitParameters `json:"variable,omitempty" tf:"variable,omitempty"`

	// A list of variable group IDs (integers) to link to the build definition.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/pipelines/v1alpha1.VariableGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +listType=set
	VariableGroups []*float64 `json:"variableGroups,omitempty" tf:"variable_groups,omitempty"`

	// References to VariableGroup in pipelines to populate variableGroups.
	// +kubebuilder:validation:Optional
	VariableGroupsRefs []v1.Reference `json:"variableGroupsRefs,omitempty" tf:"-"`

	// Selector for a list of VariableGroup in pipelines to populate variableGroups.
	// +kubebuilder:validation:Optional
	VariableGroupsSelector *v1.Selector `json:"variableGroupsSelector,omitempty" tf:"-"`
}

type BuildDefinitionObservation struct {

	// The agent pool that should execute the build. Defaults to Azure Pipelines.
	AgentPoolName *string `json:"agentPoolName,omitempty" tf:"agent_pool_name,omitempty"`

	// The Agent Specification to run the pipelines. Required when repo_type is Git. Example: windows-2019, windows-latest, macos-13 etc.
	AgentSpecification *string `json:"agentSpecification,omitempty" tf:"agent_specification,omitempty"`

	// A build_completion_trigger block as documented below.
	BuildCompletionTrigger []BuildCompletionTriggerObservation `json:"buildCompletionTrigger,omitempty" tf:"build_completion_trigger,omitempty"`

	// A ci_trigger block as documented below.
	CiTrigger *CiTriggerObservation `json:"ciTrigger,omitempty" tf:"ci_trigger,omitempty"`

	// A features blocks as documented below.
	Features []FeaturesObservation `json:"features,omitempty" tf:"features,omitempty"`

	// The ID of the build definition
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The job authorization scope for builds queued against this definition. Possible values are: project, projectCollection. Defaults to projectCollection.
	JobAuthorizationScope *string `json:"jobAuthorizationScope,omitempty" tf:"job_authorization_scope,omitempty"`

	// A jobs blocks as documented below.
	Jobs []JobsObservation `json:"jobs,omitempty" tf:"jobs,omitempty"`

	// The name of the build definition.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The folder path of the build definition.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The project ID or project name.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// A pull_request_trigger block as documented below.
	PullRequestTrigger *PullRequestTriggerObservation `json:"pullRequestTrigger,omitempty" tf:"pull_request_trigger,omitempty"`

	// The queue status of the build definition. Possible values are: enabled or paused or disabled. Defaults to enabled.
	QueueStatus *string `json:"queueStatus,omitempty" tf:"queue_status,omitempty"`

	// A repository block as documented below.
	Repository *RepositoryObservation `json:"repository,omitempty" tf:"repository,omitempty"`

	// The revision of the build definition
	Revision *float64 `json:"revision,omitempty" tf:"revision,omitempty"`

	Schedules []SchedulesObservation `json:"schedules,omitempty" tf:"schedules,omitempty"`

	// A list of variable blocks, as documented below.
	Variable []VariableObservation `json:"variable,omitempty" tf:"variable,omitempty"`

	// A list of variable group IDs (integers) to link to the build definition.
	// +listType=set
	VariableGroups []*float64 `json:"variableGroups,omitempty" tf:"variable_groups,omitempty"`
}

type BuildDefinitionParameters struct {

	// The agent pool that should execute the build. Defaults to Azure Pipelines.
	// +kubebuilder:validation:Optional
	AgentPoolName *string `json:"agentPoolName,omitempty" tf:"agent_pool_name,omitempty"`

	// The Agent Specification to run the pipelines. Required when repo_type is Git. Example: windows-2019, windows-latest, macos-13 etc.
	// +kubebuilder:validation:Optional
	AgentSpecification *string `json:"agentSpecification,omitempty" tf:"agent_specification,omitempty"`

	// A build_completion_trigger block as documented below.
	// +kubebuilder:validation:Optional
	BuildCompletionTrigger []BuildCompletionTriggerParameters `json:"buildCompletionTrigger,omitempty" tf:"build_completion_trigger,omitempty"`

	// A ci_trigger block as documented below.
	// +kubebuilder:validation:Optional
	CiTrigger *CiTriggerParameters `json:"ciTrigger,omitempty" tf:"ci_trigger,omitempty"`

	// A features blocks as documented below.
	// +kubebuilder:validation:Optional
	Features []FeaturesParameters `json:"features,omitempty" tf:"features,omitempty"`

	// The job authorization scope for builds queued against this definition. Possible values are: project, projectCollection. Defaults to projectCollection.
	// +kubebuilder:validation:Optional
	JobAuthorizationScope *string `json:"jobAuthorizationScope,omitempty" tf:"job_authorization_scope,omitempty"`

	// A jobs blocks as documented below.
	// +kubebuilder:validation:Optional
	Jobs []JobsParameters `json:"jobs,omitempty" tf:"jobs,omitempty"`

	// The name of the build definition.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The folder path of the build definition.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// The project ID or project name.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// A pull_request_trigger block as documented below.
	// +kubebuilder:validation:Optional
	PullRequestTrigger *PullRequestTriggerParameters `json:"pullRequestTrigger,omitempty" tf:"pull_request_trigger,omitempty"`

	// The queue status of the build definition. Possible values are: enabled or paused or disabled. Defaults to enabled.
	// +kubebuilder:validation:Optional
	QueueStatus *string `json:"queueStatus,omitempty" tf:"queue_status,omitempty"`

	// A repository block as documented below.
	// +kubebuilder:validation:Optional
	Repository *RepositoryParameters `json:"repository,omitempty" tf:"repository,omitempty"`

	// +kubebuilder:validation:Optional
	Schedules []SchedulesParameters `json:"schedules,omitempty" tf:"schedules,omitempty"`

	// A list of variable blocks, as documented below.
	// +kubebuilder:validation:Optional
	Variable []VariableParameters `json:"variable,omitempty" tf:"variable,omitempty"`

	// A list of variable group IDs (integers) to link to the build definition.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/pipelines/v1alpha1.VariableGroup
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	// +listType=set
	VariableGroups []*float64 `json:"variableGroups,omitempty" tf:"variable_groups,omitempty"`

	// References to VariableGroup in pipelines to populate variableGroups.
	// +kubebuilder:validation:Optional
	VariableGroupsRefs []v1.Reference `json:"variableGroupsRefs,omitempty" tf:"-"`

	// Selector for a list of VariableGroup in pipelines to populate variableGroups.
	// +kubebuilder:validation:Optional
	VariableGroupsSelector *v1.Selector `json:"variableGroupsSelector,omitempty" tf:"-"`
}

type CiTriggerInitParameters struct {

	// Override the azure-pipeline file and use a this configuration for all builds.
	Override *OverrideInitParameters `json:"override,omitempty" tf:"override,omitempty"`

	// Use the azure-pipeline file for the build configuration. Defaults to false.
	UseYaml *bool `json:"useYaml,omitempty" tf:"use_yaml,omitempty"`
}

type CiTriggerObservation struct {

	// Override the azure-pipeline file and use a this configuration for all builds.
	Override *OverrideObservation `json:"override,omitempty" tf:"override,omitempty"`

	// Use the azure-pipeline file for the build configuration. Defaults to false.
	UseYaml *bool `json:"useYaml,omitempty" tf:"use_yaml,omitempty"`
}

type CiTriggerParameters struct {

	// Override the azure-pipeline file and use a this configuration for all builds.
	// +kubebuilder:validation:Optional
	Override *OverrideParameters `json:"override,omitempty" tf:"override,omitempty"`

	// Use the azure-pipeline file for the build configuration. Defaults to false.
	// +kubebuilder:validation:Optional
	UseYaml *bool `json:"useYaml,omitempty" tf:"use_yaml,omitempty"`
}

type DependenciesInitParameters struct {

	// The job reference name that depends on. Reference to jobs.ref_name
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type DependenciesObservation struct {

	// The job reference name that depends on. Reference to jobs.ref_name
	Scope *string `json:"scope,omitempty" tf:"scope,omitempty"`
}

type DependenciesParameters struct {

	// The job reference name that depends on. Reference to jobs.ref_name
	// +kubebuilder:validation:Optional
	Scope *string `json:"scope" tf:"scope,omitempty"`
}

type ExecutionOptionsInitParameters struct {

	// Whether to continue the job when an error occurs. Possible values are: true, false.
	ContinueOnError *bool `json:"continueOnError,omitempty" tf:"continue_on_error,omitempty"`

	// Limit the number of agents to be used. If job type is AgentlessJob, the concurrency is not configurable and is fixed to 50.
	MaxConcurrency *float64 `json:"maxConcurrency,omitempty" tf:"max_concurrency,omitempty"`

	// A list of comma separated configuration variables to use. These are defined on the Variables tab. For example, OperatingSystem, Browser will run the tasks for both variables. Available when execution_options.type is Multi-Configuration.
	Multipliers *string `json:"multipliers,omitempty" tf:"multipliers,omitempty"`

	// The job type. Possible values: AgentJob, AgentlessJob
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ExecutionOptionsObservation struct {

	// Whether to continue the job when an error occurs. Possible values are: true, false.
	ContinueOnError *bool `json:"continueOnError,omitempty" tf:"continue_on_error,omitempty"`

	// Limit the number of agents to be used. If job type is AgentlessJob, the concurrency is not configurable and is fixed to 50.
	MaxConcurrency *float64 `json:"maxConcurrency,omitempty" tf:"max_concurrency,omitempty"`

	// A list of comma separated configuration variables to use. These are defined on the Variables tab. For example, OperatingSystem, Browser will run the tasks for both variables. Available when execution_options.type is Multi-Configuration.
	Multipliers *string `json:"multipliers,omitempty" tf:"multipliers,omitempty"`

	// The job type. Possible values: AgentJob, AgentlessJob
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ExecutionOptionsParameters struct {

	// Whether to continue the job when an error occurs. Possible values are: true, false.
	// +kubebuilder:validation:Optional
	ContinueOnError *bool `json:"continueOnError,omitempty" tf:"continue_on_error,omitempty"`

	// Limit the number of agents to be used. If job type is AgentlessJob, the concurrency is not configurable and is fixed to 50.
	// +kubebuilder:validation:Optional
	MaxConcurrency *float64 `json:"maxConcurrency,omitempty" tf:"max_concurrency,omitempty"`

	// A list of comma separated configuration variables to use. These are defined on the Variables tab. For example, OperatingSystem, Browser will run the tasks for both variables. Available when execution_options.type is Multi-Configuration.
	// +kubebuilder:validation:Optional
	Multipliers *string `json:"multipliers,omitempty" tf:"multipliers,omitempty"`

	// The job type. Possible values: AgentJob, AgentlessJob
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type FeaturesInitParameters struct {

	// Trigger the pipeline to run after the creation. Defaults to true.
	SkipFirstRun *bool `json:"skipFirstRun,omitempty" tf:"skip_first_run,omitempty"`
}

type FeaturesObservation struct {

	// Trigger the pipeline to run after the creation. Defaults to true.
	SkipFirstRun *bool `json:"skipFirstRun,omitempty" tf:"skip_first_run,omitempty"`
}

type FeaturesParameters struct {

	// Trigger the pipeline to run after the creation. Defaults to true.
	// +kubebuilder:validation:Optional
	SkipFirstRun *bool `json:"skipFirstRun,omitempty" tf:"skip_first_run,omitempty"`
}

type ForksInitParameters struct {

	// Build pull requests from forks of this repository.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Make secrets available to builds of forks.
	ShareSecrets *bool `json:"shareSecrets,omitempty" tf:"share_secrets,omitempty"`
}

type ForksObservation struct {

	// Build pull requests from forks of this repository.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Make secrets available to builds of forks.
	ShareSecrets *bool `json:"shareSecrets,omitempty" tf:"share_secrets,omitempty"`
}

type ForksParameters struct {

	// Build pull requests from forks of this repository.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled" tf:"enabled,omitempty"`

	// Make secrets available to builds of forks.
	// +kubebuilder:validation:Optional
	ShareSecrets *bool `json:"shareSecrets" tf:"share_secrets,omitempty"`
}

type JobsInitParameters struct {

	// Enables scripts and other processes launched by tasks to access the OAuth token through the System.AccessToken variable. Possible values: true, false. Defaults to false. Available when Job type is AgentJob
	AllowScriptsAuthAccessOption *bool `json:"allowScriptsAuthAccessOption,omitempty" tf:"allow_scripts_auth_access_option,omitempty"`

	// Specifies when this job should run. Can Custom conditions to specify more complex conditions. Possible values: succeeded(), succeededOrFailed(), always(), failed() etc. More details: Pipeline conditions
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// A dependencies blocks as documented below. Define the job dependencies.
	Dependencies []DependenciesInitParameters `json:"dependencies,omitempty" tf:"dependencies,omitempty"`

	// The job authorization scope for builds queued against this definition. Possible values are: project, projectCollection. Defaults to projectCollection.
	JobAuthorizationScope *string `json:"jobAuthorizationScope,omitempty" tf:"job_authorization_scope,omitempty"`

	// The job cancel timeout (in minutes) for builds cancelled by user for this definition. Possible values are between 0 and 60. Defaults to 0.
	JobCancelTimeoutInMinutes *float64 `json:"jobCancelTimeoutInMinutes,omitempty" tf:"job_cancel_timeout_in_minutes,omitempty"`

	// The job execution timeout (in minutes) for builds queued against this definition. Possible values are between 0 and 1000000000. Defaults to 0.
	JobTimeoutInMinutes *float64 `json:"jobTimeoutInMinutes,omitempty" tf:"job_timeout_in_minutes,omitempty"`

	// The name of the job.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The reference name of the job, can be used to define the job dependencies.
	RefName *string `json:"refName,omitempty" tf:"ref_name,omitempty"`

	// A target blocks as documented below.
	Target *TargetInitParameters `json:"target,omitempty" tf:"target,omitempty"`
}

type JobsObservation struct {

	// Enables scripts and other processes launched by tasks to access the OAuth token through the System.AccessToken variable. Possible values: true, false. Defaults to false. Available when Job type is AgentJob
	AllowScriptsAuthAccessOption *bool `json:"allowScriptsAuthAccessOption,omitempty" tf:"allow_scripts_auth_access_option,omitempty"`

	// Specifies when this job should run. Can Custom conditions to specify more complex conditions. Possible values: succeeded(), succeededOrFailed(), always(), failed() etc. More details: Pipeline conditions
	Condition *string `json:"condition,omitempty" tf:"condition,omitempty"`

	// A dependencies blocks as documented below. Define the job dependencies.
	Dependencies []DependenciesObservation `json:"dependencies,omitempty" tf:"dependencies,omitempty"`

	// The job authorization scope for builds queued against this definition. Possible values are: project, projectCollection. Defaults to projectCollection.
	JobAuthorizationScope *string `json:"jobAuthorizationScope,omitempty" tf:"job_authorization_scope,omitempty"`

	// The job cancel timeout (in minutes) for builds cancelled by user for this definition. Possible values are between 0 and 60. Defaults to 0.
	JobCancelTimeoutInMinutes *float64 `json:"jobCancelTimeoutInMinutes,omitempty" tf:"job_cancel_timeout_in_minutes,omitempty"`

	// The job execution timeout (in minutes) for builds queued against this definition. Possible values are between 0 and 1000000000. Defaults to 0.
	JobTimeoutInMinutes *float64 `json:"jobTimeoutInMinutes,omitempty" tf:"job_timeout_in_minutes,omitempty"`

	// The name of the job.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The reference name of the job, can be used to define the job dependencies.
	RefName *string `json:"refName,omitempty" tf:"ref_name,omitempty"`

	// A target blocks as documented below.
	Target *TargetObservation `json:"target,omitempty" tf:"target,omitempty"`
}

type JobsParameters struct {

	// Enables scripts and other processes launched by tasks to access the OAuth token through the System.AccessToken variable. Possible values: true, false. Defaults to false. Available when Job type is AgentJob
	// +kubebuilder:validation:Optional
	AllowScriptsAuthAccessOption *bool `json:"allowScriptsAuthAccessOption,omitempty" tf:"allow_scripts_auth_access_option,omitempty"`

	// Specifies when this job should run. Can Custom conditions to specify more complex conditions. Possible values: succeeded(), succeededOrFailed(), always(), failed() etc. More details: Pipeline conditions
	// +kubebuilder:validation:Optional
	Condition *string `json:"condition" tf:"condition,omitempty"`

	// A dependencies blocks as documented below. Define the job dependencies.
	// +kubebuilder:validation:Optional
	Dependencies []DependenciesParameters `json:"dependencies,omitempty" tf:"dependencies,omitempty"`

	// The job authorization scope for builds queued against this definition. Possible values are: project, projectCollection. Defaults to projectCollection.
	// +kubebuilder:validation:Optional
	JobAuthorizationScope *string `json:"jobAuthorizationScope,omitempty" tf:"job_authorization_scope,omitempty"`

	// The job cancel timeout (in minutes) for builds cancelled by user for this definition. Possible values are between 0 and 60. Defaults to 0.
	// +kubebuilder:validation:Optional
	JobCancelTimeoutInMinutes *float64 `json:"jobCancelTimeoutInMinutes,omitempty" tf:"job_cancel_timeout_in_minutes,omitempty"`

	// The job execution timeout (in minutes) for builds queued against this definition. Possible values are between 0 and 1000000000. Defaults to 0.
	// +kubebuilder:validation:Optional
	JobTimeoutInMinutes *float64 `json:"jobTimeoutInMinutes,omitempty" tf:"job_timeout_in_minutes,omitempty"`

	// The name of the job.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The reference name of the job, can be used to define the job dependencies.
	// +kubebuilder:validation:Optional
	RefName *string `json:"refName" tf:"ref_name,omitempty"`

	// A target blocks as documented below.
	// +kubebuilder:validation:Optional
	Target *TargetParameters `json:"target" tf:"target,omitempty"`
}

type OverrideBranchFilterInitParameters struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type OverrideBranchFilterObservation struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type OverrideBranchFilterParameters struct {

	// List of path patterns to exclude.
	// +kubebuilder:validation:Optional
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +kubebuilder:validation:Optional
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type OverrideInitParameters struct {

	// If you set batch to true, when a pipeline is running, the system waits until the run is completed, then starts another run with all changes that have not yet been built. Defaults to true.
	Batch *bool `json:"batch,omitempty" tf:"batch,omitempty"`

	// A branch_filter block as defined below.
	BranchFilter []OverrideBranchFilterInitParameters `json:"branchFilter,omitempty" tf:"branch_filter,omitempty"`

	// The number of max builds per branch. Defaults to 1.
	MaxConcurrentBuildsPerBranch *float64 `json:"maxConcurrentBuildsPerBranch,omitempty" tf:"max_concurrent_builds_per_branch,omitempty"`

	// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
	PathFilter []PathFilterInitParameters `json:"pathFilter,omitempty" tf:"path_filter,omitempty"`

	// How often the external repository is polled. Defaults to 0.
	PollingInterval *float64 `json:"pollingInterval,omitempty" tf:"polling_interval,omitempty"`
}

type OverrideObservation struct {

	// If you set batch to true, when a pipeline is running, the system waits until the run is completed, then starts another run with all changes that have not yet been built. Defaults to true.
	Batch *bool `json:"batch,omitempty" tf:"batch,omitempty"`

	// A branch_filter block as defined below.
	BranchFilter []OverrideBranchFilterObservation `json:"branchFilter,omitempty" tf:"branch_filter,omitempty"`

	// The number of max builds per branch. Defaults to 1.
	MaxConcurrentBuildsPerBranch *float64 `json:"maxConcurrentBuildsPerBranch,omitempty" tf:"max_concurrent_builds_per_branch,omitempty"`

	// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
	PathFilter []PathFilterObservation `json:"pathFilter,omitempty" tf:"path_filter,omitempty"`

	// How often the external repository is polled. Defaults to 0.
	PollingInterval *float64 `json:"pollingInterval,omitempty" tf:"polling_interval,omitempty"`

	// (Computed) This is the ID of the polling job that polls the external repository. Once the build definition is saved/updated, this value is set.
	PollingJobID *string `json:"pollingJobId,omitempty" tf:"polling_job_id,omitempty"`
}

type OverrideParameters struct {

	// If you set batch to true, when a pipeline is running, the system waits until the run is completed, then starts another run with all changes that have not yet been built. Defaults to true.
	// +kubebuilder:validation:Optional
	Batch *bool `json:"batch,omitempty" tf:"batch,omitempty"`

	// A branch_filter block as defined below.
	// +kubebuilder:validation:Optional
	BranchFilter []OverrideBranchFilterParameters `json:"branchFilter" tf:"branch_filter,omitempty"`

	// The number of max builds per branch. Defaults to 1.
	// +kubebuilder:validation:Optional
	MaxConcurrentBuildsPerBranch *float64 `json:"maxConcurrentBuildsPerBranch,omitempty" tf:"max_concurrent_builds_per_branch,omitempty"`

	// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
	// +kubebuilder:validation:Optional
	PathFilter []PathFilterParameters `json:"pathFilter,omitempty" tf:"path_filter,omitempty"`

	// How often the external repository is polled. Defaults to 0.
	// +kubebuilder:validation:Optional
	PollingInterval *float64 `json:"pollingInterval,omitempty" tf:"polling_interval,omitempty"`
}

type OverridePathFilterInitParameters struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type OverridePathFilterObservation struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type OverridePathFilterParameters struct {

	// List of path patterns to exclude.
	// +kubebuilder:validation:Optional
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +kubebuilder:validation:Optional
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type PathFilterInitParameters struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type PathFilterObservation struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type PathFilterParameters struct {

	// List of path patterns to exclude.
	// +kubebuilder:validation:Optional
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +kubebuilder:validation:Optional
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type PullRequestTriggerInitParameters struct {
	CommentRequired *string `json:"commentRequired,omitempty" tf:"comment_required,omitempty"`

	// Set permissions for Forked repositories.
	Forks *ForksInitParameters `json:"forks,omitempty" tf:"forks,omitempty"`

	// When use_yaml is true set this to the name of the branch that the azure-pipelines.yml exists on.
	InitialBranch *string `json:"initialBranch,omitempty" tf:"initial_branch,omitempty"`

	// Override the azure-pipeline file and use this configuration for all builds.
	Override *PullRequestTriggerOverrideInitParameters `json:"override,omitempty" tf:"override,omitempty"`

	// Use the azure-pipeline file for the build configuration. Defaults to false.
	UseYaml *bool `json:"useYaml,omitempty" tf:"use_yaml,omitempty"`
}

type PullRequestTriggerObservation struct {
	CommentRequired *string `json:"commentRequired,omitempty" tf:"comment_required,omitempty"`

	// Set permissions for Forked repositories.
	Forks *ForksObservation `json:"forks,omitempty" tf:"forks,omitempty"`

	// When use_yaml is true set this to the name of the branch that the azure-pipelines.yml exists on.
	InitialBranch *string `json:"initialBranch,omitempty" tf:"initial_branch,omitempty"`

	// Override the azure-pipeline file and use this configuration for all builds.
	Override *PullRequestTriggerOverrideObservation `json:"override,omitempty" tf:"override,omitempty"`

	// Use the azure-pipeline file for the build configuration. Defaults to false.
	UseYaml *bool `json:"useYaml,omitempty" tf:"use_yaml,omitempty"`
}

type PullRequestTriggerOverrideBranchFilterInitParameters struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type PullRequestTriggerOverrideBranchFilterObservation struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type PullRequestTriggerOverrideBranchFilterParameters struct {

	// List of path patterns to exclude.
	// +kubebuilder:validation:Optional
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +kubebuilder:validation:Optional
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type PullRequestTriggerOverrideInitParameters struct {

	// . Defaults to true.
	AutoCancel *bool `json:"autoCancel,omitempty" tf:"auto_cancel,omitempty"`

	// A branch_filter block as defined below.
	BranchFilter []PullRequestTriggerOverrideBranchFilterInitParameters `json:"branchFilter,omitempty" tf:"branch_filter,omitempty"`

	// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
	PathFilter []OverridePathFilterInitParameters `json:"pathFilter,omitempty" tf:"path_filter,omitempty"`
}

type PullRequestTriggerOverrideObservation struct {

	// . Defaults to true.
	AutoCancel *bool `json:"autoCancel,omitempty" tf:"auto_cancel,omitempty"`

	// A branch_filter block as defined below.
	BranchFilter []PullRequestTriggerOverrideBranchFilterObservation `json:"branchFilter,omitempty" tf:"branch_filter,omitempty"`

	// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
	PathFilter []OverridePathFilterObservation `json:"pathFilter,omitempty" tf:"path_filter,omitempty"`
}

type PullRequestTriggerOverrideParameters struct {

	// . Defaults to true.
	// +kubebuilder:validation:Optional
	AutoCancel *bool `json:"autoCancel,omitempty" tf:"auto_cancel,omitempty"`

	// A branch_filter block as defined below.
	// +kubebuilder:validation:Optional
	BranchFilter []PullRequestTriggerOverrideBranchFilterParameters `json:"branchFilter" tf:"branch_filter,omitempty"`

	// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
	// +kubebuilder:validation:Optional
	PathFilter []OverridePathFilterParameters `json:"pathFilter,omitempty" tf:"path_filter,omitempty"`
}

type PullRequestTriggerParameters struct {

	// +kubebuilder:validation:Optional
	CommentRequired *string `json:"commentRequired,omitempty" tf:"comment_required,omitempty"`

	// Set permissions for Forked repositories.
	// +kubebuilder:validation:Optional
	Forks *ForksParameters `json:"forks" tf:"forks,omitempty"`

	// When use_yaml is true set this to the name of the branch that the azure-pipelines.yml exists on.
	// +kubebuilder:validation:Optional
	InitialBranch *string `json:"initialBranch,omitempty" tf:"initial_branch,omitempty"`

	// Override the azure-pipeline file and use this configuration for all builds.
	// +kubebuilder:validation:Optional
	Override *PullRequestTriggerOverrideParameters `json:"override,omitempty" tf:"override,omitempty"`

	// Use the azure-pipeline file for the build configuration. Defaults to false.
	// +kubebuilder:validation:Optional
	UseYaml *bool `json:"useYaml,omitempty" tf:"use_yaml,omitempty"`
}

type RepositoryInitParameters struct {

	// The branch name for which builds are triggered. Defaults to master.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/repos/v1alpha1.GitRepository
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("default_branch",false)
	BranchName *string `json:"branchName,omitempty" tf:"branch_name,omitempty"`

	// Reference to a GitRepository in repos to populate branchName.
	// +kubebuilder:validation:Optional
	BranchNameRef *v1.Reference `json:"branchNameRef,omitempty" tf:"-"`

	// Selector for a GitRepository in repos to populate branchName.
	// +kubebuilder:validation:Optional
	BranchNameSelector *v1.Selector `json:"branchNameSelector,omitempty" tf:"-"`

	// The Github Enterprise URL. Used if repo_type is GithubEnterprise. Conflict with url
	GithubEnterpriseURL *string `json:"githubEnterpriseUrl,omitempty" tf:"github_enterprise_url,omitempty"`

	// The id of the repository. For TfsGit repos, this is simply the ID of the repository. For Github repos, this will take the form of <GitHub Org>/<Repo Name>. For Bitbucket repos, this will take the form of <Workspace ID>/<Repo Name>.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/repos/v1alpha1.GitRepository
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	RepoID *string `json:"repoId,omitempty" tf:"repo_id,omitempty"`

	// Reference to a GitRepository in repos to populate repoId.
	// +kubebuilder:validation:Optional
	RepoIDRef *v1.Reference `json:"repoIdRef,omitempty" tf:"-"`

	// Selector for a GitRepository in repos to populate repoId.
	// +kubebuilder:validation:Optional
	RepoIDSelector *v1.Selector `json:"repoIdSelector,omitempty" tf:"-"`

	// The repository type. Possible values are: GitHub or TfsGit or Bitbucket or GitHub Enterprise or Git. Defaults to GitHub. If repo_type is GitHubEnterprise, must use existing project and GitHub Enterprise service connection.
	RepoType *string `json:"repoType,omitempty" tf:"repo_type,omitempty"`

	// Report build status. Default is true.
	ReportBuildStatus *bool `json:"reportBuildStatus,omitempty" tf:"report_build_status,omitempty"`

	// The service connection ID. Used if the repo_type is GitHub or GitHubEnterprise.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/serviceendpoint/v1alpha1.ServiceendpointGithubEnterprise
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ServiceConnectionID *string `json:"serviceConnectionId,omitempty" tf:"service_connection_id,omitempty"`

	// Reference to a ServiceendpointGithubEnterprise in serviceendpoint to populate serviceConnectionId.
	// +kubebuilder:validation:Optional
	ServiceConnectionIDRef *v1.Reference `json:"serviceConnectionIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointGithubEnterprise in serviceendpoint to populate serviceConnectionId.
	// +kubebuilder:validation:Optional
	ServiceConnectionIDSelector *v1.Selector `json:"serviceConnectionIdSelector,omitempty" tf:"-"`

	// The URL of the Git repository. Used if repo_type is Git. Conflict with github_enterprise_url
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/serviceendpoint/v1alpha1.ServiceendpointGenericGit
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("repository_url",false)
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// Reference to a ServiceendpointGenericGit in serviceendpoint to populate url.
	// +kubebuilder:validation:Optional
	URLRef *v1.Reference `json:"urlRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointGenericGit in serviceendpoint to populate url.
	// +kubebuilder:validation:Optional
	URLSelector *v1.Selector `json:"urlSelector,omitempty" tf:"-"`

	// The path of the Yaml file describing the build definition.
	YmlPath *string `json:"ymlPath,omitempty" tf:"yml_path,omitempty"`
}

type RepositoryObservation struct {

	// The branch name for which builds are triggered. Defaults to master.
	BranchName *string `json:"branchName,omitempty" tf:"branch_name,omitempty"`

	// The Github Enterprise URL. Used if repo_type is GithubEnterprise. Conflict with url
	GithubEnterpriseURL *string `json:"githubEnterpriseUrl,omitempty" tf:"github_enterprise_url,omitempty"`

	// The id of the repository. For TfsGit repos, this is simply the ID of the repository. For Github repos, this will take the form of <GitHub Org>/<Repo Name>. For Bitbucket repos, this will take the form of <Workspace ID>/<Repo Name>.
	RepoID *string `json:"repoId,omitempty" tf:"repo_id,omitempty"`

	// The repository type. Possible values are: GitHub or TfsGit or Bitbucket or GitHub Enterprise or Git. Defaults to GitHub. If repo_type is GitHubEnterprise, must use existing project and GitHub Enterprise service connection.
	RepoType *string `json:"repoType,omitempty" tf:"repo_type,omitempty"`

	// Report build status. Default is true.
	ReportBuildStatus *bool `json:"reportBuildStatus,omitempty" tf:"report_build_status,omitempty"`

	// The service connection ID. Used if the repo_type is GitHub or GitHubEnterprise.
	ServiceConnectionID *string `json:"serviceConnectionId,omitempty" tf:"service_connection_id,omitempty"`

	// The URL of the Git repository. Used if repo_type is Git. Conflict with github_enterprise_url
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// The path of the Yaml file describing the build definition.
	YmlPath *string `json:"ymlPath,omitempty" tf:"yml_path,omitempty"`
}

type RepositoryParameters struct {

	// The branch name for which builds are triggered. Defaults to master.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/repos/v1alpha1.GitRepository
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("default_branch",false)
	// +kubebuilder:validation:Optional
	BranchName *string `json:"branchName,omitempty" tf:"branch_name,omitempty"`

	// Reference to a GitRepository in repos to populate branchName.
	// +kubebuilder:validation:Optional
	BranchNameRef *v1.Reference `json:"branchNameRef,omitempty" tf:"-"`

	// Selector for a GitRepository in repos to populate branchName.
	// +kubebuilder:validation:Optional
	BranchNameSelector *v1.Selector `json:"branchNameSelector,omitempty" tf:"-"`

	// The Github Enterprise URL. Used if repo_type is GithubEnterprise. Conflict with url
	// +kubebuilder:validation:Optional
	GithubEnterpriseURL *string `json:"githubEnterpriseUrl,omitempty" tf:"github_enterprise_url,omitempty"`

	// The id of the repository. For TfsGit repos, this is simply the ID of the repository. For Github repos, this will take the form of <GitHub Org>/<Repo Name>. For Bitbucket repos, this will take the form of <Workspace ID>/<Repo Name>.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/repos/v1alpha1.GitRepository
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	RepoID *string `json:"repoId,omitempty" tf:"repo_id,omitempty"`

	// Reference to a GitRepository in repos to populate repoId.
	// +kubebuilder:validation:Optional
	RepoIDRef *v1.Reference `json:"repoIdRef,omitempty" tf:"-"`

	// Selector for a GitRepository in repos to populate repoId.
	// +kubebuilder:validation:Optional
	RepoIDSelector *v1.Selector `json:"repoIdSelector,omitempty" tf:"-"`

	// The repository type. Possible values are: GitHub or TfsGit or Bitbucket or GitHub Enterprise or Git. Defaults to GitHub. If repo_type is GitHubEnterprise, must use existing project and GitHub Enterprise service connection.
	// +kubebuilder:validation:Optional
	RepoType *string `json:"repoType" tf:"repo_type,omitempty"`

	// Report build status. Default is true.
	// +kubebuilder:validation:Optional
	ReportBuildStatus *bool `json:"reportBuildStatus,omitempty" tf:"report_build_status,omitempty"`

	// The service connection ID. Used if the repo_type is GitHub or GitHubEnterprise.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/serviceendpoint/v1alpha1.ServiceendpointGithubEnterprise
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServiceConnectionID *string `json:"serviceConnectionId,omitempty" tf:"service_connection_id,omitempty"`

	// Reference to a ServiceendpointGithubEnterprise in serviceendpoint to populate serviceConnectionId.
	// +kubebuilder:validation:Optional
	ServiceConnectionIDRef *v1.Reference `json:"serviceConnectionIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointGithubEnterprise in serviceendpoint to populate serviceConnectionId.
	// +kubebuilder:validation:Optional
	ServiceConnectionIDSelector *v1.Selector `json:"serviceConnectionIdSelector,omitempty" tf:"-"`

	// The URL of the Git repository. Used if repo_type is Git. Conflict with github_enterprise_url
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/serviceendpoint/v1alpha1.ServiceendpointGenericGit
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("repository_url",false)
	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`

	// Reference to a ServiceendpointGenericGit in serviceendpoint to populate url.
	// +kubebuilder:validation:Optional
	URLRef *v1.Reference `json:"urlRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointGenericGit in serviceendpoint to populate url.
	// +kubebuilder:validation:Optional
	URLSelector *v1.Selector `json:"urlSelector,omitempty" tf:"-"`

	// The path of the Yaml file describing the build definition.
	// +kubebuilder:validation:Optional
	YmlPath *string `json:"ymlPath,omitempty" tf:"yml_path,omitempty"`
}

type SchedulesBranchFilterInitParameters struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type SchedulesBranchFilterObservation struct {

	// List of path patterns to exclude.
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type SchedulesBranchFilterParameters struct {

	// List of path patterns to exclude.
	// +kubebuilder:validation:Optional
	// +listType=set
	Exclude []*string `json:"exclude,omitempty" tf:"exclude,omitempty"`

	// List of path patterns to include.
	// +kubebuilder:validation:Optional
	// +listType=set
	Include []*string `json:"include,omitempty" tf:"include,omitempty"`
}

type SchedulesInitParameters struct {

	// A branch_filter block as defined below.
	BranchFilter []SchedulesBranchFilterInitParameters `json:"branchFilter,omitempty" tf:"branch_filter,omitempty"`

	// :  When to build. Possible values are: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
	DaysToBuild []*string `json:"daysToBuild,omitempty" tf:"days_to_build,omitempty"`

	// :  Schedule builds if the source or pipeline has changed. Defaults to true.
	ScheduleOnlyWithChanges *bool `json:"scheduleOnlyWithChanges,omitempty" tf:"schedule_only_with_changes,omitempty"`

	// :  Build start hour. Possible values are: 0 ~ 23. Defaults to 0.
	StartHours *float64 `json:"startHours,omitempty" tf:"start_hours,omitempty"`

	// :  Build start minute. Possible values are: 0 ~ 59. Defaults to 0.
	StartMinutes *float64 `json:"startMinutes,omitempty" tf:"start_minutes,omitempty"`

	// 12:00) International Date Line West,
	// (UTC-11:00) Coordinated Universal Time-11,
	// (UTC-10:00) Aleutian Islands,
	// (UTC-10:00) Hawaii,
	// (UTC-09:30) Marquesas Islands,
	// (UTC-09:00) Alaska,
	// (UTC-09:00) Coordinated Universal Time-09,
	// (UTC-08:00) Baja California,
	// (UTC-08:00) Coordinated Universal Time-08,
	// (UTC-08:00) Pacific Time (US &Canada),
	// (UTC-07:00) Arizona,
	// (UTC-07:00) Chihuahua, La Paz, Mazatlan,
	// (UTC-07:00) Mountain Time (US &Canada),
	// (UTC-07:00) Yukon,
	// (UTC-06:00) Central America,
	// (UTC-06:00) Central Time (US &Canada),
	// (UTC-06:00) Easter Island,
	// (UTC-06:00) Guadalajara, Mexico City, Monterrey,
	// (UTC-06:00) Saskatchewan,
	// (UTC-05:00) Bogota, Lima, Quito, Rio Branco,
	// (UTC-05:00) Chetumal,
	// (UTC-05:00) Eastern Time (US &Canada),
	// (UTC-05:00) Haiti,
	// (UTC-05:00) Havana,
	// (UTC-05:00) Indiana (East),
	// (UTC-05:00) Turks and Caicos,
	// (UTC-04:00) Asuncion,
	// (UTC-04:00) Atlantic Time (Canada),
	// (UTC-04:00) Caracas,
	// (UTC-04:00) Cuiaba,
	// (UTC-04:00) Georgetown, La Paz, Manaus, San Juan,
	// (UTC-04:00) Santiago,
	// (UTC-03:30) Newfoundland,
	// (UTC-03:00) Araguaina,
	// (UTC-03:00) Brasilia,
	// (UTC-03:00) Cayenne, Fortaleza,
	// (UTC-03:00) City of Buenos Aires,
	// (UTC-03:00) Greenland,
	// (UTC-03:00) Montevideo,
	// (UTC-03:00) Punta Arenas,
	// (UTC-03:00) Saint Pierre and Miquelon,
	// (UTC-03:00) Salvador,
	// (UTC-02:00) Coordinated Universal Time-02,
	// (UTC-02:00) Mid-Atlantic - Old,
	// (UTC-01:00) Azores,
	// (UTC-01:00) Cabo Verde Is.,
	// (UTC) Coordinated Universal Time,
	// (UTC+00:00) Dublin, Edinburgh, Lisbon, London,
	// (UTC+00:00) Monrovia, Reykjavik,
	// (UTC+00:00) Sao Tome,
	// (UTC+01:00) Casablanca,
	// (UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna,
	// (UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague,
	// (UTC+01:00) Brussels, Copenhagen, Madrid, Paris,
	// (UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb,
	// (UTC+01:00) West Central Africa,
	// (UTC+02:00) Amman,
	// (UTC+02:00) Athens, Bucharest,
	// (UTC+02:00) Beirut,
	// (UTC+02:00) Cairo,
	// (UTC+02:00) Chisinau,
	// (UTC+02:00) Damascus,
	// (UTC+02:00) Gaza, Hebron,
	// (UTC+02:00) Harare, Pretoria,
	// (UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius,
	// (UTC+02:00) Jerusalem,
	// (UTC+02:00) Juba,
	// (UTC+02:00) Kaliningrad,
	// (UTC+02:00) Khartoum,
	// (UTC+02:00) Tripoli,
	// (UTC+02:00) Windhoek,
	// (UTC+03:00) Baghdad,
	// (UTC+03:00) Istanbul,
	// (UTC+03:00) Kuwait, Riyadh,
	// (UTC+03:00) Minsk,
	// (UTC+03:00) Moscow, St. Petersburg,
	// (UTC+03:00) Nairobi,
	// (UTC+03:00) Volgograd,
	// (UTC+03:30) Tehran,
	// (UTC+04:00) Abu Dhabi, Muscat,
	// (UTC+04:00) Astrakhan, Ulyanovsk,
	// (UTC+04:00) Baku,
	// (UTC+04:00) Izhevsk, Samara,
	// (UTC+04:00) Port Louis,
	// (UTC+04:00) Saratov,
	// (UTC+04:00) Tbilisi,
	// (UTC+04:00) Yerevan,
	// (UTC+04:30) Kabul,
	// (UTC+05:00) Ashgabat, Tashkent,
	// (UTC+05:00) Ekaterinburg,
	// (UTC+05:00) Islamabad, Karachi,
	// (UTC+05:00) Qyzylorda,
	// (UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi,
	// (UTC+05:30) Sri Jayawardenepura,
	// (UTC+05:45) Kathmandu,
	// (UTC+06:00) Astana,
	// (UTC+06:00) Dhaka,
	// (UTC+06:00) Omsk,
	// (UTC+06:30) Yangon (Rangoon),
	// (UTC+07:00) Bangkok, Hanoi, Jakarta,
	// (UTC+07:00) Barnaul, Gorno-Altaysk,
	// (UTC+07:00) Hovd,
	// (UTC+07:00) Krasnoyarsk,
	// (UTC+07:00) Novosibirsk,
	// (UTC+07:00) Tomsk,
	// (UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi,
	// (UTC+08:00) Irkutsk,
	// (UTC+08:00) Kuala Lumpur, Singapore,
	// (UTC+08:00) Perth,
	// (UTC+08:00) Taipei,
	// (UTC+08:00) Ulaanbaatar,
	// (UTC+08:45) Eucla,
	// (UTC+09:00) Chita,
	// (UTC+09:00) Osaka, Sapporo, Tokyo,
	// (UTC+09:00) Pyongyang,
	// (UTC+09:00) Seoul,
	// (UTC+09:00) Yakutsk,
	// (UTC+09:30) Adelaide,
	// (UTC+09:30) Darwin,
	// (UTC+10:00) Brisbane,
	// (UTC+10:00) Canberra, Melbourne, Sydney,
	// (UTC+10:00) Guam, Port Moresby,
	// (UTC+10:00) Hobart,
	// (UTC+10:00) Vladivostok,
	// (UTC+10:30) Lord Howe Island,
	// (UTC+11:00) Bougainville Island,
	// (UTC+11:00) Chokurdakh,
	// (UTC+11:00) Magadan,
	// (UTC+11:00) Norfolk Island,
	// (UTC+11:00) Sakhalin,
	// (UTC+11:00) Solomon Is., New Caledonia,
	// (UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky,
	// (UTC+12:00) Auckland, Wellington,
	// (UTC+12:00) Coordinated Universal Time+12,
	// (UTC+12:00) Fiji,
	// (UTC+12:00) Petropavlovsk-Kamchatsky - Old,
	// (UTC+12:45) Chatham Islands,
	// (UTC+13:00) Coordinated Universal Time+13,
	// (UTC+13:00) Nuku'alofa,
	// (UTC+13:00) Samoa,
	// (UTC+14:00) Kiritimati Island.
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`
}

type SchedulesObservation struct {

	// A branch_filter block as defined below.
	BranchFilter []SchedulesBranchFilterObservation `json:"branchFilter,omitempty" tf:"branch_filter,omitempty"`

	// :  When to build. Possible values are: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
	DaysToBuild []*string `json:"daysToBuild,omitempty" tf:"days_to_build,omitempty"`

	// The ID of the schedule job
	ScheduleJobID *string `json:"scheduleJobId,omitempty" tf:"schedule_job_id,omitempty"`

	// :  Schedule builds if the source or pipeline has changed. Defaults to true.
	ScheduleOnlyWithChanges *bool `json:"scheduleOnlyWithChanges,omitempty" tf:"schedule_only_with_changes,omitempty"`

	// :  Build start hour. Possible values are: 0 ~ 23. Defaults to 0.
	StartHours *float64 `json:"startHours,omitempty" tf:"start_hours,omitempty"`

	// :  Build start minute. Possible values are: 0 ~ 59. Defaults to 0.
	StartMinutes *float64 `json:"startMinutes,omitempty" tf:"start_minutes,omitempty"`

	// 12:00) International Date Line West,
	// (UTC-11:00) Coordinated Universal Time-11,
	// (UTC-10:00) Aleutian Islands,
	// (UTC-10:00) Hawaii,
	// (UTC-09:30) Marquesas Islands,
	// (UTC-09:00) Alaska,
	// (UTC-09:00) Coordinated Universal Time-09,
	// (UTC-08:00) Baja California,
	// (UTC-08:00) Coordinated Universal Time-08,
	// (UTC-08:00) Pacific Time (US &Canada),
	// (UTC-07:00) Arizona,
	// (UTC-07:00) Chihuahua, La Paz, Mazatlan,
	// (UTC-07:00) Mountain Time (US &Canada),
	// (UTC-07:00) Yukon,
	// (UTC-06:00) Central America,
	// (UTC-06:00) Central Time (US &Canada),
	// (UTC-06:00) Easter Island,
	// (UTC-06:00) Guadalajara, Mexico City, Monterrey,
	// (UTC-06:00) Saskatchewan,
	// (UTC-05:00) Bogota, Lima, Quito, Rio Branco,
	// (UTC-05:00) Chetumal,
	// (UTC-05:00) Eastern Time (US &Canada),
	// (UTC-05:00) Haiti,
	// (UTC-05:00) Havana,
	// (UTC-05:00) Indiana (East),
	// (UTC-05:00) Turks and Caicos,
	// (UTC-04:00) Asuncion,
	// (UTC-04:00) Atlantic Time (Canada),
	// (UTC-04:00) Caracas,
	// (UTC-04:00) Cuiaba,
	// (UTC-04:00) Georgetown, La Paz, Manaus, San Juan,
	// (UTC-04:00) Santiago,
	// (UTC-03:30) Newfoundland,
	// (UTC-03:00) Araguaina,
	// (UTC-03:00) Brasilia,
	// (UTC-03:00) Cayenne, Fortaleza,
	// (UTC-03:00) City of Buenos Aires,
	// (UTC-03:00) Greenland,
	// (UTC-03:00) Montevideo,
	// (UTC-03:00) Punta Arenas,
	// (UTC-03:00) Saint Pierre and Miquelon,
	// (UTC-03:00) Salvador,
	// (UTC-02:00) Coordinated Universal Time-02,
	// (UTC-02:00) Mid-Atlantic - Old,
	// (UTC-01:00) Azores,
	// (UTC-01:00) Cabo Verde Is.,
	// (UTC) Coordinated Universal Time,
	// (UTC+00:00) Dublin, Edinburgh, Lisbon, London,
	// (UTC+00:00) Monrovia, Reykjavik,
	// (UTC+00:00) Sao Tome,
	// (UTC+01:00) Casablanca,
	// (UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna,
	// (UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague,
	// (UTC+01:00) Brussels, Copenhagen, Madrid, Paris,
	// (UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb,
	// (UTC+01:00) West Central Africa,
	// (UTC+02:00) Amman,
	// (UTC+02:00) Athens, Bucharest,
	// (UTC+02:00) Beirut,
	// (UTC+02:00) Cairo,
	// (UTC+02:00) Chisinau,
	// (UTC+02:00) Damascus,
	// (UTC+02:00) Gaza, Hebron,
	// (UTC+02:00) Harare, Pretoria,
	// (UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius,
	// (UTC+02:00) Jerusalem,
	// (UTC+02:00) Juba,
	// (UTC+02:00) Kaliningrad,
	// (UTC+02:00) Khartoum,
	// (UTC+02:00) Tripoli,
	// (UTC+02:00) Windhoek,
	// (UTC+03:00) Baghdad,
	// (UTC+03:00) Istanbul,
	// (UTC+03:00) Kuwait, Riyadh,
	// (UTC+03:00) Minsk,
	// (UTC+03:00) Moscow, St. Petersburg,
	// (UTC+03:00) Nairobi,
	// (UTC+03:00) Volgograd,
	// (UTC+03:30) Tehran,
	// (UTC+04:00) Abu Dhabi, Muscat,
	// (UTC+04:00) Astrakhan, Ulyanovsk,
	// (UTC+04:00) Baku,
	// (UTC+04:00) Izhevsk, Samara,
	// (UTC+04:00) Port Louis,
	// (UTC+04:00) Saratov,
	// (UTC+04:00) Tbilisi,
	// (UTC+04:00) Yerevan,
	// (UTC+04:30) Kabul,
	// (UTC+05:00) Ashgabat, Tashkent,
	// (UTC+05:00) Ekaterinburg,
	// (UTC+05:00) Islamabad, Karachi,
	// (UTC+05:00) Qyzylorda,
	// (UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi,
	// (UTC+05:30) Sri Jayawardenepura,
	// (UTC+05:45) Kathmandu,
	// (UTC+06:00) Astana,
	// (UTC+06:00) Dhaka,
	// (UTC+06:00) Omsk,
	// (UTC+06:30) Yangon (Rangoon),
	// (UTC+07:00) Bangkok, Hanoi, Jakarta,
	// (UTC+07:00) Barnaul, Gorno-Altaysk,
	// (UTC+07:00) Hovd,
	// (UTC+07:00) Krasnoyarsk,
	// (UTC+07:00) Novosibirsk,
	// (UTC+07:00) Tomsk,
	// (UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi,
	// (UTC+08:00) Irkutsk,
	// (UTC+08:00) Kuala Lumpur, Singapore,
	// (UTC+08:00) Perth,
	// (UTC+08:00) Taipei,
	// (UTC+08:00) Ulaanbaatar,
	// (UTC+08:45) Eucla,
	// (UTC+09:00) Chita,
	// (UTC+09:00) Osaka, Sapporo, Tokyo,
	// (UTC+09:00) Pyongyang,
	// (UTC+09:00) Seoul,
	// (UTC+09:00) Yakutsk,
	// (UTC+09:30) Adelaide,
	// (UTC+09:30) Darwin,
	// (UTC+10:00) Brisbane,
	// (UTC+10:00) Canberra, Melbourne, Sydney,
	// (UTC+10:00) Guam, Port Moresby,
	// (UTC+10:00) Hobart,
	// (UTC+10:00) Vladivostok,
	// (UTC+10:30) Lord Howe Island,
	// (UTC+11:00) Bougainville Island,
	// (UTC+11:00) Chokurdakh,
	// (UTC+11:00) Magadan,
	// (UTC+11:00) Norfolk Island,
	// (UTC+11:00) Sakhalin,
	// (UTC+11:00) Solomon Is., New Caledonia,
	// (UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky,
	// (UTC+12:00) Auckland, Wellington,
	// (UTC+12:00) Coordinated Universal Time+12,
	// (UTC+12:00) Fiji,
	// (UTC+12:00) Petropavlovsk-Kamchatsky - Old,
	// (UTC+12:45) Chatham Islands,
	// (UTC+13:00) Coordinated Universal Time+13,
	// (UTC+13:00) Nuku'alofa,
	// (UTC+13:00) Samoa,
	// (UTC+14:00) Kiritimati Island.
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`
}

type SchedulesParameters struct {

	// A branch_filter block as defined below.
	// +kubebuilder:validation:Optional
	BranchFilter []SchedulesBranchFilterParameters `json:"branchFilter" tf:"branch_filter,omitempty"`

	// :  When to build. Possible values are: Mon, Tue, Wed, Thu, Fri, Sat, Sun.
	// +kubebuilder:validation:Optional
	DaysToBuild []*string `json:"daysToBuild" tf:"days_to_build,omitempty"`

	// :  Schedule builds if the source or pipeline has changed. Defaults to true.
	// +kubebuilder:validation:Optional
	ScheduleOnlyWithChanges *bool `json:"scheduleOnlyWithChanges,omitempty" tf:"schedule_only_with_changes,omitempty"`

	// :  Build start hour. Possible values are: 0 ~ 23. Defaults to 0.
	// +kubebuilder:validation:Optional
	StartHours *float64 `json:"startHours,omitempty" tf:"start_hours,omitempty"`

	// :  Build start minute. Possible values are: 0 ~ 59. Defaults to 0.
	// +kubebuilder:validation:Optional
	StartMinutes *float64 `json:"startMinutes,omitempty" tf:"start_minutes,omitempty"`

	// 12:00) International Date Line West,
	// (UTC-11:00) Coordinated Universal Time-11,
	// (UTC-10:00) Aleutian Islands,
	// (UTC-10:00) Hawaii,
	// (UTC-09:30) Marquesas Islands,
	// (UTC-09:00) Alaska,
	// (UTC-09:00) Coordinated Universal Time-09,
	// (UTC-08:00) Baja California,
	// (UTC-08:00) Coordinated Universal Time-08,
	// (UTC-08:00) Pacific Time (US &Canada),
	// (UTC-07:00) Arizona,
	// (UTC-07:00) Chihuahua, La Paz, Mazatlan,
	// (UTC-07:00) Mountain Time (US &Canada),
	// (UTC-07:00) Yukon,
	// (UTC-06:00) Central America,
	// (UTC-06:00) Central Time (US &Canada),
	// (UTC-06:00) Easter Island,
	// (UTC-06:00) Guadalajara, Mexico City, Monterrey,
	// (UTC-06:00) Saskatchewan,
	// (UTC-05:00) Bogota, Lima, Quito, Rio Branco,
	// (UTC-05:00) Chetumal,
	// (UTC-05:00) Eastern Time (US &Canada),
	// (UTC-05:00) Haiti,
	// (UTC-05:00) Havana,
	// (UTC-05:00) Indiana (East),
	// (UTC-05:00) Turks and Caicos,
	// (UTC-04:00) Asuncion,
	// (UTC-04:00) Atlantic Time (Canada),
	// (UTC-04:00) Caracas,
	// (UTC-04:00) Cuiaba,
	// (UTC-04:00) Georgetown, La Paz, Manaus, San Juan,
	// (UTC-04:00) Santiago,
	// (UTC-03:30) Newfoundland,
	// (UTC-03:00) Araguaina,
	// (UTC-03:00) Brasilia,
	// (UTC-03:00) Cayenne, Fortaleza,
	// (UTC-03:00) City of Buenos Aires,
	// (UTC-03:00) Greenland,
	// (UTC-03:00) Montevideo,
	// (UTC-03:00) Punta Arenas,
	// (UTC-03:00) Saint Pierre and Miquelon,
	// (UTC-03:00) Salvador,
	// (UTC-02:00) Coordinated Universal Time-02,
	// (UTC-02:00) Mid-Atlantic - Old,
	// (UTC-01:00) Azores,
	// (UTC-01:00) Cabo Verde Is.,
	// (UTC) Coordinated Universal Time,
	// (UTC+00:00) Dublin, Edinburgh, Lisbon, London,
	// (UTC+00:00) Monrovia, Reykjavik,
	// (UTC+00:00) Sao Tome,
	// (UTC+01:00) Casablanca,
	// (UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna,
	// (UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague,
	// (UTC+01:00) Brussels, Copenhagen, Madrid, Paris,
	// (UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb,
	// (UTC+01:00) West Central Africa,
	// (UTC+02:00) Amman,
	// (UTC+02:00) Athens, Bucharest,
	// (UTC+02:00) Beirut,
	// (UTC+02:00) Cairo,
	// (UTC+02:00) Chisinau,
	// (UTC+02:00) Damascus,
	// (UTC+02:00) Gaza, Hebron,
	// (UTC+02:00) Harare, Pretoria,
	// (UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius,
	// (UTC+02:00) Jerusalem,
	// (UTC+02:00) Juba,
	// (UTC+02:00) Kaliningrad,
	// (UTC+02:00) Khartoum,
	// (UTC+02:00) Tripoli,
	// (UTC+02:00) Windhoek,
	// (UTC+03:00) Baghdad,
	// (UTC+03:00) Istanbul,
	// (UTC+03:00) Kuwait, Riyadh,
	// (UTC+03:00) Minsk,
	// (UTC+03:00) Moscow, St. Petersburg,
	// (UTC+03:00) Nairobi,
	// (UTC+03:00) Volgograd,
	// (UTC+03:30) Tehran,
	// (UTC+04:00) Abu Dhabi, Muscat,
	// (UTC+04:00) Astrakhan, Ulyanovsk,
	// (UTC+04:00) Baku,
	// (UTC+04:00) Izhevsk, Samara,
	// (UTC+04:00) Port Louis,
	// (UTC+04:00) Saratov,
	// (UTC+04:00) Tbilisi,
	// (UTC+04:00) Yerevan,
	// (UTC+04:30) Kabul,
	// (UTC+05:00) Ashgabat, Tashkent,
	// (UTC+05:00) Ekaterinburg,
	// (UTC+05:00) Islamabad, Karachi,
	// (UTC+05:00) Qyzylorda,
	// (UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi,
	// (UTC+05:30) Sri Jayawardenepura,
	// (UTC+05:45) Kathmandu,
	// (UTC+06:00) Astana,
	// (UTC+06:00) Dhaka,
	// (UTC+06:00) Omsk,
	// (UTC+06:30) Yangon (Rangoon),
	// (UTC+07:00) Bangkok, Hanoi, Jakarta,
	// (UTC+07:00) Barnaul, Gorno-Altaysk,
	// (UTC+07:00) Hovd,
	// (UTC+07:00) Krasnoyarsk,
	// (UTC+07:00) Novosibirsk,
	// (UTC+07:00) Tomsk,
	// (UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi,
	// (UTC+08:00) Irkutsk,
	// (UTC+08:00) Kuala Lumpur, Singapore,
	// (UTC+08:00) Perth,
	// (UTC+08:00) Taipei,
	// (UTC+08:00) Ulaanbaatar,
	// (UTC+08:45) Eucla,
	// (UTC+09:00) Chita,
	// (UTC+09:00) Osaka, Sapporo, Tokyo,
	// (UTC+09:00) Pyongyang,
	// (UTC+09:00) Seoul,
	// (UTC+09:00) Yakutsk,
	// (UTC+09:30) Adelaide,
	// (UTC+09:30) Darwin,
	// (UTC+10:00) Brisbane,
	// (UTC+10:00) Canberra, Melbourne, Sydney,
	// (UTC+10:00) Guam, Port Moresby,
	// (UTC+10:00) Hobart,
	// (UTC+10:00) Vladivostok,
	// (UTC+10:30) Lord Howe Island,
	// (UTC+11:00) Bougainville Island,
	// (UTC+11:00) Chokurdakh,
	// (UTC+11:00) Magadan,
	// (UTC+11:00) Norfolk Island,
	// (UTC+11:00) Sakhalin,
	// (UTC+11:00) Solomon Is., New Caledonia,
	// (UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky,
	// (UTC+12:00) Auckland, Wellington,
	// (UTC+12:00) Coordinated Universal Time+12,
	// (UTC+12:00) Fiji,
	// (UTC+12:00) Petropavlovsk-Kamchatsky - Old,
	// (UTC+12:45) Chatham Islands,
	// (UTC+13:00) Coordinated Universal Time+13,
	// (UTC+13:00) Nuku'alofa,
	// (UTC+13:00) Samoa,
	// (UTC+14:00) Kiritimati Island.
	// +kubebuilder:validation:Optional
	TimeZone *string `json:"timeZone,omitempty" tf:"time_zone,omitempty"`
}

type TargetInitParameters struct {

	// A list of demands that represents the agent capabilities required by this build. Example: git
	Demands []*string `json:"demands,omitempty" tf:"demands,omitempty"`

	// A execution_options blocks as documented below.
	ExecutionOptions *ExecutionOptionsInitParameters `json:"executionOptions,omitempty" tf:"execution_options,omitempty"`

	// The job type. Possible values: AgentJob, AgentlessJob
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TargetObservation struct {

	// A list of demands that represents the agent capabilities required by this build. Example: git
	Demands []*string `json:"demands,omitempty" tf:"demands,omitempty"`

	// A execution_options blocks as documented below.
	ExecutionOptions *ExecutionOptionsObservation `json:"executionOptions,omitempty" tf:"execution_options,omitempty"`

	// The job type. Possible values: AgentJob, AgentlessJob
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type TargetParameters struct {

	// A list of demands that represents the agent capabilities required by this build. Example: git
	// +kubebuilder:validation:Optional
	Demands []*string `json:"demands,omitempty" tf:"demands,omitempty"`

	// A execution_options blocks as documented below.
	// +kubebuilder:validation:Optional
	ExecutionOptions *ExecutionOptionsParameters `json:"executionOptions" tf:"execution_options,omitempty"`

	// The job type. Possible values: AgentJob, AgentlessJob
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type VariableInitParameters struct {

	// True if the variable can be overridden. Defaults to true.
	AllowOverride *bool `json:"allowOverride,omitempty" tf:"allow_override,omitempty"`

	// True if the variable is a secret. Defaults to false.
	IsSecret *bool `json:"isSecret,omitempty" tf:"is_secret,omitempty"`

	// The name of the variable.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The secret value of the variable. Used when is_secret set to true.
	SecretValueSecretRef *v1.SecretKeySelector `json:"secretValueSecretRef,omitempty" tf:"-"`

	// The value of the variable.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VariableObservation struct {

	// True if the variable can be overridden. Defaults to true.
	AllowOverride *bool `json:"allowOverride,omitempty" tf:"allow_override,omitempty"`

	// True if the variable is a secret. Defaults to false.
	IsSecret *bool `json:"isSecret,omitempty" tf:"is_secret,omitempty"`

	// The name of the variable.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The value of the variable.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type VariableParameters struct {

	// True if the variable can be overridden. Defaults to true.
	// +kubebuilder:validation:Optional
	AllowOverride *bool `json:"allowOverride,omitempty" tf:"allow_override,omitempty"`

	// True if the variable is a secret. Defaults to false.
	// +kubebuilder:validation:Optional
	IsSecret *bool `json:"isSecret,omitempty" tf:"is_secret,omitempty"`

	// The name of the variable.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// The secret value of the variable. Used when is_secret set to true.
	// +kubebuilder:validation:Optional
	SecretValueSecretRef *v1.SecretKeySelector `json:"secretValueSecretRef,omitempty" tf:"-"`

	// The value of the variable.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

// BuildDefinitionSpec defines the desired state of BuildDefinition
type BuildDefinitionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BuildDefinitionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BuildDefinitionInitParameters `json:"initProvider,omitempty"`
}

// BuildDefinitionStatus defines the observed state of BuildDefinition.
type BuildDefinitionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BuildDefinitionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BuildDefinition is the Schema for the BuildDefinitions API. Manages a Build Definition within Azure DevOps organization.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azuredevops}
type BuildDefinition struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.repository) || (has(self.initProvider) && has(self.initProvider.repository))",message="spec.forProvider.repository is a required parameter"
	Spec   BuildDefinitionSpec   `json:"spec"`
	Status BuildDefinitionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BuildDefinitionList contains a list of BuildDefinitions
type BuildDefinitionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BuildDefinition `json:"items"`
}

// Repository type metadata.
var (
	BuildDefinition_Kind             = "BuildDefinition"
	BuildDefinition_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BuildDefinition_Kind}.String()
	BuildDefinition_KindAPIVersion   = BuildDefinition_Kind + "." + CRDGroupVersion.String()
	BuildDefinition_GroupVersionKind = CRDGroupVersion.WithKind(BuildDefinition_Kind)
)

func init() {
	SchemeBuilder.Register(&BuildDefinition{}, &BuildDefinitionList{})
}
