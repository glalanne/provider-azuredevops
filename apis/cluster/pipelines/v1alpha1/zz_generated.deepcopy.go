//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchFilterInitParameters) DeepCopyInto(out *BranchFilterInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchFilterInitParameters.
func (in *BranchFilterInitParameters) DeepCopy() *BranchFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(BranchFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchFilterObservation) DeepCopyInto(out *BranchFilterObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchFilterObservation.
func (in *BranchFilterObservation) DeepCopy() *BranchFilterObservation {
	if in == nil {
		return nil
	}
	out := new(BranchFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BranchFilterParameters) DeepCopyInto(out *BranchFilterParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BranchFilterParameters.
func (in *BranchFilterParameters) DeepCopy() *BranchFilterParameters {
	if in == nil {
		return nil
	}
	out := new(BranchFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildCompletionTriggerInitParameters) DeepCopyInto(out *BuildCompletionTriggerInitParameters) {
	*out = *in
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]BranchFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuildDefinitionID != nil {
		in, out := &in.BuildDefinitionID, &out.BuildDefinitionID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildCompletionTriggerInitParameters.
func (in *BuildCompletionTriggerInitParameters) DeepCopy() *BuildCompletionTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(BuildCompletionTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildCompletionTriggerObservation) DeepCopyInto(out *BuildCompletionTriggerObservation) {
	*out = *in
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]BranchFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuildDefinitionID != nil {
		in, out := &in.BuildDefinitionID, &out.BuildDefinitionID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildCompletionTriggerObservation.
func (in *BuildCompletionTriggerObservation) DeepCopy() *BuildCompletionTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(BuildCompletionTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildCompletionTriggerParameters) DeepCopyInto(out *BuildCompletionTriggerParameters) {
	*out = *in
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]BranchFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BuildDefinitionID != nil {
		in, out := &in.BuildDefinitionID, &out.BuildDefinitionID
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildCompletionTriggerParameters.
func (in *BuildCompletionTriggerParameters) DeepCopy() *BuildCompletionTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(BuildCompletionTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildDefinition) DeepCopyInto(out *BuildDefinition) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildDefinition.
func (in *BuildDefinition) DeepCopy() *BuildDefinition {
	if in == nil {
		return nil
	}
	out := new(BuildDefinition)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildDefinition) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildDefinitionInitParameters) DeepCopyInto(out *BuildDefinitionInitParameters) {
	*out = *in
	if in.AgentPoolName != nil {
		in, out := &in.AgentPoolName, &out.AgentPoolName
		*out = new(string)
		**out = **in
	}
	if in.AgentSpecification != nil {
		in, out := &in.AgentSpecification, &out.AgentSpecification
		*out = new(string)
		**out = **in
	}
	if in.BuildCompletionTrigger != nil {
		in, out := &in.BuildCompletionTrigger, &out.BuildCompletionTrigger
		*out = make([]BuildCompletionTriggerInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CiTrigger != nil {
		in, out := &in.CiTrigger, &out.CiTrigger
		*out = new(CiTriggerInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]FeaturesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobAuthorizationScope != nil {
		in, out := &in.JobAuthorizationScope, &out.JobAuthorizationScope
		*out = new(string)
		**out = **in
	}
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = make([]JobsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PullRequestTrigger != nil {
		in, out := &in.PullRequestTrigger, &out.PullRequestTrigger
		*out = new(PullRequestTriggerInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.QueueStatus != nil {
		in, out := &in.QueueStatus, &out.QueueStatus
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(RepositoryInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedules != nil {
		in, out := &in.Schedules, &out.Schedules
		*out = make([]SchedulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariableGroups != nil {
		in, out := &in.VariableGroups, &out.VariableGroups
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.VariableGroupsRefs != nil {
		in, out := &in.VariableGroupsRefs, &out.VariableGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariableGroupsSelector != nil {
		in, out := &in.VariableGroupsSelector, &out.VariableGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildDefinitionInitParameters.
func (in *BuildDefinitionInitParameters) DeepCopy() *BuildDefinitionInitParameters {
	if in == nil {
		return nil
	}
	out := new(BuildDefinitionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildDefinitionList) DeepCopyInto(out *BuildDefinitionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BuildDefinition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildDefinitionList.
func (in *BuildDefinitionList) DeepCopy() *BuildDefinitionList {
	if in == nil {
		return nil
	}
	out := new(BuildDefinitionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildDefinitionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildDefinitionObservation) DeepCopyInto(out *BuildDefinitionObservation) {
	*out = *in
	if in.AgentPoolName != nil {
		in, out := &in.AgentPoolName, &out.AgentPoolName
		*out = new(string)
		**out = **in
	}
	if in.AgentSpecification != nil {
		in, out := &in.AgentSpecification, &out.AgentSpecification
		*out = new(string)
		**out = **in
	}
	if in.BuildCompletionTrigger != nil {
		in, out := &in.BuildCompletionTrigger, &out.BuildCompletionTrigger
		*out = make([]BuildCompletionTriggerObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CiTrigger != nil {
		in, out := &in.CiTrigger, &out.CiTrigger
		*out = new(CiTriggerObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]FeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.JobAuthorizationScope != nil {
		in, out := &in.JobAuthorizationScope, &out.JobAuthorizationScope
		*out = new(string)
		**out = **in
	}
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = make([]JobsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.PullRequestTrigger != nil {
		in, out := &in.PullRequestTrigger, &out.PullRequestTrigger
		*out = new(PullRequestTriggerObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.QueueStatus != nil {
		in, out := &in.QueueStatus, &out.QueueStatus
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(RepositoryObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Revision != nil {
		in, out := &in.Revision, &out.Revision
		*out = new(float64)
		**out = **in
	}
	if in.Schedules != nil {
		in, out := &in.Schedules, &out.Schedules
		*out = make([]SchedulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariableGroups != nil {
		in, out := &in.VariableGroups, &out.VariableGroups
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildDefinitionObservation.
func (in *BuildDefinitionObservation) DeepCopy() *BuildDefinitionObservation {
	if in == nil {
		return nil
	}
	out := new(BuildDefinitionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildDefinitionParameters) DeepCopyInto(out *BuildDefinitionParameters) {
	*out = *in
	if in.AgentPoolName != nil {
		in, out := &in.AgentPoolName, &out.AgentPoolName
		*out = new(string)
		**out = **in
	}
	if in.AgentSpecification != nil {
		in, out := &in.AgentSpecification, &out.AgentSpecification
		*out = new(string)
		**out = **in
	}
	if in.BuildCompletionTrigger != nil {
		in, out := &in.BuildCompletionTrigger, &out.BuildCompletionTrigger
		*out = make([]BuildCompletionTriggerParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CiTrigger != nil {
		in, out := &in.CiTrigger, &out.CiTrigger
		*out = new(CiTriggerParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]FeaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobAuthorizationScope != nil {
		in, out := &in.JobAuthorizationScope, &out.JobAuthorizationScope
		*out = new(string)
		**out = **in
	}
	if in.Jobs != nil {
		in, out := &in.Jobs, &out.Jobs
		*out = make([]JobsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PullRequestTrigger != nil {
		in, out := &in.PullRequestTrigger, &out.PullRequestTrigger
		*out = new(PullRequestTriggerParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.QueueStatus != nil {
		in, out := &in.QueueStatus, &out.QueueStatus
		*out = new(string)
		**out = **in
	}
	if in.Repository != nil {
		in, out := &in.Repository, &out.Repository
		*out = new(RepositoryParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Schedules != nil {
		in, out := &in.Schedules, &out.Schedules
		*out = make([]SchedulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariableGroups != nil {
		in, out := &in.VariableGroups, &out.VariableGroups
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.VariableGroupsRefs != nil {
		in, out := &in.VariableGroupsRefs, &out.VariableGroupsRefs
		*out = make([]v1.Reference, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VariableGroupsSelector != nil {
		in, out := &in.VariableGroupsSelector, &out.VariableGroupsSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildDefinitionParameters.
func (in *BuildDefinitionParameters) DeepCopy() *BuildDefinitionParameters {
	if in == nil {
		return nil
	}
	out := new(BuildDefinitionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildDefinitionSpec) DeepCopyInto(out *BuildDefinitionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildDefinitionSpec.
func (in *BuildDefinitionSpec) DeepCopy() *BuildDefinitionSpec {
	if in == nil {
		return nil
	}
	out := new(BuildDefinitionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildDefinitionStatus) DeepCopyInto(out *BuildDefinitionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildDefinitionStatus.
func (in *BuildDefinitionStatus) DeepCopy() *BuildDefinitionStatus {
	if in == nil {
		return nil
	}
	out := new(BuildDefinitionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildFolder) DeepCopyInto(out *BuildFolder) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildFolder.
func (in *BuildFolder) DeepCopy() *BuildFolder {
	if in == nil {
		return nil
	}
	out := new(BuildFolder)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildFolder) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildFolderInitParameters) DeepCopyInto(out *BuildFolderInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildFolderInitParameters.
func (in *BuildFolderInitParameters) DeepCopy() *BuildFolderInitParameters {
	if in == nil {
		return nil
	}
	out := new(BuildFolderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildFolderList) DeepCopyInto(out *BuildFolderList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BuildFolder, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildFolderList.
func (in *BuildFolderList) DeepCopy() *BuildFolderList {
	if in == nil {
		return nil
	}
	out := new(BuildFolderList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BuildFolderList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildFolderObservation) DeepCopyInto(out *BuildFolderObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildFolderObservation.
func (in *BuildFolderObservation) DeepCopy() *BuildFolderObservation {
	if in == nil {
		return nil
	}
	out := new(BuildFolderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildFolderParameters) DeepCopyInto(out *BuildFolderParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildFolderParameters.
func (in *BuildFolderParameters) DeepCopy() *BuildFolderParameters {
	if in == nil {
		return nil
	}
	out := new(BuildFolderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildFolderSpec) DeepCopyInto(out *BuildFolderSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildFolderSpec.
func (in *BuildFolderSpec) DeepCopy() *BuildFolderSpec {
	if in == nil {
		return nil
	}
	out := new(BuildFolderSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BuildFolderStatus) DeepCopyInto(out *BuildFolderStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BuildFolderStatus.
func (in *BuildFolderStatus) DeepCopy() *BuildFolderStatus {
	if in == nil {
		return nil
	}
	out := new(BuildFolderStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CiTriggerInitParameters) DeepCopyInto(out *CiTriggerInitParameters) {
	*out = *in
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = new(OverrideInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.UseYaml != nil {
		in, out := &in.UseYaml, &out.UseYaml
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CiTriggerInitParameters.
func (in *CiTriggerInitParameters) DeepCopy() *CiTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(CiTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CiTriggerObservation) DeepCopyInto(out *CiTriggerObservation) {
	*out = *in
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = new(OverrideObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.UseYaml != nil {
		in, out := &in.UseYaml, &out.UseYaml
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CiTriggerObservation.
func (in *CiTriggerObservation) DeepCopy() *CiTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(CiTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CiTriggerParameters) DeepCopyInto(out *CiTriggerParameters) {
	*out = *in
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = new(OverrideParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.UseYaml != nil {
		in, out := &in.UseYaml, &out.UseYaml
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CiTriggerParameters.
func (in *CiTriggerParameters) DeepCopy() *CiTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(CiTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependenciesInitParameters) DeepCopyInto(out *DependenciesInitParameters) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependenciesInitParameters.
func (in *DependenciesInitParameters) DeepCopy() *DependenciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DependenciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependenciesObservation) DeepCopyInto(out *DependenciesObservation) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependenciesObservation.
func (in *DependenciesObservation) DeepCopy() *DependenciesObservation {
	if in == nil {
		return nil
	}
	out := new(DependenciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DependenciesParameters) DeepCopyInto(out *DependenciesParameters) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DependenciesParameters.
func (in *DependenciesParameters) DeepCopy() *DependenciesParameters {
	if in == nil {
		return nil
	}
	out := new(DependenciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Environment) DeepCopyInto(out *Environment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Environment.
func (in *Environment) DeepCopy() *Environment {
	if in == nil {
		return nil
	}
	out := new(Environment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Environment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentInitParameters) DeepCopyInto(out *EnvironmentInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentInitParameters.
func (in *EnvironmentInitParameters) DeepCopy() *EnvironmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentList) DeepCopyInto(out *EnvironmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Environment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentList.
func (in *EnvironmentList) DeepCopy() *EnvironmentList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentObservation) DeepCopyInto(out *EnvironmentObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentObservation.
func (in *EnvironmentObservation) DeepCopy() *EnvironmentObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentParameters) DeepCopyInto(out *EnvironmentParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentParameters.
func (in *EnvironmentParameters) DeepCopy() *EnvironmentParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentSpec) DeepCopyInto(out *EnvironmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentSpec.
func (in *EnvironmentSpec) DeepCopy() *EnvironmentSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentStatus) DeepCopyInto(out *EnvironmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentStatus.
func (in *EnvironmentStatus) DeepCopy() *EnvironmentStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionOptionsInitParameters) DeepCopyInto(out *ExecutionOptionsInitParameters) {
	*out = *in
	if in.ContinueOnError != nil {
		in, out := &in.ContinueOnError, &out.ContinueOnError
		*out = new(bool)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(float64)
		**out = **in
	}
	if in.Multipliers != nil {
		in, out := &in.Multipliers, &out.Multipliers
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionOptionsInitParameters.
func (in *ExecutionOptionsInitParameters) DeepCopy() *ExecutionOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExecutionOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionOptionsObservation) DeepCopyInto(out *ExecutionOptionsObservation) {
	*out = *in
	if in.ContinueOnError != nil {
		in, out := &in.ContinueOnError, &out.ContinueOnError
		*out = new(bool)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(float64)
		**out = **in
	}
	if in.Multipliers != nil {
		in, out := &in.Multipliers, &out.Multipliers
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionOptionsObservation.
func (in *ExecutionOptionsObservation) DeepCopy() *ExecutionOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(ExecutionOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExecutionOptionsParameters) DeepCopyInto(out *ExecutionOptionsParameters) {
	*out = *in
	if in.ContinueOnError != nil {
		in, out := &in.ContinueOnError, &out.ContinueOnError
		*out = new(bool)
		**out = **in
	}
	if in.MaxConcurrency != nil {
		in, out := &in.MaxConcurrency, &out.MaxConcurrency
		*out = new(float64)
		**out = **in
	}
	if in.Multipliers != nil {
		in, out := &in.Multipliers, &out.Multipliers
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExecutionOptionsParameters.
func (in *ExecutionOptionsParameters) DeepCopy() *ExecutionOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(ExecutionOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesInitParameters) DeepCopyInto(out *FeaturesInitParameters) {
	*out = *in
	if in.SkipFirstRun != nil {
		in, out := &in.SkipFirstRun, &out.SkipFirstRun
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesInitParameters.
func (in *FeaturesInitParameters) DeepCopy() *FeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesObservation) DeepCopyInto(out *FeaturesObservation) {
	*out = *in
	if in.SkipFirstRun != nil {
		in, out := &in.SkipFirstRun, &out.SkipFirstRun
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesObservation.
func (in *FeaturesObservation) DeepCopy() *FeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(FeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesParameters) DeepCopyInto(out *FeaturesParameters) {
	*out = *in
	if in.SkipFirstRun != nil {
		in, out := &in.SkipFirstRun, &out.SkipFirstRun
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesParameters.
func (in *FeaturesParameters) DeepCopy() *FeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForksInitParameters) DeepCopyInto(out *ForksInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ShareSecrets != nil {
		in, out := &in.ShareSecrets, &out.ShareSecrets
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForksInitParameters.
func (in *ForksInitParameters) DeepCopy() *ForksInitParameters {
	if in == nil {
		return nil
	}
	out := new(ForksInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForksObservation) DeepCopyInto(out *ForksObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ShareSecrets != nil {
		in, out := &in.ShareSecrets, &out.ShareSecrets
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForksObservation.
func (in *ForksObservation) DeepCopy() *ForksObservation {
	if in == nil {
		return nil
	}
	out := new(ForksObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ForksParameters) DeepCopyInto(out *ForksParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ShareSecrets != nil {
		in, out := &in.ShareSecrets, &out.ShareSecrets
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ForksParameters.
func (in *ForksParameters) DeepCopy() *ForksParameters {
	if in == nil {
		return nil
	}
	out := new(ForksParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsInitParameters) DeepCopyInto(out *JobsInitParameters) {
	*out = *in
	if in.AllowScriptsAuthAccessOption != nil {
		in, out := &in.AllowScriptsAuthAccessOption, &out.AllowScriptsAuthAccessOption
		*out = new(bool)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]DependenciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobAuthorizationScope != nil {
		in, out := &in.JobAuthorizationScope, &out.JobAuthorizationScope
		*out = new(string)
		**out = **in
	}
	if in.JobCancelTimeoutInMinutes != nil {
		in, out := &in.JobCancelTimeoutInMinutes, &out.JobCancelTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.JobTimeoutInMinutes != nil {
		in, out := &in.JobTimeoutInMinutes, &out.JobTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RefName != nil {
		in, out := &in.RefName, &out.RefName
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(TargetInitParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsInitParameters.
func (in *JobsInitParameters) DeepCopy() *JobsInitParameters {
	if in == nil {
		return nil
	}
	out := new(JobsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsObservation) DeepCopyInto(out *JobsObservation) {
	*out = *in
	if in.AllowScriptsAuthAccessOption != nil {
		in, out := &in.AllowScriptsAuthAccessOption, &out.AllowScriptsAuthAccessOption
		*out = new(bool)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]DependenciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobAuthorizationScope != nil {
		in, out := &in.JobAuthorizationScope, &out.JobAuthorizationScope
		*out = new(string)
		**out = **in
	}
	if in.JobCancelTimeoutInMinutes != nil {
		in, out := &in.JobCancelTimeoutInMinutes, &out.JobCancelTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.JobTimeoutInMinutes != nil {
		in, out := &in.JobTimeoutInMinutes, &out.JobTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RefName != nil {
		in, out := &in.RefName, &out.RefName
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(TargetObservation)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsObservation.
func (in *JobsObservation) DeepCopy() *JobsObservation {
	if in == nil {
		return nil
	}
	out := new(JobsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *JobsParameters) DeepCopyInto(out *JobsParameters) {
	*out = *in
	if in.AllowScriptsAuthAccessOption != nil {
		in, out := &in.AllowScriptsAuthAccessOption, &out.AllowScriptsAuthAccessOption
		*out = new(bool)
		**out = **in
	}
	if in.Condition != nil {
		in, out := &in.Condition, &out.Condition
		*out = new(string)
		**out = **in
	}
	if in.Dependencies != nil {
		in, out := &in.Dependencies, &out.Dependencies
		*out = make([]DependenciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.JobAuthorizationScope != nil {
		in, out := &in.JobAuthorizationScope, &out.JobAuthorizationScope
		*out = new(string)
		**out = **in
	}
	if in.JobCancelTimeoutInMinutes != nil {
		in, out := &in.JobCancelTimeoutInMinutes, &out.JobCancelTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.JobTimeoutInMinutes != nil {
		in, out := &in.JobTimeoutInMinutes, &out.JobTimeoutInMinutes
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.RefName != nil {
		in, out := &in.RefName, &out.RefName
		*out = new(string)
		**out = **in
	}
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(TargetParameters)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new JobsParameters.
func (in *JobsParameters) DeepCopy() *JobsParameters {
	if in == nil {
		return nil
	}
	out := new(JobsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultInitParameters) DeepCopyInto(out *KeyVaultInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SearchDepth != nil {
		in, out := &in.SearchDepth, &out.SearchDepth
		*out = new(float64)
		**out = **in
	}
	if in.ServiceEndpointID != nil {
		in, out := &in.ServiceEndpointID, &out.ServiceEndpointID
		*out = new(string)
		**out = **in
	}
	if in.ServiceEndpointIDRef != nil {
		in, out := &in.ServiceEndpointIDRef, &out.ServiceEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceEndpointIDSelector != nil {
		in, out := &in.ServiceEndpointIDSelector, &out.ServiceEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultInitParameters.
func (in *KeyVaultInitParameters) DeepCopy() *KeyVaultInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeyVaultInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultObservation) DeepCopyInto(out *KeyVaultObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SearchDepth != nil {
		in, out := &in.SearchDepth, &out.SearchDepth
		*out = new(float64)
		**out = **in
	}
	if in.ServiceEndpointID != nil {
		in, out := &in.ServiceEndpointID, &out.ServiceEndpointID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultObservation.
func (in *KeyVaultObservation) DeepCopy() *KeyVaultObservation {
	if in == nil {
		return nil
	}
	out := new(KeyVaultObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeyVaultParameters) DeepCopyInto(out *KeyVaultParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SearchDepth != nil {
		in, out := &in.SearchDepth, &out.SearchDepth
		*out = new(float64)
		**out = **in
	}
	if in.ServiceEndpointID != nil {
		in, out := &in.ServiceEndpointID, &out.ServiceEndpointID
		*out = new(string)
		**out = **in
	}
	if in.ServiceEndpointIDRef != nil {
		in, out := &in.ServiceEndpointIDRef, &out.ServiceEndpointIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceEndpointIDSelector != nil {
		in, out := &in.ServiceEndpointIDSelector, &out.ServiceEndpointIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeyVaultParameters.
func (in *KeyVaultParameters) DeepCopy() *KeyVaultParameters {
	if in == nil {
		return nil
	}
	out := new(KeyVaultParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideBranchFilterInitParameters) DeepCopyInto(out *OverrideBranchFilterInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideBranchFilterInitParameters.
func (in *OverrideBranchFilterInitParameters) DeepCopy() *OverrideBranchFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideBranchFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideBranchFilterObservation) DeepCopyInto(out *OverrideBranchFilterObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideBranchFilterObservation.
func (in *OverrideBranchFilterObservation) DeepCopy() *OverrideBranchFilterObservation {
	if in == nil {
		return nil
	}
	out := new(OverrideBranchFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideBranchFilterParameters) DeepCopyInto(out *OverrideBranchFilterParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideBranchFilterParameters.
func (in *OverrideBranchFilterParameters) DeepCopy() *OverrideBranchFilterParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideBranchFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideInitParameters) DeepCopyInto(out *OverrideInitParameters) {
	*out = *in
	if in.Batch != nil {
		in, out := &in.Batch, &out.Batch
		*out = new(bool)
		**out = **in
	}
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]OverrideBranchFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentBuildsPerBranch != nil {
		in, out := &in.MaxConcurrentBuildsPerBranch, &out.MaxConcurrentBuildsPerBranch
		*out = new(float64)
		**out = **in
	}
	if in.PathFilter != nil {
		in, out := &in.PathFilter, &out.PathFilter
		*out = make([]PathFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PollingInterval != nil {
		in, out := &in.PollingInterval, &out.PollingInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideInitParameters.
func (in *OverrideInitParameters) DeepCopy() *OverrideInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideObservation) DeepCopyInto(out *OverrideObservation) {
	*out = *in
	if in.Batch != nil {
		in, out := &in.Batch, &out.Batch
		*out = new(bool)
		**out = **in
	}
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]OverrideBranchFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentBuildsPerBranch != nil {
		in, out := &in.MaxConcurrentBuildsPerBranch, &out.MaxConcurrentBuildsPerBranch
		*out = new(float64)
		**out = **in
	}
	if in.PathFilter != nil {
		in, out := &in.PathFilter, &out.PathFilter
		*out = make([]PathFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PollingInterval != nil {
		in, out := &in.PollingInterval, &out.PollingInterval
		*out = new(float64)
		**out = **in
	}
	if in.PollingJobID != nil {
		in, out := &in.PollingJobID, &out.PollingJobID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideObservation.
func (in *OverrideObservation) DeepCopy() *OverrideObservation {
	if in == nil {
		return nil
	}
	out := new(OverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverrideParameters) DeepCopyInto(out *OverrideParameters) {
	*out = *in
	if in.Batch != nil {
		in, out := &in.Batch, &out.Batch
		*out = new(bool)
		**out = **in
	}
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]OverrideBranchFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.MaxConcurrentBuildsPerBranch != nil {
		in, out := &in.MaxConcurrentBuildsPerBranch, &out.MaxConcurrentBuildsPerBranch
		*out = new(float64)
		**out = **in
	}
	if in.PathFilter != nil {
		in, out := &in.PathFilter, &out.PathFilter
		*out = make([]PathFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PollingInterval != nil {
		in, out := &in.PollingInterval, &out.PollingInterval
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverrideParameters.
func (in *OverrideParameters) DeepCopy() *OverrideParameters {
	if in == nil {
		return nil
	}
	out := new(OverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridePathFilterInitParameters) DeepCopyInto(out *OverridePathFilterInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridePathFilterInitParameters.
func (in *OverridePathFilterInitParameters) DeepCopy() *OverridePathFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(OverridePathFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridePathFilterObservation) DeepCopyInto(out *OverridePathFilterObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridePathFilterObservation.
func (in *OverridePathFilterObservation) DeepCopy() *OverridePathFilterObservation {
	if in == nil {
		return nil
	}
	out := new(OverridePathFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OverridePathFilterParameters) DeepCopyInto(out *OverridePathFilterParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OverridePathFilterParameters.
func (in *OverridePathFilterParameters) DeepCopy() *OverridePathFilterParameters {
	if in == nil {
		return nil
	}
	out := new(OverridePathFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathFilterInitParameters) DeepCopyInto(out *PathFilterInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathFilterInitParameters.
func (in *PathFilterInitParameters) DeepCopy() *PathFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(PathFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathFilterObservation) DeepCopyInto(out *PathFilterObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathFilterObservation.
func (in *PathFilterObservation) DeepCopy() *PathFilterObservation {
	if in == nil {
		return nil
	}
	out := new(PathFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PathFilterParameters) DeepCopyInto(out *PathFilterParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PathFilterParameters.
func (in *PathFilterParameters) DeepCopy() *PathFilterParameters {
	if in == nil {
		return nil
	}
	out := new(PathFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestTriggerInitParameters) DeepCopyInto(out *PullRequestTriggerInitParameters) {
	*out = *in
	if in.CommentRequired != nil {
		in, out := &in.CommentRequired, &out.CommentRequired
		*out = new(string)
		**out = **in
	}
	if in.Forks != nil {
		in, out := &in.Forks, &out.Forks
		*out = new(ForksInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InitialBranch != nil {
		in, out := &in.InitialBranch, &out.InitialBranch
		*out = new(string)
		**out = **in
	}
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = new(PullRequestTriggerOverrideInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.UseYaml != nil {
		in, out := &in.UseYaml, &out.UseYaml
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestTriggerInitParameters.
func (in *PullRequestTriggerInitParameters) DeepCopy() *PullRequestTriggerInitParameters {
	if in == nil {
		return nil
	}
	out := new(PullRequestTriggerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestTriggerObservation) DeepCopyInto(out *PullRequestTriggerObservation) {
	*out = *in
	if in.CommentRequired != nil {
		in, out := &in.CommentRequired, &out.CommentRequired
		*out = new(string)
		**out = **in
	}
	if in.Forks != nil {
		in, out := &in.Forks, &out.Forks
		*out = new(ForksObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.InitialBranch != nil {
		in, out := &in.InitialBranch, &out.InitialBranch
		*out = new(string)
		**out = **in
	}
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = new(PullRequestTriggerOverrideObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.UseYaml != nil {
		in, out := &in.UseYaml, &out.UseYaml
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestTriggerObservation.
func (in *PullRequestTriggerObservation) DeepCopy() *PullRequestTriggerObservation {
	if in == nil {
		return nil
	}
	out := new(PullRequestTriggerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestTriggerOverrideBranchFilterInitParameters) DeepCopyInto(out *PullRequestTriggerOverrideBranchFilterInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestTriggerOverrideBranchFilterInitParameters.
func (in *PullRequestTriggerOverrideBranchFilterInitParameters) DeepCopy() *PullRequestTriggerOverrideBranchFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(PullRequestTriggerOverrideBranchFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestTriggerOverrideBranchFilterObservation) DeepCopyInto(out *PullRequestTriggerOverrideBranchFilterObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestTriggerOverrideBranchFilterObservation.
func (in *PullRequestTriggerOverrideBranchFilterObservation) DeepCopy() *PullRequestTriggerOverrideBranchFilterObservation {
	if in == nil {
		return nil
	}
	out := new(PullRequestTriggerOverrideBranchFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestTriggerOverrideBranchFilterParameters) DeepCopyInto(out *PullRequestTriggerOverrideBranchFilterParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestTriggerOverrideBranchFilterParameters.
func (in *PullRequestTriggerOverrideBranchFilterParameters) DeepCopy() *PullRequestTriggerOverrideBranchFilterParameters {
	if in == nil {
		return nil
	}
	out := new(PullRequestTriggerOverrideBranchFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestTriggerOverrideInitParameters) DeepCopyInto(out *PullRequestTriggerOverrideInitParameters) {
	*out = *in
	if in.AutoCancel != nil {
		in, out := &in.AutoCancel, &out.AutoCancel
		*out = new(bool)
		**out = **in
	}
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]PullRequestTriggerOverrideBranchFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathFilter != nil {
		in, out := &in.PathFilter, &out.PathFilter
		*out = make([]OverridePathFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestTriggerOverrideInitParameters.
func (in *PullRequestTriggerOverrideInitParameters) DeepCopy() *PullRequestTriggerOverrideInitParameters {
	if in == nil {
		return nil
	}
	out := new(PullRequestTriggerOverrideInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestTriggerOverrideObservation) DeepCopyInto(out *PullRequestTriggerOverrideObservation) {
	*out = *in
	if in.AutoCancel != nil {
		in, out := &in.AutoCancel, &out.AutoCancel
		*out = new(bool)
		**out = **in
	}
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]PullRequestTriggerOverrideBranchFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathFilter != nil {
		in, out := &in.PathFilter, &out.PathFilter
		*out = make([]OverridePathFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestTriggerOverrideObservation.
func (in *PullRequestTriggerOverrideObservation) DeepCopy() *PullRequestTriggerOverrideObservation {
	if in == nil {
		return nil
	}
	out := new(PullRequestTriggerOverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestTriggerOverrideParameters) DeepCopyInto(out *PullRequestTriggerOverrideParameters) {
	*out = *in
	if in.AutoCancel != nil {
		in, out := &in.AutoCancel, &out.AutoCancel
		*out = new(bool)
		**out = **in
	}
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]PullRequestTriggerOverrideBranchFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PathFilter != nil {
		in, out := &in.PathFilter, &out.PathFilter
		*out = make([]OverridePathFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestTriggerOverrideParameters.
func (in *PullRequestTriggerOverrideParameters) DeepCopy() *PullRequestTriggerOverrideParameters {
	if in == nil {
		return nil
	}
	out := new(PullRequestTriggerOverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestTriggerParameters) DeepCopyInto(out *PullRequestTriggerParameters) {
	*out = *in
	if in.CommentRequired != nil {
		in, out := &in.CommentRequired, &out.CommentRequired
		*out = new(string)
		**out = **in
	}
	if in.Forks != nil {
		in, out := &in.Forks, &out.Forks
		*out = new(ForksParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.InitialBranch != nil {
		in, out := &in.InitialBranch, &out.InitialBranch
		*out = new(string)
		**out = **in
	}
	if in.Override != nil {
		in, out := &in.Override, &out.Override
		*out = new(PullRequestTriggerOverrideParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.UseYaml != nil {
		in, out := &in.UseYaml, &out.UseYaml
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestTriggerParameters.
func (in *PullRequestTriggerParameters) DeepCopy() *PullRequestTriggerParameters {
	if in == nil {
		return nil
	}
	out := new(PullRequestTriggerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryInitParameters) DeepCopyInto(out *RepositoryInitParameters) {
	*out = *in
	if in.BranchName != nil {
		in, out := &in.BranchName, &out.BranchName
		*out = new(string)
		**out = **in
	}
	if in.BranchNameRef != nil {
		in, out := &in.BranchNameRef, &out.BranchNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BranchNameSelector != nil {
		in, out := &in.BranchNameSelector, &out.BranchNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GithubEnterpriseURL != nil {
		in, out := &in.GithubEnterpriseURL, &out.GithubEnterpriseURL
		*out = new(string)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(string)
		**out = **in
	}
	if in.RepoIDRef != nil {
		in, out := &in.RepoIDRef, &out.RepoIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepoIDSelector != nil {
		in, out := &in.RepoIDSelector, &out.RepoIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RepoType != nil {
		in, out := &in.RepoType, &out.RepoType
		*out = new(string)
		**out = **in
	}
	if in.ReportBuildStatus != nil {
		in, out := &in.ReportBuildStatus, &out.ReportBuildStatus
		*out = new(bool)
		**out = **in
	}
	if in.ServiceConnectionID != nil {
		in, out := &in.ServiceConnectionID, &out.ServiceConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ServiceConnectionIDRef != nil {
		in, out := &in.ServiceConnectionIDRef, &out.ServiceConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceConnectionIDSelector != nil {
		in, out := &in.ServiceConnectionIDSelector, &out.ServiceConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRef != nil {
		in, out := &in.URLRef, &out.URLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLSelector != nil {
		in, out := &in.URLSelector, &out.URLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.YmlPath != nil {
		in, out := &in.YmlPath, &out.YmlPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryInitParameters.
func (in *RepositoryInitParameters) DeepCopy() *RepositoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryObservation) DeepCopyInto(out *RepositoryObservation) {
	*out = *in
	if in.BranchName != nil {
		in, out := &in.BranchName, &out.BranchName
		*out = new(string)
		**out = **in
	}
	if in.GithubEnterpriseURL != nil {
		in, out := &in.GithubEnterpriseURL, &out.GithubEnterpriseURL
		*out = new(string)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(string)
		**out = **in
	}
	if in.RepoType != nil {
		in, out := &in.RepoType, &out.RepoType
		*out = new(string)
		**out = **in
	}
	if in.ReportBuildStatus != nil {
		in, out := &in.ReportBuildStatus, &out.ReportBuildStatus
		*out = new(bool)
		**out = **in
	}
	if in.ServiceConnectionID != nil {
		in, out := &in.ServiceConnectionID, &out.ServiceConnectionID
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.YmlPath != nil {
		in, out := &in.YmlPath, &out.YmlPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryObservation.
func (in *RepositoryObservation) DeepCopy() *RepositoryObservation {
	if in == nil {
		return nil
	}
	out := new(RepositoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryParameters) DeepCopyInto(out *RepositoryParameters) {
	*out = *in
	if in.BranchName != nil {
		in, out := &in.BranchName, &out.BranchName
		*out = new(string)
		**out = **in
	}
	if in.BranchNameRef != nil {
		in, out := &in.BranchNameRef, &out.BranchNameRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BranchNameSelector != nil {
		in, out := &in.BranchNameSelector, &out.BranchNameSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.GithubEnterpriseURL != nil {
		in, out := &in.GithubEnterpriseURL, &out.GithubEnterpriseURL
		*out = new(string)
		**out = **in
	}
	if in.RepoID != nil {
		in, out := &in.RepoID, &out.RepoID
		*out = new(string)
		**out = **in
	}
	if in.RepoIDRef != nil {
		in, out := &in.RepoIDRef, &out.RepoIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.RepoIDSelector != nil {
		in, out := &in.RepoIDSelector, &out.RepoIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RepoType != nil {
		in, out := &in.RepoType, &out.RepoType
		*out = new(string)
		**out = **in
	}
	if in.ReportBuildStatus != nil {
		in, out := &in.ReportBuildStatus, &out.ReportBuildStatus
		*out = new(bool)
		**out = **in
	}
	if in.ServiceConnectionID != nil {
		in, out := &in.ServiceConnectionID, &out.ServiceConnectionID
		*out = new(string)
		**out = **in
	}
	if in.ServiceConnectionIDRef != nil {
		in, out := &in.ServiceConnectionIDRef, &out.ServiceConnectionIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ServiceConnectionIDSelector != nil {
		in, out := &in.ServiceConnectionIDSelector, &out.ServiceConnectionIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.URLRef != nil {
		in, out := &in.URLRef, &out.URLRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.URLSelector != nil {
		in, out := &in.URLSelector, &out.URLSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.YmlPath != nil {
		in, out := &in.YmlPath, &out.YmlPath
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryParameters.
func (in *RepositoryParameters) DeepCopy() *RepositoryParameters {
	if in == nil {
		return nil
	}
	out := new(RepositoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunStateChangedEventInitParameters) DeepCopyInto(out *RunStateChangedEventInitParameters) {
	*out = *in
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.RunResultFilter != nil {
		in, out := &in.RunResultFilter, &out.RunResultFilter
		*out = new(string)
		**out = **in
	}
	if in.RunStateFilter != nil {
		in, out := &in.RunStateFilter, &out.RunStateFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunStateChangedEventInitParameters.
func (in *RunStateChangedEventInitParameters) DeepCopy() *RunStateChangedEventInitParameters {
	if in == nil {
		return nil
	}
	out := new(RunStateChangedEventInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunStateChangedEventObservation) DeepCopyInto(out *RunStateChangedEventObservation) {
	*out = *in
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.RunResultFilter != nil {
		in, out := &in.RunResultFilter, &out.RunResultFilter
		*out = new(string)
		**out = **in
	}
	if in.RunStateFilter != nil {
		in, out := &in.RunStateFilter, &out.RunStateFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunStateChangedEventObservation.
func (in *RunStateChangedEventObservation) DeepCopy() *RunStateChangedEventObservation {
	if in == nil {
		return nil
	}
	out := new(RunStateChangedEventObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RunStateChangedEventParameters) DeepCopyInto(out *RunStateChangedEventParameters) {
	*out = *in
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.RunResultFilter != nil {
		in, out := &in.RunResultFilter, &out.RunResultFilter
		*out = new(string)
		**out = **in
	}
	if in.RunStateFilter != nil {
		in, out := &in.RunStateFilter, &out.RunStateFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RunStateChangedEventParameters.
func (in *RunStateChangedEventParameters) DeepCopy() *RunStateChangedEventParameters {
	if in == nil {
		return nil
	}
	out := new(RunStateChangedEventParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesBranchFilterInitParameters) DeepCopyInto(out *SchedulesBranchFilterInitParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesBranchFilterInitParameters.
func (in *SchedulesBranchFilterInitParameters) DeepCopy() *SchedulesBranchFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulesBranchFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesBranchFilterObservation) DeepCopyInto(out *SchedulesBranchFilterObservation) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesBranchFilterObservation.
func (in *SchedulesBranchFilterObservation) DeepCopy() *SchedulesBranchFilterObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulesBranchFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesBranchFilterParameters) DeepCopyInto(out *SchedulesBranchFilterParameters) {
	*out = *in
	if in.Exclude != nil {
		in, out := &in.Exclude, &out.Exclude
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Include != nil {
		in, out := &in.Include, &out.Include
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesBranchFilterParameters.
func (in *SchedulesBranchFilterParameters) DeepCopy() *SchedulesBranchFilterParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulesBranchFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesInitParameters) DeepCopyInto(out *SchedulesInitParameters) {
	*out = *in
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]SchedulesBranchFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DaysToBuild != nil {
		in, out := &in.DaysToBuild, &out.DaysToBuild
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScheduleOnlyWithChanges != nil {
		in, out := &in.ScheduleOnlyWithChanges, &out.ScheduleOnlyWithChanges
		*out = new(bool)
		**out = **in
	}
	if in.StartHours != nil {
		in, out := &in.StartHours, &out.StartHours
		*out = new(float64)
		**out = **in
	}
	if in.StartMinutes != nil {
		in, out := &in.StartMinutes, &out.StartMinutes
		*out = new(float64)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesInitParameters.
func (in *SchedulesInitParameters) DeepCopy() *SchedulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesObservation) DeepCopyInto(out *SchedulesObservation) {
	*out = *in
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]SchedulesBranchFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DaysToBuild != nil {
		in, out := &in.DaysToBuild, &out.DaysToBuild
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScheduleJobID != nil {
		in, out := &in.ScheduleJobID, &out.ScheduleJobID
		*out = new(string)
		**out = **in
	}
	if in.ScheduleOnlyWithChanges != nil {
		in, out := &in.ScheduleOnlyWithChanges, &out.ScheduleOnlyWithChanges
		*out = new(bool)
		**out = **in
	}
	if in.StartHours != nil {
		in, out := &in.StartHours, &out.StartHours
		*out = new(float64)
		**out = **in
	}
	if in.StartMinutes != nil {
		in, out := &in.StartMinutes, &out.StartMinutes
		*out = new(float64)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesObservation.
func (in *SchedulesObservation) DeepCopy() *SchedulesObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesParameters) DeepCopyInto(out *SchedulesParameters) {
	*out = *in
	if in.BranchFilter != nil {
		in, out := &in.BranchFilter, &out.BranchFilter
		*out = make([]SchedulesBranchFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DaysToBuild != nil {
		in, out := &in.DaysToBuild, &out.DaysToBuild
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ScheduleOnlyWithChanges != nil {
		in, out := &in.ScheduleOnlyWithChanges, &out.ScheduleOnlyWithChanges
		*out = new(bool)
		**out = **in
	}
	if in.StartHours != nil {
		in, out := &in.StartHours, &out.StartHours
		*out = new(float64)
		**out = **in
	}
	if in.StartMinutes != nil {
		in, out := &in.StartMinutes, &out.StartMinutes
		*out = new(float64)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesParameters.
func (in *SchedulesParameters) DeepCopy() *SchedulesParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicehookStorageQueuePipelines) DeepCopyInto(out *ServicehookStorageQueuePipelines) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicehookStorageQueuePipelines.
func (in *ServicehookStorageQueuePipelines) DeepCopy() *ServicehookStorageQueuePipelines {
	if in == nil {
		return nil
	}
	out := new(ServicehookStorageQueuePipelines)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicehookStorageQueuePipelines) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicehookStorageQueuePipelinesInitParameters) DeepCopyInto(out *ServicehookStorageQueuePipelinesInitParameters) {
	*out = *in
	in.AccountKeySecretRef.DeepCopyInto(&out.AccountKeySecretRef)
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.QueueName != nil {
		in, out := &in.QueueName, &out.QueueName
		*out = new(string)
		**out = **in
	}
	if in.RunStateChangedEvent != nil {
		in, out := &in.RunStateChangedEvent, &out.RunStateChangedEvent
		*out = new(RunStateChangedEventInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StageStateChangedEvent != nil {
		in, out := &in.StageStateChangedEvent, &out.StageStateChangedEvent
		*out = new(StageStateChangedEventInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.VisiTimeout != nil {
		in, out := &in.VisiTimeout, &out.VisiTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicehookStorageQueuePipelinesInitParameters.
func (in *ServicehookStorageQueuePipelinesInitParameters) DeepCopy() *ServicehookStorageQueuePipelinesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicehookStorageQueuePipelinesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicehookStorageQueuePipelinesList) DeepCopyInto(out *ServicehookStorageQueuePipelinesList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServicehookStorageQueuePipelines, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicehookStorageQueuePipelinesList.
func (in *ServicehookStorageQueuePipelinesList) DeepCopy() *ServicehookStorageQueuePipelinesList {
	if in == nil {
		return nil
	}
	out := new(ServicehookStorageQueuePipelinesList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServicehookStorageQueuePipelinesList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicehookStorageQueuePipelinesObservation) DeepCopyInto(out *ServicehookStorageQueuePipelinesObservation) {
	*out = *in
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.QueueName != nil {
		in, out := &in.QueueName, &out.QueueName
		*out = new(string)
		**out = **in
	}
	if in.RunStateChangedEvent != nil {
		in, out := &in.RunStateChangedEvent, &out.RunStateChangedEvent
		*out = new(RunStateChangedEventObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.StageStateChangedEvent != nil {
		in, out := &in.StageStateChangedEvent, &out.StageStateChangedEvent
		*out = new(StageStateChangedEventObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.VisiTimeout != nil {
		in, out := &in.VisiTimeout, &out.VisiTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicehookStorageQueuePipelinesObservation.
func (in *ServicehookStorageQueuePipelinesObservation) DeepCopy() *ServicehookStorageQueuePipelinesObservation {
	if in == nil {
		return nil
	}
	out := new(ServicehookStorageQueuePipelinesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicehookStorageQueuePipelinesParameters) DeepCopyInto(out *ServicehookStorageQueuePipelinesParameters) {
	*out = *in
	in.AccountKeySecretRef.DeepCopyInto(&out.AccountKeySecretRef)
	if in.AccountName != nil {
		in, out := &in.AccountName, &out.AccountName
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.QueueName != nil {
		in, out := &in.QueueName, &out.QueueName
		*out = new(string)
		**out = **in
	}
	if in.RunStateChangedEvent != nil {
		in, out := &in.RunStateChangedEvent, &out.RunStateChangedEvent
		*out = new(RunStateChangedEventParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.StageStateChangedEvent != nil {
		in, out := &in.StageStateChangedEvent, &out.StageStateChangedEvent
		*out = new(StageStateChangedEventParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.TTL != nil {
		in, out := &in.TTL, &out.TTL
		*out = new(float64)
		**out = **in
	}
	if in.VisiTimeout != nil {
		in, out := &in.VisiTimeout, &out.VisiTimeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicehookStorageQueuePipelinesParameters.
func (in *ServicehookStorageQueuePipelinesParameters) DeepCopy() *ServicehookStorageQueuePipelinesParameters {
	if in == nil {
		return nil
	}
	out := new(ServicehookStorageQueuePipelinesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicehookStorageQueuePipelinesSpec) DeepCopyInto(out *ServicehookStorageQueuePipelinesSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicehookStorageQueuePipelinesSpec.
func (in *ServicehookStorageQueuePipelinesSpec) DeepCopy() *ServicehookStorageQueuePipelinesSpec {
	if in == nil {
		return nil
	}
	out := new(ServicehookStorageQueuePipelinesSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicehookStorageQueuePipelinesStatus) DeepCopyInto(out *ServicehookStorageQueuePipelinesStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicehookStorageQueuePipelinesStatus.
func (in *ServicehookStorageQueuePipelinesStatus) DeepCopy() *ServicehookStorageQueuePipelinesStatus {
	if in == nil {
		return nil
	}
	out := new(ServicehookStorageQueuePipelinesStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageStateChangedEventInitParameters) DeepCopyInto(out *StageStateChangedEventInitParameters) {
	*out = *in
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.StageResultFilter != nil {
		in, out := &in.StageResultFilter, &out.StageResultFilter
		*out = new(string)
		**out = **in
	}
	if in.StageStateFilter != nil {
		in, out := &in.StageStateFilter, &out.StageStateFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageStateChangedEventInitParameters.
func (in *StageStateChangedEventInitParameters) DeepCopy() *StageStateChangedEventInitParameters {
	if in == nil {
		return nil
	}
	out := new(StageStateChangedEventInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageStateChangedEventObservation) DeepCopyInto(out *StageStateChangedEventObservation) {
	*out = *in
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.StageResultFilter != nil {
		in, out := &in.StageResultFilter, &out.StageResultFilter
		*out = new(string)
		**out = **in
	}
	if in.StageStateFilter != nil {
		in, out := &in.StageStateFilter, &out.StageStateFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageStateChangedEventObservation.
func (in *StageStateChangedEventObservation) DeepCopy() *StageStateChangedEventObservation {
	if in == nil {
		return nil
	}
	out := new(StageStateChangedEventObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *StageStateChangedEventParameters) DeepCopyInto(out *StageStateChangedEventParameters) {
	*out = *in
	if in.PipelineID != nil {
		in, out := &in.PipelineID, &out.PipelineID
		*out = new(string)
		**out = **in
	}
	if in.StageName != nil {
		in, out := &in.StageName, &out.StageName
		*out = new(string)
		**out = **in
	}
	if in.StageResultFilter != nil {
		in, out := &in.StageResultFilter, &out.StageResultFilter
		*out = new(string)
		**out = **in
	}
	if in.StageStateFilter != nil {
		in, out := &in.StageStateFilter, &out.StageStateFilter
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new StageStateChangedEventParameters.
func (in *StageStateChangedEventParameters) DeepCopy() *StageStateChangedEventParameters {
	if in == nil {
		return nil
	}
	out := new(StageStateChangedEventParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetInitParameters) DeepCopyInto(out *TargetInitParameters) {
	*out = *in
	if in.Demands != nil {
		in, out := &in.Demands, &out.Demands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExecutionOptions != nil {
		in, out := &in.ExecutionOptions, &out.ExecutionOptions
		*out = new(ExecutionOptionsInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetInitParameters.
func (in *TargetInitParameters) DeepCopy() *TargetInitParameters {
	if in == nil {
		return nil
	}
	out := new(TargetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetObservation) DeepCopyInto(out *TargetObservation) {
	*out = *in
	if in.Demands != nil {
		in, out := &in.Demands, &out.Demands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExecutionOptions != nil {
		in, out := &in.ExecutionOptions, &out.ExecutionOptions
		*out = new(ExecutionOptionsObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetObservation.
func (in *TargetObservation) DeepCopy() *TargetObservation {
	if in == nil {
		return nil
	}
	out := new(TargetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TargetParameters) DeepCopyInto(out *TargetParameters) {
	*out = *in
	if in.Demands != nil {
		in, out := &in.Demands, &out.Demands
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ExecutionOptions != nil {
		in, out := &in.ExecutionOptions, &out.ExecutionOptions
		*out = new(ExecutionOptionsParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TargetParameters.
func (in *TargetParameters) DeepCopy() *TargetParameters {
	if in == nil {
		return nil
	}
	out := new(TargetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableGroup) DeepCopyInto(out *VariableGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableGroup.
func (in *VariableGroup) DeepCopy() *VariableGroup {
	if in == nil {
		return nil
	}
	out := new(VariableGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VariableGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableGroupInitParameters) DeepCopyInto(out *VariableGroupInitParameters) {
	*out = *in
	if in.AllowAccess != nil {
		in, out := &in.AllowAccess, &out.AllowAccess
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KeyVault != nil {
		in, out := &in.KeyVault, &out.KeyVault
		*out = new(KeyVaultInitParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableGroupVariableInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableGroupInitParameters.
func (in *VariableGroupInitParameters) DeepCopy() *VariableGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(VariableGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableGroupList) DeepCopyInto(out *VariableGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VariableGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableGroupList.
func (in *VariableGroupList) DeepCopy() *VariableGroupList {
	if in == nil {
		return nil
	}
	out := new(VariableGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VariableGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableGroupObservation) DeepCopyInto(out *VariableGroupObservation) {
	*out = *in
	if in.AllowAccess != nil {
		in, out := &in.AllowAccess, &out.AllowAccess
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyVault != nil {
		in, out := &in.KeyVault, &out.KeyVault
		*out = new(KeyVaultObservation)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableGroupVariableObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableGroupObservation.
func (in *VariableGroupObservation) DeepCopy() *VariableGroupObservation {
	if in == nil {
		return nil
	}
	out := new(VariableGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableGroupParameters) DeepCopyInto(out *VariableGroupParameters) {
	*out = *in
	if in.AllowAccess != nil {
		in, out := &in.AllowAccess, &out.AllowAccess
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.KeyVault != nil {
		in, out := &in.KeyVault, &out.KeyVault
		*out = new(KeyVaultParameters)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Variable != nil {
		in, out := &in.Variable, &out.Variable
		*out = make([]VariableGroupVariableParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableGroupParameters.
func (in *VariableGroupParameters) DeepCopy() *VariableGroupParameters {
	if in == nil {
		return nil
	}
	out := new(VariableGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableGroupSpec) DeepCopyInto(out *VariableGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableGroupSpec.
func (in *VariableGroupSpec) DeepCopy() *VariableGroupSpec {
	if in == nil {
		return nil
	}
	out := new(VariableGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableGroupStatus) DeepCopyInto(out *VariableGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableGroupStatus.
func (in *VariableGroupStatus) DeepCopy() *VariableGroupStatus {
	if in == nil {
		return nil
	}
	out := new(VariableGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableGroupVariableInitParameters) DeepCopyInto(out *VariableGroupVariableInitParameters) {
	*out = *in
	if in.IsSecret != nil {
		in, out := &in.IsSecret, &out.IsSecret
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecretValueSecretRef != nil {
		in, out := &in.SecretValueSecretRef, &out.SecretValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableGroupVariableInitParameters.
func (in *VariableGroupVariableInitParameters) DeepCopy() *VariableGroupVariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(VariableGroupVariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableGroupVariableObservation) DeepCopyInto(out *VariableGroupVariableObservation) {
	*out = *in
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Expires != nil {
		in, out := &in.Expires, &out.Expires
		*out = new(string)
		**out = **in
	}
	if in.IsSecret != nil {
		in, out := &in.IsSecret, &out.IsSecret
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableGroupVariableObservation.
func (in *VariableGroupVariableObservation) DeepCopy() *VariableGroupVariableObservation {
	if in == nil {
		return nil
	}
	out := new(VariableGroupVariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableGroupVariableParameters) DeepCopyInto(out *VariableGroupVariableParameters) {
	*out = *in
	if in.IsSecret != nil {
		in, out := &in.IsSecret, &out.IsSecret
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecretValueSecretRef != nil {
		in, out := &in.SecretValueSecretRef, &out.SecretValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableGroupVariableParameters.
func (in *VariableGroupVariableParameters) DeepCopy() *VariableGroupVariableParameters {
	if in == nil {
		return nil
	}
	out := new(VariableGroupVariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableInitParameters) DeepCopyInto(out *VariableInitParameters) {
	*out = *in
	if in.AllowOverride != nil {
		in, out := &in.AllowOverride, &out.AllowOverride
		*out = new(bool)
		**out = **in
	}
	if in.IsSecret != nil {
		in, out := &in.IsSecret, &out.IsSecret
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecretValueSecretRef != nil {
		in, out := &in.SecretValueSecretRef, &out.SecretValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableInitParameters.
func (in *VariableInitParameters) DeepCopy() *VariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(VariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableObservation) DeepCopyInto(out *VariableObservation) {
	*out = *in
	if in.AllowOverride != nil {
		in, out := &in.AllowOverride, &out.AllowOverride
		*out = new(bool)
		**out = **in
	}
	if in.IsSecret != nil {
		in, out := &in.IsSecret, &out.IsSecret
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableObservation.
func (in *VariableObservation) DeepCopy() *VariableObservation {
	if in == nil {
		return nil
	}
	out := new(VariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VariableParameters) DeepCopyInto(out *VariableParameters) {
	*out = *in
	if in.AllowOverride != nil {
		in, out := &in.AllowOverride, &out.AllowOverride
		*out = new(bool)
		**out = **in
	}
	if in.IsSecret != nil {
		in, out := &in.IsSecret, &out.IsSecret
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.SecretValueSecretRef != nil {
		in, out := &in.SecretValueSecretRef, &out.SecretValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VariableParameters.
func (in *VariableParameters) DeepCopy() *VariableParameters {
	if in == nil {
		return nil
	}
	out := new(VariableParameters)
	in.DeepCopyInto(out)
	return out
}
