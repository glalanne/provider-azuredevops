// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type RelationsInitParameters struct {
}

type RelationsObservation struct {

	// The type of relationship. For example: System.LinkTypes.Hierarchy-Reverse is a parent relationship. More details item link type.
	Rel *string `json:"rel,omitempty" tf:"rel,omitempty"`

	// The URL of the Work Item.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type RelationsParameters struct {
}

type WorkitemInitParameters struct {

	// Specifies the area where the Work Item is used.
	AreaPath *string `json:"areaPath,omitempty" tf:"area_path,omitempty"`

	// Specifies a list with Custom Fields for the Work Item.
	// +mapType=granular
	CustomFields map[string]*string `json:"customFields,omitempty" tf:"custom_fields,omitempty"`

	// Specifies the iteration in which the Work Item is used.
	IterationPath *string `json:"iterationPath,omitempty" tf:"iteration_path,omitempty"`

	// The parent work item.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Workitem
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ParentID *float64 `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// Reference to a Workitem in project to populate parentId.
	// +kubebuilder:validation:Optional
	ParentIDRef *v1.Reference `json:"parentIdRef,omitempty" tf:"-"`

	// Selector for a Workitem in project to populate parentId.
	// +kubebuilder:validation:Optional
	ParentIDSelector *v1.Selector `json:"parentIdSelector,omitempty" tf:"-"`

	// The ID of the Project.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// The state of the Work Item. The four main states that are defined for the User Story (Agile) are New, Active, Resolved, and Closed. See Workflow states for more details.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Specifies a list of Tags.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The Title of the Work Item.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// The Type of the Work Item. The work item type varies depending on the process used when creating the project(Agile, Basic, Scrum, Scrum). See Work Item Types for more details.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type WorkitemObservation struct {

	// Specifies the area where the Work Item is used.
	AreaPath *string `json:"areaPath,omitempty" tf:"area_path,omitempty"`

	// Specifies a list with Custom Fields for the Work Item.
	// +mapType=granular
	CustomFields map[string]*string `json:"customFields,omitempty" tf:"custom_fields,omitempty"`

	// The ID of the Work Item.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the iteration in which the Work Item is used.
	IterationPath *string `json:"iterationPath,omitempty" tf:"iteration_path,omitempty"`

	// The parent work item.
	ParentID *float64 `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// The ID of the Project.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// A relations blocks as documented below.
	Relations []RelationsObservation `json:"relations,omitempty" tf:"relations,omitempty"`

	// The state of the Work Item. The four main states that are defined for the User Story (Agile) are New, Active, Resolved, and Closed. See Workflow states for more details.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Specifies a list of Tags.
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The Title of the Work Item.
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// The Type of the Work Item. The work item type varies depending on the process used when creating the project(Agile, Basic, Scrum, Scrum). See Work Item Types for more details.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The URL of the Work Item.
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type WorkitemParameters struct {

	// Specifies the area where the Work Item is used.
	// +kubebuilder:validation:Optional
	AreaPath *string `json:"areaPath,omitempty" tf:"area_path,omitempty"`

	// Specifies a list with Custom Fields for the Work Item.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	CustomFields map[string]*string `json:"customFields,omitempty" tf:"custom_fields,omitempty"`

	// Specifies the iteration in which the Work Item is used.
	// +kubebuilder:validation:Optional
	IterationPath *string `json:"iterationPath,omitempty" tf:"iteration_path,omitempty"`

	// The parent work item.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Workitem
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ParentID *float64 `json:"parentId,omitempty" tf:"parent_id,omitempty"`

	// Reference to a Workitem in project to populate parentId.
	// +kubebuilder:validation:Optional
	ParentIDRef *v1.Reference `json:"parentIdRef,omitempty" tf:"-"`

	// Selector for a Workitem in project to populate parentId.
	// +kubebuilder:validation:Optional
	ParentIDSelector *v1.Selector `json:"parentIdSelector,omitempty" tf:"-"`

	// The ID of the Project.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// The state of the Work Item. The four main states that are defined for the User Story (Agile) are New, Active, Resolved, and Closed. See Workflow states for more details.
	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Specifies a list of Tags.
	// +kubebuilder:validation:Optional
	// +listType=set
	Tags []*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The Title of the Work Item.
	// +kubebuilder:validation:Optional
	Title *string `json:"title,omitempty" tf:"title,omitempty"`

	// The Type of the Work Item. The work item type varies depending on the process used when creating the project(Agile, Basic, Scrum, Scrum). See Work Item Types for more details.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// WorkitemSpec defines the desired state of Workitem
type WorkitemSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     WorkitemParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider WorkitemInitParameters `json:"initProvider,omitempty"`
}

// WorkitemStatus defines the observed state of Workitem.
type WorkitemStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        WorkitemObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Workitem is the Schema for the Workitems API. Manages a Work Item in Azure Devops.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azuredevops}
type Workitem struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.title) || (has(self.initProvider) && has(self.initProvider.title))",message="spec.forProvider.title is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   WorkitemSpec   `json:"spec"`
	Status WorkitemStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// WorkitemList contains a list of Workitems
type WorkitemList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Workitem `json:"items"`
}

// Repository type metadata.
var (
	Workitem_Kind             = "Workitem"
	Workitem_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Workitem_Kind}.String()
	Workitem_KindAPIVersion   = Workitem_Kind + "." + CRDGroupVersion.String()
	Workitem_GroupVersionKind = CRDGroupVersion.WithKind(Workitem_Kind)
)

func init() {
	SchemeBuilder.Register(&Workitem{}, &WorkitemList{})
}
