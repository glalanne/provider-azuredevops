// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type ServiceendpointIncomingwebhookInitParameters struct {

	// The Service Endpoint description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Http header name on which checksum will be sent.
	// Optional http header name on which checksum will be sent.
	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// The ID of the project. Changing this forces a new Service Connection Incoming WebHook to be created.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// Secret for the WebHook. WebHook service will use this secret to calculate the payload checksum.
	// Optional secret for the webhook. WebHook service will use this secret to calculate the payload checksum.
	SecretSecretRef *v1.SecretKeySelector `json:"secretSecretRef,omitempty" tf:"-"`

	// The name of the service endpoint. Changing this forces a new Service Connection Incoming WebHook to be created.
	ServiceEndpointName *string `json:"serviceEndpointName,omitempty" tf:"service_endpoint_name,omitempty"`

	// The name of the WebHook.
	// The name of the WebHook.
	WebhookName *string `json:"webhookName,omitempty" tf:"webhook_name,omitempty"`
}

type ServiceendpointIncomingwebhookObservation struct {

	// +mapType=granular
	Authorization map[string]*string `json:"authorization,omitempty" tf:"authorization,omitempty"`

	// The Service Endpoint description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Http header name on which checksum will be sent.
	// Optional http header name on which checksum will be sent.
	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// The ID of the service endpoint.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the project. Changing this forces a new Service Connection Incoming WebHook to be created.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The name of the service endpoint. Changing this forces a new Service Connection Incoming WebHook to be created.
	ServiceEndpointName *string `json:"serviceEndpointName,omitempty" tf:"service_endpoint_name,omitempty"`

	// The name of the WebHook.
	// The name of the WebHook.
	WebhookName *string `json:"webhookName,omitempty" tf:"webhook_name,omitempty"`
}

type ServiceendpointIncomingwebhookParameters struct {

	// The Service Endpoint description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Http header name on which checksum will be sent.
	// Optional http header name on which checksum will be sent.
	// +kubebuilder:validation:Optional
	HTTPHeader *string `json:"httpHeader,omitempty" tf:"http_header,omitempty"`

	// The ID of the project. Changing this forces a new Service Connection Incoming WebHook to be created.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// Secret for the WebHook. WebHook service will use this secret to calculate the payload checksum.
	// Optional secret for the webhook. WebHook service will use this secret to calculate the payload checksum.
	// +kubebuilder:validation:Optional
	SecretSecretRef *v1.SecretKeySelector `json:"secretSecretRef,omitempty" tf:"-"`

	// The name of the service endpoint. Changing this forces a new Service Connection Incoming WebHook to be created.
	// +kubebuilder:validation:Optional
	ServiceEndpointName *string `json:"serviceEndpointName,omitempty" tf:"service_endpoint_name,omitempty"`

	// The name of the WebHook.
	// The name of the WebHook.
	// +kubebuilder:validation:Optional
	WebhookName *string `json:"webhookName,omitempty" tf:"webhook_name,omitempty"`
}

// ServiceendpointIncomingwebhookSpec defines the desired state of ServiceendpointIncomingwebhook
type ServiceendpointIncomingwebhookSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceendpointIncomingwebhookParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceendpointIncomingwebhookInitParameters `json:"initProvider,omitempty"`
}

// ServiceendpointIncomingwebhookStatus defines the observed state of ServiceendpointIncomingwebhook.
type ServiceendpointIncomingwebhookStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceendpointIncomingwebhookObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceendpointIncomingwebhook is the Schema for the ServiceendpointIncomingwebhooks API. Manages a Service Connection Incoming WebHook.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azuredevops}
type ServiceendpointIncomingwebhook struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.serviceEndpointName) || (has(self.initProvider) && has(self.initProvider.serviceEndpointName))",message="spec.forProvider.serviceEndpointName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.webhookName) || (has(self.initProvider) && has(self.initProvider.webhookName))",message="spec.forProvider.webhookName is a required parameter"
	Spec   ServiceendpointIncomingwebhookSpec   `json:"spec"`
	Status ServiceendpointIncomingwebhookStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceendpointIncomingwebhookList contains a list of ServiceendpointIncomingwebhooks
type ServiceendpointIncomingwebhookList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceendpointIncomingwebhook `json:"items"`
}

// Repository type metadata.
var (
	ServiceendpointIncomingwebhook_Kind             = "ServiceendpointIncomingwebhook"
	ServiceendpointIncomingwebhook_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceendpointIncomingwebhook_Kind}.String()
	ServiceendpointIncomingwebhook_KindAPIVersion   = ServiceendpointIncomingwebhook_Kind + "." + CRDGroupVersion.String()
	ServiceendpointIncomingwebhook_GroupVersionKind = CRDGroupVersion.WithKind(ServiceendpointIncomingwebhook_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceendpointIncomingwebhook{}, &ServiceendpointIncomingwebhookList{})
}
