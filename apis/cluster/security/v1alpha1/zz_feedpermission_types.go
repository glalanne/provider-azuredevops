// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type FeedPermissionInitParameters struct {

	// The display name of the assignment
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The ID of the Feed.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/artifacts/v1alpha1.Feed
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	FeedID *string `json:"feedId,omitempty" tf:"feed_id,omitempty"`

	// Reference to a Feed in artifacts to populate feedId.
	// +kubebuilder:validation:Optional
	FeedIDRef *v1.Reference `json:"feedIdRef,omitempty" tf:"-"`

	// Selector for a Feed in artifacts to populate feedId.
	// +kubebuilder:validation:Optional
	FeedIDSelector *v1.Selector `json:"feedIdSelector,omitempty" tf:"-"`

	// The Descriptor of identity you want to assign a role.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/security/v1alpha1.Group
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("descriptor",true)
	IdentityDescriptor *string `json:"identityDescriptor,omitempty" tf:"identity_descriptor,omitempty"`

	// Reference to a Group in security to populate identityDescriptor.
	// +kubebuilder:validation:Optional
	IdentityDescriptorRef *v1.Reference `json:"identityDescriptorRef,omitempty" tf:"-"`

	// Selector for a Group in security to populate identityDescriptor.
	// +kubebuilder:validation:Optional
	IdentityDescriptorSelector *v1.Selector `json:"identityDescriptorSelector,omitempty" tf:"-"`

	// The ID of the Project Feed is created in. If not specified, feed will be created at the organization level.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The role to be assigned. Possible values are: reader, contributor, collaborator, administrator
	Role *string `json:"role,omitempty" tf:"role,omitempty"`
}

type FeedPermissionObservation struct {

	// The display name of the assignment
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The ID of the Feed.
	FeedID *string `json:"feedId,omitempty" tf:"feed_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The Descriptor of identity you want to assign a role.
	IdentityDescriptor *string `json:"identityDescriptor,omitempty" tf:"identity_descriptor,omitempty"`

	// The ID of the identity.
	IdentityID *string `json:"identityId,omitempty" tf:"identity_id,omitempty"`

	// The ID of the Project Feed is created in. If not specified, feed will be created at the organization level.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The role to be assigned. Possible values are: reader, contributor, collaborator, administrator
	Role *string `json:"role,omitempty" tf:"role,omitempty"`
}

type FeedPermissionParameters struct {

	// The display name of the assignment
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// The ID of the Feed.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/artifacts/v1alpha1.Feed
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	FeedID *string `json:"feedId,omitempty" tf:"feed_id,omitempty"`

	// Reference to a Feed in artifacts to populate feedId.
	// +kubebuilder:validation:Optional
	FeedIDRef *v1.Reference `json:"feedIdRef,omitempty" tf:"-"`

	// Selector for a Feed in artifacts to populate feedId.
	// +kubebuilder:validation:Optional
	FeedIDSelector *v1.Selector `json:"feedIdSelector,omitempty" tf:"-"`

	// The Descriptor of identity you want to assign a role.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/security/v1alpha1.Group
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractParamPath("descriptor",true)
	// +kubebuilder:validation:Optional
	IdentityDescriptor *string `json:"identityDescriptor,omitempty" tf:"identity_descriptor,omitempty"`

	// Reference to a Group in security to populate identityDescriptor.
	// +kubebuilder:validation:Optional
	IdentityDescriptorRef *v1.Reference `json:"identityDescriptorRef,omitempty" tf:"-"`

	// Selector for a Group in security to populate identityDescriptor.
	// +kubebuilder:validation:Optional
	IdentityDescriptorSelector *v1.Selector `json:"identityDescriptorSelector,omitempty" tf:"-"`

	// The ID of the Project Feed is created in. If not specified, feed will be created at the organization level.
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The role to be assigned. Possible values are: reader, contributor, collaborator, administrator
	// +kubebuilder:validation:Optional
	Role *string `json:"role,omitempty" tf:"role,omitempty"`
}

// FeedPermissionSpec defines the desired state of FeedPermission
type FeedPermissionSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     FeedPermissionParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider FeedPermissionInitParameters `json:"initProvider,omitempty"`
}

// FeedPermissionStatus defines the observed state of FeedPermission.
type FeedPermissionStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        FeedPermissionObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// FeedPermission is the Schema for the FeedPermissions API. Manages creation of the Feed Permission within Azure DevOps organization.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azuredevops}
type FeedPermission struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.role) || (has(self.initProvider) && has(self.initProvider.role))",message="spec.forProvider.role is a required parameter"
	Spec   FeedPermissionSpec   `json:"spec"`
	Status FeedPermissionStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// FeedPermissionList contains a list of FeedPermissions
type FeedPermissionList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []FeedPermission `json:"items"`
}

// Repository type metadata.
var (
	FeedPermission_Kind             = "FeedPermission"
	FeedPermission_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: FeedPermission_Kind}.String()
	FeedPermission_KindAPIVersion   = FeedPermission_Kind + "." + CRDGroupVersion.String()
	FeedPermission_GroupVersionKind = CRDGroupVersion.WithKind(FeedPermission_Kind)
)

func init() {
	SchemeBuilder.Register(&FeedPermission{}, &FeedPermissionList{})
}
