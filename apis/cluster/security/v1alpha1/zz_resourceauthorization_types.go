// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type ResourceAuthorizationInitParameters struct {

	// Set to true to allow public access in the project.
	// indicates whether the resource is authorized for use
	Authorized *bool `json:"authorized,omitempty" tf:"authorized,omitempty"`

	// The ID of the build definition to authorize.
	// id of the build definition
	DefinitionID *float64 `json:"definitionId,omitempty" tf:"definition_id,omitempty"`

	// The project ID or project name.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// The ID of the resource to authorize.
	// id of the resource
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/serviceendpoint/v1alpha1.ServiceendpointBitbucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Reference to a ServiceendpointBitbucket in serviceendpoint to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDRef *v1.Reference `json:"resourceIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointBitbucket in serviceendpoint to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDSelector *v1.Selector `json:"resourceIdSelector,omitempty" tf:"-"`

	// The type of the resource to authorize. Possible values: endpoint, queue, variablegroup. Defaults to value: endpoint.
	// type of the resource
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResourceAuthorizationObservation struct {

	// Set to true to allow public access in the project.
	// indicates whether the resource is authorized for use
	Authorized *bool `json:"authorized,omitempty" tf:"authorized,omitempty"`

	// The ID of the build definition to authorize.
	// id of the build definition
	DefinitionID *float64 `json:"definitionId,omitempty" tf:"definition_id,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The project ID or project name.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The ID of the resource to authorize.
	// id of the resource
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// The type of the resource to authorize. Possible values: endpoint, queue, variablegroup. Defaults to value: endpoint.
	// type of the resource
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ResourceAuthorizationParameters struct {

	// Set to true to allow public access in the project.
	// indicates whether the resource is authorized for use
	// +kubebuilder:validation:Optional
	Authorized *bool `json:"authorized,omitempty" tf:"authorized,omitempty"`

	// The ID of the build definition to authorize.
	// id of the build definition
	// +kubebuilder:validation:Optional
	DefinitionID *float64 `json:"definitionId,omitempty" tf:"definition_id,omitempty"`

	// The project ID or project name.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// The ID of the resource to authorize.
	// id of the resource
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/serviceendpoint/v1alpha1.ServiceendpointBitbucket
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Reference to a ServiceendpointBitbucket in serviceendpoint to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDRef *v1.Reference `json:"resourceIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointBitbucket in serviceendpoint to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDSelector *v1.Selector `json:"resourceIdSelector,omitempty" tf:"-"`

	// The type of the resource to authorize. Possible values: endpoint, queue, variablegroup. Defaults to value: endpoint.
	// type of the resource
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// ResourceAuthorizationSpec defines the desired state of ResourceAuthorization
type ResourceAuthorizationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ResourceAuthorizationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ResourceAuthorizationInitParameters `json:"initProvider,omitempty"`
}

// ResourceAuthorizationStatus defines the observed state of ResourceAuthorization.
type ResourceAuthorizationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ResourceAuthorizationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ResourceAuthorization is the Schema for the ResourceAuthorizations API. Manages authorization of resources within Azure DevOps organization.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azuredevops}
type ResourceAuthorization struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authorized) || (has(self.initProvider) && has(self.initProvider.authorized))",message="spec.forProvider.authorized is a required parameter"
	Spec   ResourceAuthorizationSpec   `json:"spec"`
	Status ResourceAuthorizationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ResourceAuthorizationList contains a list of ResourceAuthorizations
type ResourceAuthorizationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ResourceAuthorization `json:"items"`
}

// Repository type metadata.
var (
	ResourceAuthorization_Kind             = "ResourceAuthorization"
	ResourceAuthorization_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ResourceAuthorization_Kind}.String()
	ResourceAuthorization_KindAPIVersion   = ResourceAuthorization_Kind + "." + CRDGroupVersion.String()
	ResourceAuthorization_GroupVersionKind = CRDGroupVersion.WithKind(ResourceAuthorization_Kind)
)

func init() {
	SchemeBuilder.Register(&ResourceAuthorization{}, &ResourceAuthorizationList{})
}
