// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type PipelineAuthorizationInitParameters struct {

	// The ID of the pipeline. If not configured, all pipelines will be authorized. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/pipelines/v1alpha1.BuildDefinition
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	PipelineID *float64 `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`

	// Reference to a BuildDefinition in pipelines to populate pipelineId.
	// +kubebuilder:validation:Optional
	PipelineIDRef *v1.Reference `json:"pipelineIdRef,omitempty" tf:"-"`

	// Selector for a BuildDefinition in pipelines to populate pipelineId.
	// +kubebuilder:validation:Optional
	PipelineIDSelector *v1.Selector `json:"pipelineIdSelector,omitempty" tf:"-"`

	// The ID of the project where the pipeline exists. Defaults to project_id if not specified. Changing this forces a new resource to be created
	PipelineProjectID *string `json:"pipelineProjectId,omitempty" tf:"pipeline_project_id,omitempty"`

	// The  ID of the project. Changing this forces a new resource to be created
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// The ID of the resource to authorize. Changing this forces a new resource to be created
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/agents/v1alpha1.AgentQueue
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Reference to a AgentQueue in agents to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDRef *v1.Reference `json:"resourceIdRef,omitempty" tf:"-"`

	// Selector for a AgentQueue in agents to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDSelector *v1.Selector `json:"resourceIdSelector,omitempty" tf:"-"`

	// The type of the resource to authorize. Possible values are: endpoint, queue, variablegroup, environment, repository. Changing this forces a new resource to be created
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PipelineAuthorizationObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The ID of the pipeline. If not configured, all pipelines will be authorized. Changing this forces a new resource to be created.
	PipelineID *float64 `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`

	// The ID of the project where the pipeline exists. Defaults to project_id if not specified. Changing this forces a new resource to be created
	PipelineProjectID *string `json:"pipelineProjectId,omitempty" tf:"pipeline_project_id,omitempty"`

	// The  ID of the project. Changing this forces a new resource to be created
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// The ID of the resource to authorize. Changing this forces a new resource to be created
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// The type of the resource to authorize. Possible values are: endpoint, queue, variablegroup, environment, repository. Changing this forces a new resource to be created
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type PipelineAuthorizationParameters struct {

	// The ID of the pipeline. If not configured, all pipelines will be authorized. Changing this forces a new resource to be created.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/pipelines/v1alpha1.BuildDefinition
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	PipelineID *float64 `json:"pipelineId,omitempty" tf:"pipeline_id,omitempty"`

	// Reference to a BuildDefinition in pipelines to populate pipelineId.
	// +kubebuilder:validation:Optional
	PipelineIDRef *v1.Reference `json:"pipelineIdRef,omitempty" tf:"-"`

	// Selector for a BuildDefinition in pipelines to populate pipelineId.
	// +kubebuilder:validation:Optional
	PipelineIDSelector *v1.Selector `json:"pipelineIdSelector,omitempty" tf:"-"`

	// The ID of the project where the pipeline exists. Defaults to project_id if not specified. Changing this forces a new resource to be created
	// +kubebuilder:validation:Optional
	PipelineProjectID *string `json:"pipelineProjectId,omitempty" tf:"pipeline_project_id,omitempty"`

	// The  ID of the project. Changing this forces a new resource to be created
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// The ID of the resource to authorize. Changing this forces a new resource to be created
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/agents/v1alpha1.AgentQueue
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ResourceID *string `json:"resourceId,omitempty" tf:"resource_id,omitempty"`

	// Reference to a AgentQueue in agents to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDRef *v1.Reference `json:"resourceIdRef,omitempty" tf:"-"`

	// Selector for a AgentQueue in agents to populate resourceId.
	// +kubebuilder:validation:Optional
	ResourceIDSelector *v1.Selector `json:"resourceIdSelector,omitempty" tf:"-"`

	// The type of the resource to authorize. Possible values are: endpoint, queue, variablegroup, environment, repository. Changing this forces a new resource to be created
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// PipelineAuthorizationSpec defines the desired state of PipelineAuthorization
type PipelineAuthorizationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PipelineAuthorizationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PipelineAuthorizationInitParameters `json:"initProvider,omitempty"`
}

// PipelineAuthorizationStatus defines the observed state of PipelineAuthorization.
type PipelineAuthorizationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PipelineAuthorizationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PipelineAuthorization is the Schema for the PipelineAuthorizations API. Manages Pipeline Authorizations within Azure DevOps Project.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azuredevops}
type PipelineAuthorization struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   PipelineAuthorizationSpec   `json:"spec"`
	Status PipelineAuthorizationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PipelineAuthorizationList contains a list of PipelineAuthorizations
type PipelineAuthorizationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PipelineAuthorization `json:"items"`
}

// Repository type metadata.
var (
	PipelineAuthorization_Kind             = "PipelineAuthorization"
	PipelineAuthorization_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PipelineAuthorization_Kind}.String()
	PipelineAuthorization_KindAPIVersion   = PipelineAuthorization_Kind + "." + CRDGroupVersion.String()
	PipelineAuthorization_GroupVersionKind = CRDGroupVersion.WithKind(PipelineAuthorization_Kind)
)

func init() {
	SchemeBuilder.Register(&PipelineAuthorization{}, &PipelineAuthorizationList{})
}
