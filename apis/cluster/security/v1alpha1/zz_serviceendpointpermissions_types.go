// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
)

type ServiceendpointPermissionsInitParameters struct {

	// the permissions to assign. The following permissions are available.
	// +mapType=granular
	Permissions map[string]*string `json:"permissions,omitempty" tf:"permissions,omitempty"`

	// The group principal to assign the permissions.
	Principal *string `json:"principal,omitempty" tf:"principal,omitempty"`

	// The ID of the project.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// Replace (true) or merge (false) the permissions. Default: true
	Replace *bool `json:"replace,omitempty" tf:"replace,omitempty"`

	// The id of the service endpoint to assign the permissions.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/serviceendpoint/v1alpha1.ServiceendpointDockerregistry
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	ServiceendpointID *string `json:"serviceendpointId,omitempty" tf:"serviceendpoint_id,omitempty"`

	// Reference to a ServiceendpointDockerregistry in serviceendpoint to populate serviceendpointId.
	// +kubebuilder:validation:Optional
	ServiceendpointIDRef *v1.Reference `json:"serviceendpointIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointDockerregistry in serviceendpoint to populate serviceendpointId.
	// +kubebuilder:validation:Optional
	ServiceendpointIDSelector *v1.Selector `json:"serviceendpointIdSelector,omitempty" tf:"-"`
}

type ServiceendpointPermissionsObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// the permissions to assign. The following permissions are available.
	// +mapType=granular
	Permissions map[string]*string `json:"permissions,omitempty" tf:"permissions,omitempty"`

	// The group principal to assign the permissions.
	Principal *string `json:"principal,omitempty" tf:"principal,omitempty"`

	// The ID of the project.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Replace (true) or merge (false) the permissions. Default: true
	Replace *bool `json:"replace,omitempty" tf:"replace,omitempty"`

	// The id of the service endpoint to assign the permissions.
	ServiceendpointID *string `json:"serviceendpointId,omitempty" tf:"serviceendpoint_id,omitempty"`
}

type ServiceendpointPermissionsParameters struct {

	// the permissions to assign. The following permissions are available.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Permissions map[string]*string `json:"permissions,omitempty" tf:"permissions,omitempty"`

	// The group principal to assign the permissions.
	// +kubebuilder:validation:Optional
	Principal *string `json:"principal,omitempty" tf:"principal,omitempty"`

	// The ID of the project.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/project/v1alpha1.Project
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Reference to a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDRef *v1.Reference `json:"projectIdRef,omitempty" tf:"-"`

	// Selector for a Project in project to populate projectId.
	// +kubebuilder:validation:Optional
	ProjectIDSelector *v1.Selector `json:"projectIdSelector,omitempty" tf:"-"`

	// Replace (true) or merge (false) the permissions. Default: true
	// +kubebuilder:validation:Optional
	Replace *bool `json:"replace,omitempty" tf:"replace,omitempty"`

	// The id of the service endpoint to assign the permissions.
	// +crossplane:generate:reference:type=github.com/glalanne/provider-azuredevops/apis/cluster/serviceendpoint/v1alpha1.ServiceendpointDockerregistry
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/v2/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	ServiceendpointID *string `json:"serviceendpointId,omitempty" tf:"serviceendpoint_id,omitempty"`

	// Reference to a ServiceendpointDockerregistry in serviceendpoint to populate serviceendpointId.
	// +kubebuilder:validation:Optional
	ServiceendpointIDRef *v1.Reference `json:"serviceendpointIdRef,omitempty" tf:"-"`

	// Selector for a ServiceendpointDockerregistry in serviceendpoint to populate serviceendpointId.
	// +kubebuilder:validation:Optional
	ServiceendpointIDSelector *v1.Selector `json:"serviceendpointIdSelector,omitempty" tf:"-"`
}

// ServiceendpointPermissionsSpec defines the desired state of ServiceendpointPermissions
type ServiceendpointPermissionsSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ServiceendpointPermissionsParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ServiceendpointPermissionsInitParameters `json:"initProvider,omitempty"`
}

// ServiceendpointPermissionsStatus defines the observed state of ServiceendpointPermissions.
type ServiceendpointPermissionsStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ServiceendpointPermissionsObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// ServiceendpointPermissions is the Schema for the ServiceendpointPermissionss API. Manages permissions for a AzureDevOps Service Endpoint
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,azuredevops}
type ServiceendpointPermissions struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.permissions) || (has(self.initProvider) && has(self.initProvider.permissions))",message="spec.forProvider.permissions is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.principal) || (has(self.initProvider) && has(self.initProvider.principal))",message="spec.forProvider.principal is a required parameter"
	Spec   ServiceendpointPermissionsSpec   `json:"spec"`
	Status ServiceendpointPermissionsStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ServiceendpointPermissionsList contains a list of ServiceendpointPermissionss
type ServiceendpointPermissionsList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ServiceendpointPermissions `json:"items"`
}

// Repository type metadata.
var (
	ServiceendpointPermissions_Kind             = "ServiceendpointPermissions"
	ServiceendpointPermissions_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ServiceendpointPermissions_Kind}.String()
	ServiceendpointPermissions_KindAPIVersion   = ServiceendpointPermissions_Kind + "." + CRDGroupVersion.String()
	ServiceendpointPermissions_GroupVersionKind = CRDGroupVersion.WithKind(ServiceendpointPermissions_Kind)
)

func init() {
	SchemeBuilder.Register(&ServiceendpointPermissions{}, &ServiceendpointPermissionsList{})
}
