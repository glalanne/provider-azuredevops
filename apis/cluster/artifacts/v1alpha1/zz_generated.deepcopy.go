//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/v2/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesInitParameters) DeepCopyInto(out *FeaturesInitParameters) {
	*out = *in
	if in.PermanentDelete != nil {
		in, out := &in.PermanentDelete, &out.PermanentDelete
		*out = new(bool)
		**out = **in
	}
	if in.Restore != nil {
		in, out := &in.Restore, &out.Restore
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesInitParameters.
func (in *FeaturesInitParameters) DeepCopy() *FeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesObservation) DeepCopyInto(out *FeaturesObservation) {
	*out = *in
	if in.PermanentDelete != nil {
		in, out := &in.PermanentDelete, &out.PermanentDelete
		*out = new(bool)
		**out = **in
	}
	if in.Restore != nil {
		in, out := &in.Restore, &out.Restore
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesObservation.
func (in *FeaturesObservation) DeepCopy() *FeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(FeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeaturesParameters) DeepCopyInto(out *FeaturesParameters) {
	*out = *in
	if in.PermanentDelete != nil {
		in, out := &in.PermanentDelete, &out.PermanentDelete
		*out = new(bool)
		**out = **in
	}
	if in.Restore != nil {
		in, out := &in.Restore, &out.Restore
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeaturesParameters.
func (in *FeaturesParameters) DeepCopy() *FeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(FeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Feed) DeepCopyInto(out *Feed) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Feed.
func (in *Feed) DeepCopy() *Feed {
	if in == nil {
		return nil
	}
	out := new(Feed)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Feed) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedInitParameters) DeepCopyInto(out *FeedInitParameters) {
	*out = *in
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]FeaturesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedInitParameters.
func (in *FeedInitParameters) DeepCopy() *FeedInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeedInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedList) DeepCopyInto(out *FeedList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Feed, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedList.
func (in *FeedList) DeepCopy() *FeedList {
	if in == nil {
		return nil
	}
	out := new(FeedList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeedList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedObservation) DeepCopyInto(out *FeedObservation) {
	*out = *in
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]FeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedObservation.
func (in *FeedObservation) DeepCopy() *FeedObservation {
	if in == nil {
		return nil
	}
	out := new(FeedObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedParameters) DeepCopyInto(out *FeedParameters) {
	*out = *in
	if in.Features != nil {
		in, out := &in.Features, &out.Features
		*out = make([]FeaturesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedParameters.
func (in *FeedParameters) DeepCopy() *FeedParameters {
	if in == nil {
		return nil
	}
	out := new(FeedParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedRetentionPolicy) DeepCopyInto(out *FeedRetentionPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedRetentionPolicy.
func (in *FeedRetentionPolicy) DeepCopy() *FeedRetentionPolicy {
	if in == nil {
		return nil
	}
	out := new(FeedRetentionPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeedRetentionPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedRetentionPolicyInitParameters) DeepCopyInto(out *FeedRetentionPolicyInitParameters) {
	*out = *in
	if in.CountLimit != nil {
		in, out := &in.CountLimit, &out.CountLimit
		*out = new(float64)
		**out = **in
	}
	if in.DaysToKeepRecentlyDownloadedPackages != nil {
		in, out := &in.DaysToKeepRecentlyDownloadedPackages, &out.DaysToKeepRecentlyDownloadedPackages
		*out = new(float64)
		**out = **in
	}
	if in.FeedID != nil {
		in, out := &in.FeedID, &out.FeedID
		*out = new(string)
		**out = **in
	}
	if in.FeedIDRef != nil {
		in, out := &in.FeedIDRef, &out.FeedIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FeedIDSelector != nil {
		in, out := &in.FeedIDSelector, &out.FeedIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedRetentionPolicyInitParameters.
func (in *FeedRetentionPolicyInitParameters) DeepCopy() *FeedRetentionPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(FeedRetentionPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedRetentionPolicyList) DeepCopyInto(out *FeedRetentionPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FeedRetentionPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedRetentionPolicyList.
func (in *FeedRetentionPolicyList) DeepCopy() *FeedRetentionPolicyList {
	if in == nil {
		return nil
	}
	out := new(FeedRetentionPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FeedRetentionPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedRetentionPolicyObservation) DeepCopyInto(out *FeedRetentionPolicyObservation) {
	*out = *in
	if in.CountLimit != nil {
		in, out := &in.CountLimit, &out.CountLimit
		*out = new(float64)
		**out = **in
	}
	if in.DaysToKeepRecentlyDownloadedPackages != nil {
		in, out := &in.DaysToKeepRecentlyDownloadedPackages, &out.DaysToKeepRecentlyDownloadedPackages
		*out = new(float64)
		**out = **in
	}
	if in.FeedID != nil {
		in, out := &in.FeedID, &out.FeedID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedRetentionPolicyObservation.
func (in *FeedRetentionPolicyObservation) DeepCopy() *FeedRetentionPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(FeedRetentionPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedRetentionPolicyParameters) DeepCopyInto(out *FeedRetentionPolicyParameters) {
	*out = *in
	if in.CountLimit != nil {
		in, out := &in.CountLimit, &out.CountLimit
		*out = new(float64)
		**out = **in
	}
	if in.DaysToKeepRecentlyDownloadedPackages != nil {
		in, out := &in.DaysToKeepRecentlyDownloadedPackages, &out.DaysToKeepRecentlyDownloadedPackages
		*out = new(float64)
		**out = **in
	}
	if in.FeedID != nil {
		in, out := &in.FeedID, &out.FeedID
		*out = new(string)
		**out = **in
	}
	if in.FeedIDRef != nil {
		in, out := &in.FeedIDRef, &out.FeedIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.FeedIDSelector != nil {
		in, out := &in.FeedIDSelector, &out.FeedIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedRetentionPolicyParameters.
func (in *FeedRetentionPolicyParameters) DeepCopy() *FeedRetentionPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(FeedRetentionPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedRetentionPolicySpec) DeepCopyInto(out *FeedRetentionPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedRetentionPolicySpec.
func (in *FeedRetentionPolicySpec) DeepCopy() *FeedRetentionPolicySpec {
	if in == nil {
		return nil
	}
	out := new(FeedRetentionPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedRetentionPolicyStatus) DeepCopyInto(out *FeedRetentionPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedRetentionPolicyStatus.
func (in *FeedRetentionPolicyStatus) DeepCopy() *FeedRetentionPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(FeedRetentionPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedSpec) DeepCopyInto(out *FeedSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedSpec.
func (in *FeedSpec) DeepCopy() *FeedSpec {
	if in == nil {
		return nil
	}
	out := new(FeedSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FeedStatus) DeepCopyInto(out *FeedStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FeedStatus.
func (in *FeedStatus) DeepCopy() *FeedStatus {
	if in == nil {
		return nil
	}
	out := new(FeedStatus)
	in.DeepCopyInto(out)
	return out
}
