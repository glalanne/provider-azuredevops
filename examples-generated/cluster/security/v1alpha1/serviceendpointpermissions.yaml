apiVersion: security.azuredevops.crossplane.io/v1alpha1
kind: ServiceendpointPermissions
metadata:
  annotations:
    meta.upbound.io/example-id: security/v1alpha1/serviceendpointpermissions
  labels:
    testing.upbound.io/example-name: example-root-permissions
  name: example-root-permissions
spec:
  forProvider:
    permissions:
      Administer: allow
      Create: allow
      Use: allow
      ViewAuthorization: allow
      ViewEndpoint: allow
    principal: ${data.azuredevops_group.example-readers.id}
    projectIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example

---

apiVersion: project.azuredevops.crossplane.io/v1alpha1
kind: Project
metadata:
  annotations:
    meta.upbound.io/example-id: security/v1alpha1/serviceendpointpermissions
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    description: Managed by Terraform
    name: Example Project
    versionControl: Git
    visibility: private
    workItemTemplate: Agile

---

apiVersion: serviceendpoint.azuredevops.crossplane.io/v1alpha1
kind: ServiceendpointDockerregistry
metadata:
  annotations:
    meta.upbound.io/example-id: security/v1alpha1/serviceendpointpermissions
  labels:
    testing.upbound.io/example-name: example
  name: example
spec:
  forProvider:
    dockerEmail: email@example.com
    dockerPasswordSecretRef:
      key: example-key
      name: example-secret
      namespace: upbound-system
    dockerUsername: username
    projectIdSelector:
      matchLabels:
        testing.upbound.io/example-name: example
    registryType: DockerHub
    serviceEndpointName: Example Docker Hub
