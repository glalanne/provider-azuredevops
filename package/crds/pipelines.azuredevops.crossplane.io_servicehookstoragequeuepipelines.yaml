---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: servicehookstoragequeuepipelines.pipelines.azuredevops.crossplane.io
spec:
  group: pipelines.azuredevops.crossplane.io
  names:
    categories:
    - crossplane
    - managed
    - azuredevops
    kind: ServicehookStorageQueuePipelines
    listKind: ServicehookStorageQueuePipelinesList
    plural: servicehookstoragequeuepipelines
    singular: servicehookstoragequeuepipelines
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServicehookStorageQueuePipelines is the Schema for the ServicehookStorageQueuePipeliness
          API. Manages a Storage Queue Pipelines Service Hook.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServicehookStorageQueuePipelinesSpec defines the desired
              state of ServicehookStorageQueuePipelines
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountKeySecretRef:
                    description: |-
                      A valid account key from the queue's storage account.
                      A valid account key from the queue's storage account
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  accountName:
                    description: |-
                      The queue's storage account name.
                      The queue's storage account name
                    type: string
                  projectId:
                    description: |-
                      The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
                      The ID of the project
                    type: string
                  projectIdRef:
                    description: Reference to a Project in project to populate projectId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectIdSelector:
                    description: Selector for a Project in project to populate projectId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  queueName:
                    description: |-
                      The name of the queue that will store the events.
                      The name of the queue that will store the events
                    type: string
                  runStateChangedEvent:
                    description: A run_state_changed_event block as defined below.
                      Conflicts with stage_state_changed_event
                    properties:
                      pipelineId:
                        description: |-
                          The pipeline ID that will generate an event. If not specified, all pipelines in the project will trigger the event.
                          The pipeline ID to be monitored. If not specified, all pipelines in the project will trigger the event
                        type: string
                      runResultFilter:
                        description: |-
                          Which run result should generate an event. Only valid if published_event is RunStateChanged. If not specified, all results will trigger the event.
                          Which run result should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all results will trigger the event
                        type: string
                      runStateFilter:
                        description: |-
                          Which run state should generate an event. Only valid if published_event is RunStateChanged. If not specified, all states will trigger the event.
                          Which run state should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all states will trigger the event
                        type: string
                    type: object
                  stageStateChangedEvent:
                    description: A stage_state_changed_event block as defined below.
                      Conflicts with run_state_changed_event
                    properties:
                      pipelineId:
                        description: |-
                          The pipeline ID that will generate an event.
                          The pipeline ID to be monitored. If not specified, all pipelines in the project will trigger the event
                        type: string
                      stageName:
                        description: |-
                          Which stage should generate an event. Only valid if published_event is StageStateChanged. If not specified, all stages will trigger the event.
                          Which stage should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all stages will trigger the event
                        type: string
                      stageResultFilter:
                        description: |-
                          Which stage result should generate an event. Only valid if published_event is StageStateChanged. If not specified, all results will trigger the event.
                          Which stage result should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all results will trigger the event
                        type: string
                      stageStateFilter:
                        description: |-
                          Which stage state should generate an event. Only valid if published_event is StageStateChanged. If not specified, all states will trigger the event.
                          Which stage state should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all states will trigger the event
                        type: string
                    type: object
                  ttl:
                    description: |-
                      event time-to-live - the duration a message can remain in the queue before it's automatically removed. Defaults to 604800.
                      event time-to-live - the duration a message can remain in the queue before it's automatically removed
                    type: number
                  visiTimeout:
                    description: |-
                      event visibility timout - how long a message is invisible to other consumers after it's been dequeued. Defaults to 0.
                      event visibility timout - how long a message is invisible to other consumers after it's been dequeued
                    type: number
                type: object
              initProvider:
                description: |-
                  THIS IS A BETA FIELD. It will be honored
                  unless the Management Policies feature flag is disabled.
                  InitProvider holds the same fields as ForProvider, with the exception
                  of Identifier and other resource reference fields. The fields that are
                  in InitProvider are merged into ForProvider when the resource is created.
                  The same fields are also added to the terraform ignore_changes hook, to
                  avoid updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after creation,
                  for example because of an external controller is managing them, like an
                  autoscaler.
                properties:
                  accountKeySecretRef:
                    description: |-
                      A valid account key from the queue's storage account.
                      A valid account key from the queue's storage account
                    properties:
                      key:
                        description: The key to select.
                        type: string
                      name:
                        description: Name of the secret.
                        type: string
                      namespace:
                        description: Namespace of the secret.
                        type: string
                    required:
                    - key
                    - name
                    - namespace
                    type: object
                  accountName:
                    description: |-
                      The queue's storage account name.
                      The queue's storage account name
                    type: string
                  projectId:
                    description: |-
                      The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
                      The ID of the project
                    type: string
                  projectIdRef:
                    description: Reference to a Project in project to populate projectId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  projectIdSelector:
                    description: Selector for a Project in project to populate projectId.
                    properties:
                      matchControllerRef:
                        description: |-
                          MatchControllerRef ensures an object with the same controller reference
                          as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  queueName:
                    description: |-
                      The name of the queue that will store the events.
                      The name of the queue that will store the events
                    type: string
                  runStateChangedEvent:
                    description: A run_state_changed_event block as defined below.
                      Conflicts with stage_state_changed_event
                    properties:
                      pipelineId:
                        description: |-
                          The pipeline ID that will generate an event. If not specified, all pipelines in the project will trigger the event.
                          The pipeline ID to be monitored. If not specified, all pipelines in the project will trigger the event
                        type: string
                      runResultFilter:
                        description: |-
                          Which run result should generate an event. Only valid if published_event is RunStateChanged. If not specified, all results will trigger the event.
                          Which run result should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all results will trigger the event
                        type: string
                      runStateFilter:
                        description: |-
                          Which run state should generate an event. Only valid if published_event is RunStateChanged. If not specified, all states will trigger the event.
                          Which run state should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all states will trigger the event
                        type: string
                    type: object
                  stageStateChangedEvent:
                    description: A stage_state_changed_event block as defined below.
                      Conflicts with run_state_changed_event
                    properties:
                      pipelineId:
                        description: |-
                          The pipeline ID that will generate an event.
                          The pipeline ID to be monitored. If not specified, all pipelines in the project will trigger the event
                        type: string
                      stageName:
                        description: |-
                          Which stage should generate an event. Only valid if published_event is StageStateChanged. If not specified, all stages will trigger the event.
                          Which stage should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all stages will trigger the event
                        type: string
                      stageResultFilter:
                        description: |-
                          Which stage result should generate an event. Only valid if published_event is StageStateChanged. If not specified, all results will trigger the event.
                          Which stage result should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all results will trigger the event
                        type: string
                      stageStateFilter:
                        description: |-
                          Which stage state should generate an event. Only valid if published_event is StageStateChanged. If not specified, all states will trigger the event.
                          Which stage state should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all states will trigger the event
                        type: string
                    type: object
                  ttl:
                    description: |-
                      event time-to-live - the duration a message can remain in the queue before it's automatically removed. Defaults to 604800.
                      event time-to-live - the duration a message can remain in the queue before it's automatically removed
                    type: number
                  visiTimeout:
                    description: |-
                      event visibility timout - how long a message is invisible to other consumers after it's been dequeued. Defaults to 0.
                      event visibility timout - how long a message is invisible to other consumers after it's been dequeued
                    type: number
                required:
                - accountKeySecretRef
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: spec.forProvider.accountKeySecretRef is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.accountKeySecretRef)'
            - message: spec.forProvider.accountName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.accountName)
                || (has(self.initProvider) && has(self.initProvider.accountName))'
            - message: spec.forProvider.queueName is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.queueName)
                || (has(self.initProvider) && has(self.initProvider.queueName))'
          status:
            description: ServicehookStorageQueuePipelinesStatus defines the observed
              state of ServicehookStorageQueuePipelines.
            properties:
              atProvider:
                properties:
                  accountName:
                    description: |-
                      The queue's storage account name.
                      The queue's storage account name
                    type: string
                  id:
                    description: The ID of the Service Hook Storage Queue Pipelines.
                    type: string
                  projectId:
                    description: |-
                      The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
                      The ID of the project
                    type: string
                  queueName:
                    description: |-
                      The name of the queue that will store the events.
                      The name of the queue that will store the events
                    type: string
                  runStateChangedEvent:
                    description: A run_state_changed_event block as defined below.
                      Conflicts with stage_state_changed_event
                    properties:
                      pipelineId:
                        description: |-
                          The pipeline ID that will generate an event. If not specified, all pipelines in the project will trigger the event.
                          The pipeline ID to be monitored. If not specified, all pipelines in the project will trigger the event
                        type: string
                      runResultFilter:
                        description: |-
                          Which run result should generate an event. Only valid if published_event is RunStateChanged. If not specified, all results will trigger the event.
                          Which run result should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all results will trigger the event
                        type: string
                      runStateFilter:
                        description: |-
                          Which run state should generate an event. Only valid if published_event is RunStateChanged. If not specified, all states will trigger the event.
                          Which run state should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all states will trigger the event
                        type: string
                    type: object
                  stageStateChangedEvent:
                    description: A stage_state_changed_event block as defined below.
                      Conflicts with run_state_changed_event
                    properties:
                      pipelineId:
                        description: |-
                          The pipeline ID that will generate an event.
                          The pipeline ID to be monitored. If not specified, all pipelines in the project will trigger the event
                        type: string
                      stageName:
                        description: |-
                          Which stage should generate an event. Only valid if published_event is StageStateChanged. If not specified, all stages will trigger the event.
                          Which stage should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all stages will trigger the event
                        type: string
                      stageResultFilter:
                        description: |-
                          Which stage result should generate an event. Only valid if published_event is StageStateChanged. If not specified, all results will trigger the event.
                          Which stage result should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all results will trigger the event
                        type: string
                      stageStateFilter:
                        description: |-
                          Which stage state should generate an event. Only valid if published_event is StageStateChanged. If not specified, all states will trigger the event.
                          Which stage state should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all states will trigger the event
                        type: string
                    type: object
                  ttl:
                    description: |-
                      event time-to-live - the duration a message can remain in the queue before it's automatically removed. Defaults to 604800.
                      event time-to-live - the duration a message can remain in the queue before it's automatically removed
                    type: number
                  visiTimeout:
                    description: |-
                      event visibility timout - how long a message is invisible to other consumers after it's been dequeued. Defaults to 0.
                      event visibility timout - how long a message is invisible to other consumers after it's been dequeued
                    type: number
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              observedGeneration:
                description: |-
                  ObservedGeneration is the latest metadata.generation
                  which resulted in either a ready state, or stalled due to error
                  it can not recover from without human intervention.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
